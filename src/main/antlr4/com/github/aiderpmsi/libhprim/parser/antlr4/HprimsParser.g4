parser grammar HprimsParser;

options {

    // Default language but name it anyway
    //
    language  = Java;

    // Use the vocabulary generated by the accompanying
    // lexer. Maven knows how to work out the relationship
    // between the lexer and parser and will build the 
    // lexer before the parser. It will also rebuild the
    // parser if the lexer changes.
    //
    tokenVocab = HprimsLexer;
    
    superClass = AbstractHprimsParser;
    
}

@header {
import com.github.aiderpmsi.libhprim.parser.AbstractHprimsParser;
}

line_h
@init{System.out.println("Start");}
@after{System.out.println("End");} :
   content_h DELIMITER1 DELIMITER2 REPETITER ESC DELIMITER3 DELIMITER1 full_content[""] DELIMITER1;

full_content[String start] :
  g=content ((CR NONPRINTABLE* content_a DELIMITER1 full_content[start + $g.text]) | {System.out.println(start + $g.text);});

 content_a :
  {tryToken("A")}? content;
   
 content_h :
  {tryToken("H")}? content;

 content:
   PRINTABLE*;
 
