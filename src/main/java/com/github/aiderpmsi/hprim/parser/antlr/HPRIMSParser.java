// $ANTLR 3.4 C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g 2013-05-25 01:34:21

package com.github.aiderpmsi.hprim.parser.antlr;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.LinkedList;

import com.github.aiderpmsi.hprim.parser.MatchRegexTokenException;
import com.github.aiderpmsi.hprim.parser.ContentHandlerException;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class HPRIMSParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARA", "CHARB", "CHARC", "CHARD", "CHARE", "CHARF", "CHARG", "CHARH", "CHARI", "CHARK", "CHARL", "CHARM", "CHARN", "CHARO", "CHARP", "CHARR", "CHARS", "CHART", "CHARU", "CHARV", "CHARW", "CHARX", "CHAR_SYMBOL_INF", "CHAR_SYMBOL_SUP", "CHARl", "CHARu", "CHIFFRE0", "CHIFFRE1", "CHIFFRE2", "CHIFFRE3", "CHIFFRE4", "CHIFFRE5", "CHIFFRE6", "CHIFFRE7", "CHIFFRE8", "CHIFFRE9", "CR", "DELIMITER1", "DELIMITER2", "DELIMITER3", "DELIMITERS", "LETTRE", "MOINS", "PLUS", "POINT", "REPETITEUR", "TOKENMISMATCH"
    };

    public static final int EOF=-1;
    public static final int CHARA=4;
    public static final int CHARB=5;
    public static final int CHARC=6;
    public static final int CHARD=7;
    public static final int CHARE=8;
    public static final int CHARF=9;
    public static final int CHARG=10;
    public static final int CHARH=11;
    public static final int CHARI=12;
    public static final int CHARK=13;
    public static final int CHARL=14;
    public static final int CHARM=15;
    public static final int CHARN=16;
    public static final int CHARO=17;
    public static final int CHARP=18;
    public static final int CHARR=19;
    public static final int CHARS=20;
    public static final int CHART=21;
    public static final int CHARU=22;
    public static final int CHARV=23;
    public static final int CHARW=24;
    public static final int CHARX=25;
    public static final int CHAR_SYMBOL_INF=26;
    public static final int CHAR_SYMBOL_SUP=27;
    public static final int CHARl=28;
    public static final int CHARu=29;
    public static final int CHIFFRE0=30;
    public static final int CHIFFRE1=31;
    public static final int CHIFFRE2=32;
    public static final int CHIFFRE3=33;
    public static final int CHIFFRE4=34;
    public static final int CHIFFRE5=35;
    public static final int CHIFFRE6=36;
    public static final int CHIFFRE7=37;
    public static final int CHIFFRE8=38;
    public static final int CHIFFRE9=39;
    public static final int CR=40;
    public static final int DELIMITER1=41;
    public static final int DELIMITER2=42;
    public static final int DELIMITER3=43;
    public static final int DELIMITERS=44;
    public static final int LETTRE=45;
    public static final int MOINS=46;
    public static final int PLUS=47;
    public static final int POINT=48;
    public static final int REPETITEUR=49;
    public static final int TOKENMISMATCH=50;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public HPRIMSParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public HPRIMSParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

    public String[] getTokenNames() { return HPRIMSParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g"; }



      /**
       * Collecteur utilisé dans cette classe
       */
      public ContentHandler contentHandler;

      /**
       * Logger de la classe
       */
      private static final Logger logger = Logger.getLogger(HPRIMSParser.class.getCanonicalName());
      
      /**
       * Type utilisé pour se souvenir du dernier élément
       */
      private class XmlElement {
          public String uri;
          public String localName;
          public String qName;
      }
      
      /**
       * Liste des éléments parcourus
       */
      private LinkedList<XmlElement> xmlElements = new LinkedList<XmlElement>(); 

      /**
       * Constructeur
       * @param lexer
       * @param my_col
       */
      public HPRIMSParser(TokenStream input, ContentHandler contentHandler) {
        this(input);
        this.contentHandler = contentHandler;
      }
      
      /**
       * Formate une erreur sous forme de chaine de caractères
       * @param err
       * @return
       */
      public String formatError(RecognitionException err) {
        return getErrorHeader(err) + " / " + getErrorMessage(err, this.getTokenNames());
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void startElement(String nameElement) throws ContentHandlerException {
          try {
              // Enregistrement de cet élément
              XmlElement xmlElement = new XmlElement();
              xmlElement.uri = "";
              xmlElement.localName = nameElement;
              xmlElement.qName = nameElement;
              xmlElements.add(xmlElement);
              // Ajout de ce élément
              contentHandler.startElement("", nameElement, nameElement, new AttributesImpl());
           } catch (SAXException e) {
              ContentHandlerException exc = new ContentHandlerException(e.getMessage());
              exc.setIntStream(input);
              exc.setStartToken(input.LT(1));
              throw exc;
           }
        }
       
      /**
       * Encadre l'appel du contentHandler
       */
      public void endElement() throws ContentHandlerException {
        try {
            XmlElement xmlElement = xmlElements.pollLast();
            contentHandler.endElement(xmlElement.uri,
                xmlElement.localName, xmlElement.qName);
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Début de document hprim
       */
      public void startDocument() throws ContentHandlerException {
        try {
            contentHandler.startDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Fin de document hprim
       */
      public void endDocument() throws ContentHandlerException {
        try {
            contentHandler.endDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void content(String content) throws ContentHandlerException {
        try {
            contentHandler.characters(content.toCharArray(),
                0, content.length());
         } catch (SAXException e) {
             ContentHandlerException exc = new ContentHandlerException(e.getMessage());
             exc.setIntStream(input);
             exc.setStartToken(input.LT(1));
             throw exc;
         }
      }

      /**
       * Méthode pour permettre d'envoyer un message d'erreur correct lors d'une erreur de type
       * MatchRegexTokenException
       * @param e
       * @param tokenNames
       */
      public String getErrorMessage(RecognitionException e, String[] tokenNames) {
        if (e instanceof MatchRegexTokenException) {
          MatchRegexTokenException mrte = (MatchRegexTokenException) e;
          return "Malformed message : " + mrte.getText() +
            " does not match " + mrte.getRegex();
        } else if (e instanceof ContentHandlerException) {
          ContentHandlerException che = (ContentHandlerException) e;
          return "Content handling error : " + che.getText();
        } else {
           return super.getErrorMessage(e, tokenNames);
        }
      }
      
      /**
       * La reconnaissance d'une erreur dans le parser 
       * lance une erreur et arrête l'ensemble du parsing immédiatement
       * @param tokenNames
       * @param e
       */
       public void emitErrorMessage(String msg) {
          throw new IllegalArgumentException(msg);
       }
        
        /**
         * Réalise un regexp
         * @param text
         * @param regex
         * @param input
         * @throws RecognitionException
         */
        public void matchRegex(String text, String regex, Token startToken) throws RecognitionException {
          Pattern my_p = Pattern.compile(regex, Pattern.DOTALL);
          Matcher my_m = my_p.matcher(text);
          if (!my_m.matches())
            throw new MatchRegexTokenException(input, startToken, text, regex);
        }




    // $ANTLR start "hprim_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:204:1: hprim_crapy : hprim_adm_crapy ;
    public final void hprim_crapy() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:206:23: ( hprim_adm_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:207:3: hprim_adm_crapy
            {
            pushFollow(FOLLOW_hprim_adm_crapy_in_hprim_crapy67);
            hprim_adm_crapy();

            state._fsp--;


            }

            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_crapy"



    // $ANTLR start "hprim"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:209:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );
    public final void hprim() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:211:23: ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 )
            int alt1=18;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:3: hprim_oru_2_2
                    {
                    pushFollow(FOLLOW_hprim_oru_2_2_in_hprim84);
                    hprim_oru_2_2();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:19: hprim_oru_2_1
                    {
                    pushFollow(FOLLOW_hprim_oru_2_1_in_hprim88);
                    hprim_oru_2_1();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:35: hprim_oru_2_0
                    {
                    pushFollow(FOLLOW_hprim_oru_2_0_in_hprim92);
                    hprim_oru_2_0();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:3: hprim_orm_2_2
                    {
                    pushFollow(FOLLOW_hprim_orm_2_2_in_hprim98);
                    hprim_orm_2_2();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:19: hprim_orm_2_1
                    {
                    pushFollow(FOLLOW_hprim_orm_2_1_in_hprim102);
                    hprim_orm_2_1();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:35: hprim_orm_2_0
                    {
                    pushFollow(FOLLOW_hprim_orm_2_0_in_hprim106);
                    hprim_orm_2_0();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:3: hprim_ora_2_2
                    {
                    pushFollow(FOLLOW_hprim_ora_2_2_in_hprim112);
                    hprim_ora_2_2();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:19: hprim_ora_2_1
                    {
                    pushFollow(FOLLOW_hprim_ora_2_1_in_hprim116);
                    hprim_ora_2_1();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:35: hprim_ora_2_0
                    {
                    pushFollow(FOLLOW_hprim_ora_2_0_in_hprim120);
                    hprim_ora_2_0();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:3: hprim_adm_2_2
                    {
                    pushFollow(FOLLOW_hprim_adm_2_2_in_hprim126);
                    hprim_adm_2_2();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:19: hprim_adm_2_1
                    {
                    pushFollow(FOLLOW_hprim_adm_2_1_in_hprim130);
                    hprim_adm_2_1();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:35: hprim_adm_2_0
                    {
                    pushFollow(FOLLOW_hprim_adm_2_0_in_hprim134);
                    hprim_adm_2_0();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:3: hprim_fac_2_2
                    {
                    pushFollow(FOLLOW_hprim_fac_2_2_in_hprim139);
                    hprim_fac_2_2();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:19: hprim_fac_2_1
                    {
                    pushFollow(FOLLOW_hprim_fac_2_1_in_hprim143);
                    hprim_fac_2_1();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:35: hprim_fac_2_0
                    {
                    pushFollow(FOLLOW_hprim_fac_2_0_in_hprim147);
                    hprim_fac_2_0();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:3: hprim_reg_2_2
                    {
                    pushFollow(FOLLOW_hprim_reg_2_2_in_hprim152);
                    hprim_reg_2_2();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:19: hprim_reg_2_1
                    {
                    pushFollow(FOLLOW_hprim_reg_2_1_in_hprim156);
                    hprim_reg_2_1();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:35: hprim_reg_2_0
                    {
                    pushFollow(FOLLOW_hprim_reg_2_0_in_hprim160);
                    hprim_reg_2_0();

                    state._fsp--;


                    }
                    break;

            }
            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim"



    // $ANTLR start "hprim_oru_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:220:1: hprim_oru_2_2 : line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_2() throws RecognitionException {
        startElement("HPRIM.ORU.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:222:22: ( line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:223:3: line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_oru_in_hprim_oru_2_2178);
            line_h2_2_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:224:3: ( body_p_oru )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==CR) ) {
                    int LA2_1 = input.LA(2);

                    if ( (LA2_1==CHARP) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:224:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_2182);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_2187);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:226:3: ( CR )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CR) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:226:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_2191); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_2196); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_2"



    // $ANTLR start "hprim_oru_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:229:1: hprim_oru_2_1 : line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_1() throws RecognitionException {
        startElement("HPRIM.ORU.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:231:22: ( line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:232:3: line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_oru_in_hprim_oru_2_1213);
            line_h2_1_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:233:3: ( body_p_oru )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==CR) ) {
                    int LA4_1 = input.LA(2);

                    if ( (LA4_1==CHARP) ) {
                        alt4=1;
                    }


                }


                switch (alt4) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:233:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_1217);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_1222);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:235:3: ( CR )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==CR) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:235:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_1226); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_1231); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_1"



    // $ANTLR start "hprim_oru_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:238:1: hprim_oru_2_0 : line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_0() throws RecognitionException {
        startElement("HPRIM.ORU.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:240:22: ( line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:241:3: line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_oru_in_hprim_oru_2_0248);
            line_h2_0_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:242:3: ( body_p_oru )+
            int cnt6=0;
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==CR) ) {
                    int LA6_1 = input.LA(2);

                    if ( (LA6_1==CHARP) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:242:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_0252);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt6 >= 1 ) break loop6;
                        EarlyExitException eee =
                            new EarlyExitException(6, input);
                        throw eee;
                }
                cnt6++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_0257);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:244:3: ( CR )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==CR) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:244:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_0261); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_0266); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_0"



    // $ANTLR start "hprim_ora_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:248:1: hprim_ora_2_2 : line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_2() throws RecognitionException {
        startElement("HPRIM.ORA.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:250:22: ( line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:251:3: line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ora_in_hprim_ora_2_2284);
            line_h2_2_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:252:3: ( body_p_ora )+
            int cnt8=0;
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==CR) ) {
                    int LA8_1 = input.LA(2);

                    if ( (LA8_1==CHARP) ) {
                        alt8=1;
                    }


                }


                switch (alt8) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:252:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_2288);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt8 >= 1 ) break loop8;
                        EarlyExitException eee =
                            new EarlyExitException(8, input);
                        throw eee;
                }
                cnt8++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_2293);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:254:3: ( CR )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==CR) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:254:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_2297); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_2302); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_2"



    // $ANTLR start "hprim_ora_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:257:1: hprim_ora_2_1 : line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_1() throws RecognitionException {
        startElement("HPRIM.ORA.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:259:22: ( line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:260:3: line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ora_in_hprim_ora_2_1319);
            line_h2_1_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:261:3: ( body_p_ora )+
            int cnt10=0;
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==CR) ) {
                    int LA10_1 = input.LA(2);

                    if ( (LA10_1==CHARP) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:261:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_1323);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_1328);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:263:3: ( CR )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==CR) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:263:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_1332); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_1337); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_1"



    // $ANTLR start "hprim_ora_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:266:1: hprim_ora_2_0 : line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_0() throws RecognitionException {
        startElement("HPRIM.ORA.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:268:22: ( line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:269:3: line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ora_in_hprim_ora_2_0354);
            line_h2_0_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:270:3: ( body_p_ora )+
            int cnt12=0;
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==CR) ) {
                    int LA12_1 = input.LA(2);

                    if ( (LA12_1==CHARP) ) {
                        alt12=1;
                    }


                }


                switch (alt12) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:270:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_0358);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_0363);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:272:3: ( CR )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==CR) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:272:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_0367); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_0372); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_0"



    // $ANTLR start "hprim_orm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:276:1: hprim_orm_2_2 : line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_2() throws RecognitionException {
        startElement("HPRIM.ORM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:278:22: ( line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:279:3: line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_orm_in_hprim_orm_2_2390);
            line_h2_2_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:280:3: ( body_p_orm )+
            int cnt14=0;
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==CR) ) {
                    int LA14_1 = input.LA(2);

                    if ( (LA14_1==CHARP) ) {
                        alt14=1;
                    }


                }


                switch (alt14) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:280:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_2394);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt14 >= 1 ) break loop14;
                        EarlyExitException eee =
                            new EarlyExitException(14, input);
                        throw eee;
                }
                cnt14++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_2399);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:282:3: ( CR )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==CR) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:282:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_2403); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_2408); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_2"



    // $ANTLR start "hprim_orm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:285:1: hprim_orm_2_1 : line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_1() throws RecognitionException {
        startElement("HPRIM.ORM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:287:22: ( line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:288:3: line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_orm_in_hprim_orm_2_1425);
            line_h2_1_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:289:3: ( body_p_orm )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==CR) ) {
                    int LA16_1 = input.LA(2);

                    if ( (LA16_1==CHARP) ) {
                        alt16=1;
                    }


                }


                switch (alt16) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:289:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_1429);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_1434);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:291:3: ( CR )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==CR) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:291:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_1438); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_1443); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_1"



    // $ANTLR start "hprim_orm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:294:1: hprim_orm_2_0 : line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_0() throws RecognitionException {
        startElement("HPRIM.ORM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:296:22: ( line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:297:3: line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_orm_in_hprim_orm_2_0460);
            line_h2_0_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:298:3: ( body_p_orm )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==CR) ) {
                    int LA18_1 = input.LA(2);

                    if ( (LA18_1==CHARP) ) {
                        alt18=1;
                    }


                }


                switch (alt18) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:298:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_0464);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_0469);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:300:3: ( CR )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==CR) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:300:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_0473); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_0478); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_0"



    // $ANTLR start "hprim_adm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:304:1: hprim_adm_2_2 : line_h2_2_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_2() throws RecognitionException {
        startElement("HPRIM.ADM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:306:22: ( line_h2_2_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:307:3: line_h2_2_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_adm_in_hprim_adm_2_2496);
            line_h2_2_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:308:3: ( body_p_adm_crapy )+
            int cnt20=0;
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==CR) ) {
                    int LA20_1 = input.LA(2);

                    if ( (LA20_1==CHARP) ) {
                        alt20=1;
                    }


                }


                switch (alt20) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:308:3: body_p_adm_crapy
            	    {
            	    pushFollow(FOLLOW_body_p_adm_crapy_in_hprim_adm_2_2500);
            	    body_p_adm_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_2505);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:310:3: ( CR )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==CR) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:310:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_2509); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_2514); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_2"



    // $ANTLR start "hprim_adm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:313:1: hprim_adm_2_1 : line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_1() throws RecognitionException {
        startElement("HPRIM.ADM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:315:22: ( line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:316:3: line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_adm_in_hprim_adm_2_1531);
            line_h2_1_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:317:3: ( body_p_adm )+
            int cnt22=0;
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==CR) ) {
                    int LA22_1 = input.LA(2);

                    if ( (LA22_1==CHARP) ) {
                        alt22=1;
                    }


                }


                switch (alt22) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:317:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_1535);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_1540);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:319:3: ( CR )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==CR) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:319:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_1544); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_1549); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_1"



    // $ANTLR start "hprim_adm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:322:1: hprim_adm_2_0 : line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_0() throws RecognitionException {
        startElement("HPRIM.ADM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:324:22: ( line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:325:3: line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_adm_in_hprim_adm_2_0566);
            line_h2_0_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:326:3: ( body_p_adm )+
            int cnt24=0;
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==CR) ) {
                    int LA24_1 = input.LA(2);

                    if ( (LA24_1==CHARP) ) {
                        alt24=1;
                    }


                }


                switch (alt24) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:326:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_0570);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt24 >= 1 ) break loop24;
                        EarlyExitException eee =
                            new EarlyExitException(24, input);
                        throw eee;
                }
                cnt24++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_0575);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:328:3: ( CR )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==CR) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:328:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_0579); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_0584); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_0"



    // $ANTLR start "hprim_adm_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:331:1: hprim_adm_crapy : line_h_crapy_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF ;
    public final void hprim_adm_crapy() throws RecognitionException {
        startElement("HPRIM.ADM.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:333:22: ( line_h_crapy_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:334:3: line_h_crapy_adm ( body_p_adm_crapy )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_adm_in_hprim_adm_crapy601);
            line_h_crapy_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:335:3: ( body_p_adm_crapy )+
            int cnt26=0;
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==CR) ) {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==CHARP) ) {
                        alt26=1;
                    }


                }


                switch (alt26) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:335:3: body_p_adm_crapy
            	    {
            	    pushFollow(FOLLOW_body_p_adm_crapy_in_hprim_adm_crapy605);
            	    body_p_adm_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt26 >= 1 ) break loop26;
                        EarlyExitException eee =
                            new EarlyExitException(26, input);
                        throw eee;
                }
                cnt26++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_crapy610);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:337:3: ( CR )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==CR) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:337:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_crapy614); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_crapy619); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_crapy"



    // $ANTLR start "hprim_fac_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:341:1: hprim_fac_2_2 : line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_2() throws RecognitionException {
        startElement("HPRIM.FAC.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:343:22: ( line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:344:3: line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_fac_in_hprim_fac_2_2637);
            line_h2_2_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:345:3: ( body_p_fac )+
            int cnt28=0;
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==CR) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==CHARP) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:345:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_2641);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt28 >= 1 ) break loop28;
                        EarlyExitException eee =
                            new EarlyExitException(28, input);
                        throw eee;
                }
                cnt28++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_2646);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:347:3: ( CR )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==CR) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:347:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_2650); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_2655); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_2"



    // $ANTLR start "hprim_fac_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:350:1: hprim_fac_2_1 : line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_1() throws RecognitionException {
        startElement("HPRIM.FAC.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:352:22: ( line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:353:3: line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_fac_in_hprim_fac_2_1672);
            line_h2_1_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:354:3: ( body_p_fac )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==CR) ) {
                    int LA30_1 = input.LA(2);

                    if ( (LA30_1==CHARP) ) {
                        alt30=1;
                    }


                }


                switch (alt30) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:354:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_1676);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_1681);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:356:3: ( CR )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==CR) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:356:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_1685); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_1690); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_1"



    // $ANTLR start "hprim_fac_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:359:1: hprim_fac_2_0 : line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_0() throws RecognitionException {
        startElement("HPRIM.FAC.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:361:22: ( line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:362:3: line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_fac_in_hprim_fac_2_0707);
            line_h2_0_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:363:3: ( body_p_fac )+
            int cnt32=0;
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==CR) ) {
                    int LA32_1 = input.LA(2);

                    if ( (LA32_1==CHARP) ) {
                        alt32=1;
                    }


                }


                switch (alt32) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:363:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_0711);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt32 >= 1 ) break loop32;
                        EarlyExitException eee =
                            new EarlyExitException(32, input);
                        throw eee;
                }
                cnt32++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_0716);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:365:3: ( CR )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==CR) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:365:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_0720); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_0725); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_0"



    // $ANTLR start "hprim_reg_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:369:1: hprim_reg_2_2 : line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_2() throws RecognitionException {
        startElement("HPRIM.REG.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:371:22: ( line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:372:3: line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_reg_in_hprim_reg_2_2743);
            line_h2_2_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:373:3: ( body_p_reg )+
            int cnt34=0;
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==CR) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==CHARP) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:373:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_2747);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_2752);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:375:3: ( CR )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==CR) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:375:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_2756); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_2761); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_2"



    // $ANTLR start "hprim_reg_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:378:1: hprim_reg_2_1 : line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_1() throws RecognitionException {
        startElement("HPRIM.REG.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:380:22: ( line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:381:3: line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_reg_in_hprim_reg_2_1778);
            line_h2_1_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:382:3: ( body_p_reg )+
            int cnt36=0;
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==CR) ) {
                    int LA36_1 = input.LA(2);

                    if ( (LA36_1==CHARP) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:382:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_1782);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt36 >= 1 ) break loop36;
                        EarlyExitException eee =
                            new EarlyExitException(36, input);
                        throw eee;
                }
                cnt36++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_1787);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:384:3: ( CR )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==CR) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:384:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_1791); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_1796); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_1"



    // $ANTLR start "hprim_reg_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:387:1: hprim_reg_2_0 : line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_0() throws RecognitionException {
        startElement("HPRIM.REG.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:389:22: ( line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:390:3: line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_reg_in_hprim_reg_2_0813);
            line_h2_0_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:391:3: ( body_p_reg )+
            int cnt38=0;
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CR) ) {
                    int LA38_1 = input.LA(2);

                    if ( (LA38_1==CHARP) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:391:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_0817);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt38 >= 1 ) break loop38;
                        EarlyExitException eee =
                            new EarlyExitException(38, input);
                        throw eee;
                }
                cnt38++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_0822);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:393:3: ( CR )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==CR) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:393:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_0826); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_0831); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_0"



    // $ANTLR start "hprim_ns_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:397:1: hprim_ns_2_2 : line_h2_2_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_2() throws RecognitionException {
        startElement("HPRIM.NS.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:399:22: ( line_h2_2_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:400:3: line_h2_2_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ns_in_hprim_ns_2_2849);
            line_h2_2_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_2853);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:402:3: ( CR )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==CR) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:402:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_2857); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_2862); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_2"



    // $ANTLR start "hprim_ns_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:405:1: hprim_ns_2_1 : line_h2_1_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_1() throws RecognitionException {
        startElement("HPRIM.NS.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:407:22: ( line_h2_1_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:408:3: line_h2_1_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ns_in_hprim_ns_2_1879);
            line_h2_1_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_1883);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:410:3: ( CR )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==CR) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:410:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_1887); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_1892); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_1"



    // $ANTLR start "hprim_ns_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:413:1: hprim_ns_2_0 : line_h2_0_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_0() throws RecognitionException {
        startElement("HPRIM.NS.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:415:22: ( line_h2_0_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:416:3: line_h2_0_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ns_in_hprim_ns_2_0909);
            line_h2_0_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_0913);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:418:3: ( CR )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==CR) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:418:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_0917); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_0922); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_0"



    // $ANTLR start "body_p_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:422:1: body_p_orm : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ ;
    public final void body_p_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:422:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:423:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_orm933);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:423:10: ( line_c )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==CR) ) {
                    int LA43_1 = input.LA(2);

                    if ( (LA43_1==CHARC) ) {
                        alt43=1;
                    }


                }


                switch (alt43) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:423:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_orm936);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            int cnt47=0;
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==CR) ) {
                    int LA47_1 = input.LA(2);

                    if ( (LA47_1==CHARO) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:4: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_orm943);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:13: ( line_c )*
            	    loop44:
            	    do {
            	        int alt44=2;
            	        int LA44_0 = input.LA(1);

            	        if ( (LA44_0==CR) ) {
            	            int LA44_1 = input.LA(2);

            	            if ( (LA44_1==CHARC) ) {
            	                alt44=1;
            	            }


            	        }


            	        switch (alt44) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_orm946);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop44;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:425:4: ( line_obx ( line_c )* )*
            	    loop46:
            	    do {
            	        int alt46=2;
            	        int LA46_0 = input.LA(1);

            	        if ( (LA46_0==CR) ) {
            	            int LA46_1 = input.LA(2);

            	            if ( (LA46_1==CHARO) ) {
            	                int LA46_3 = input.LA(3);

            	                if ( (LA46_3==CHARB) ) {
            	                    int LA46_4 = input.LA(4);

            	                    if ( (LA46_4==CHARX) ) {
            	                        alt46=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt46) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:425:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_orm954);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:425:14: ( line_c )*
            	    	    loop45:
            	    	    do {
            	    	        int alt45=2;
            	    	        int LA45_0 = input.LA(1);

            	    	        if ( (LA45_0==CR) ) {
            	    	            int LA45_1 = input.LA(2);

            	    	            if ( (LA45_1==CHARC) ) {
            	    	                alt45=1;
            	    	            }


            	    	        }


            	    	        switch (alt45) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:425:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_orm957);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop45;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop46;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt47 >= 1 ) break loop47;
                        EarlyExitException eee =
                            new EarlyExitException(47, input);
                        throw eee;
                }
                cnt47++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_orm"



    // $ANTLR start "body_p_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:429:1: body_p_ora : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ ;
    public final void body_p_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:429:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_ora977);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:10: ( line_c )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==CR) ) {
                    int LA48_1 = input.LA(2);

                    if ( (LA48_1==CHARC) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_ora980);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            int cnt56=0;
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==CR) ) {
                    int LA56_1 = input.LA(2);

                    if ( (LA56_1==CHARA) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:4: line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_ora987);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:12: ( line_c )*
            	    loop49:
            	    do {
            	        int alt49=2;
            	        int LA49_0 = input.LA(1);

            	        if ( (LA49_0==CR) ) {
            	            int LA49_1 = input.LA(2);

            	            if ( (LA49_1==CHARC) ) {
            	                alt49=1;
            	            }


            	        }


            	        switch (alt49) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_ora990);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop49;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:4: ( line_ac ( line_c )* )*
            	    loop51:
            	    do {
            	        int alt51=2;
            	        int LA51_0 = input.LA(1);

            	        if ( (LA51_0==CR) ) {
            	            int LA51_1 = input.LA(2);

            	            if ( (LA51_1==CHARA) ) {
            	                alt51=1;
            	            }


            	        }


            	        switch (alt51) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_ora998);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:13: ( line_c )*
            	    	    loop50:
            	    	    do {
            	    	        int alt50=2;
            	    	        int LA50_0 = input.LA(1);

            	    	        if ( (LA50_0==CR) ) {
            	    	            int LA50_1 = input.LA(2);

            	    	            if ( (LA50_1==CHARC) ) {
            	    	                alt50=1;
            	    	            }


            	    	        }


            	    	        switch (alt50) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1001);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop50;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop51;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:433:4: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    int cnt55=0;
            	    loop55:
            	    do {
            	        int alt55=2;
            	        int LA55_0 = input.LA(1);

            	        if ( (LA55_0==CR) ) {
            	            int LA55_1 = input.LA(2);

            	            if ( (LA55_1==CHARO) ) {
            	                alt55=1;
            	            }


            	        }


            	        switch (alt55) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:433:5: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obr_in_body_p_ora1011);
            	    	    line_obr();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:433:14: ( line_c )*
            	    	    loop52:
            	    	    do {
            	    	        int alt52=2;
            	    	        int LA52_0 = input.LA(1);

            	    	        if ( (LA52_0==CR) ) {
            	    	            int LA52_1 = input.LA(2);

            	    	            if ( (LA52_1==CHARC) ) {
            	    	                alt52=1;
            	    	            }


            	    	        }


            	    	        switch (alt52) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:433:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1014);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop52;
            	    	        }
            	    	    } while (true);


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:434:5: ( line_obx ( line_c )* )*
            	    	    loop54:
            	    	    do {
            	    	        int alt54=2;
            	    	        int LA54_0 = input.LA(1);

            	    	        if ( (LA54_0==CR) ) {
            	    	            int LA54_1 = input.LA(2);

            	    	            if ( (LA54_1==CHARO) ) {
            	    	                int LA54_3 = input.LA(3);

            	    	                if ( (LA54_3==CHARB) ) {
            	    	                    int LA54_4 = input.LA(4);

            	    	                    if ( (LA54_4==CHARX) ) {
            	    	                        alt54=1;
            	    	                    }


            	    	                }


            	    	            }


            	    	        }


            	    	        switch (alt54) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:434:6: line_obx ( line_c )*
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_obx_in_body_p_ora1023);
            	    	    	    line_obx();

            	    	    	    state._fsp--;


            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:434:15: ( line_c )*
            	    	    	    loop53:
            	    	    	    do {
            	    	    	        int alt53=2;
            	    	    	        int LA53_0 = input.LA(1);

            	    	    	        if ( (LA53_0==CR) ) {
            	    	    	            int LA53_1 = input.LA(2);

            	    	    	            if ( (LA53_1==CHARC) ) {
            	    	    	                alt53=1;
            	    	    	            }


            	    	    	        }


            	    	    	        switch (alt53) {
            	    	    	    	case 1 :
            	    	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:434:16: line_c
            	    	    	    	    {
            	    	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1026);
            	    	    	    	    line_c();

            	    	    	    	    state._fsp--;


            	    	    	    	    }
            	    	    	    	    break;

            	    	    	    	default :
            	    	    	    	    break loop53;
            	    	    	        }
            	    	    	    } while (true);


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop54;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt55 >= 1 ) break loop55;
            	                EarlyExitException eee =
            	                    new EarlyExitException(55, input);
            	                throw eee;
            	        }
            	        cnt55++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt56 >= 1 ) break loop56;
                        EarlyExitException eee =
                            new EarlyExitException(56, input);
                        throw eee;
                }
                cnt56++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_ora"



    // $ANTLR start "body_p_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:1: body_p_oru : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ ;
    public final void body_p_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_oru1052);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:10: ( line_c )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==CR) ) {
                    int LA57_1 = input.LA(2);

                    if ( (LA57_1==CHARC) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_oru1055);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            int cnt61=0;
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==CR) ) {
                    int LA61_1 = input.LA(2);

                    if ( (LA61_1==CHARO) ) {
                        alt61=1;
                    }


                }


                switch (alt61) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:4: line_obr ( line_c )* ( line_obx ( line_c )* )+
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_oru1062);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:13: ( line_c )*
            	    loop58:
            	    do {
            	        int alt58=2;
            	        int LA58_0 = input.LA(1);

            	        if ( (LA58_0==CR) ) {
            	            int LA58_1 = input.LA(2);

            	            if ( (LA58_1==CHARC) ) {
            	                alt58=1;
            	            }


            	        }


            	        switch (alt58) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1065);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop58;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:442:4: ( line_obx ( line_c )* )+
            	    int cnt60=0;
            	    loop60:
            	    do {
            	        int alt60=2;
            	        int LA60_0 = input.LA(1);

            	        if ( (LA60_0==CR) ) {
            	            int LA60_1 = input.LA(2);

            	            if ( (LA60_1==CHARO) ) {
            	                int LA60_3 = input.LA(3);

            	                if ( (LA60_3==CHARB) ) {
            	                    int LA60_4 = input.LA(4);

            	                    if ( (LA60_4==CHARX) ) {
            	                        alt60=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt60) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:442:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_oru1073);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:442:14: ( line_c )*
            	    	    loop59:
            	    	    do {
            	    	        int alt59=2;
            	    	        int LA59_0 = input.LA(1);

            	    	        if ( (LA59_0==CR) ) {
            	    	            int LA59_1 = input.LA(2);

            	    	            if ( (LA59_1==CHARC) ) {
            	    	                alt59=1;
            	    	            }


            	    	        }


            	    	        switch (alt59) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:442:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1076);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop59;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt60 >= 1 ) break loop60;
            	                EarlyExitException eee =
            	                    new EarlyExitException(60, input);
            	                throw eee;
            	        }
            	        cnt60++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt61 >= 1 ) break loop61;
                        EarlyExitException eee =
                            new EarlyExitException(61, input);
                        throw eee;
                }
                cnt61++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_oru"



    // $ANTLR start "body_p_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:446:1: body_p_adm : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* ;
    public final void body_p_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:446:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_adm1096);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:10: ( line_c )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==CR) ) {
                    int LA62_1 = input.LA(2);

                    if ( (LA62_1==CHARC) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_adm1099);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==CR) ) {
                    int LA66_1 = input.LA(2);

                    if ( (LA66_1==CHARA) ) {
                        alt66=1;
                    }


                }


                switch (alt66) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_adm1106);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:12: ( line_c )*
            	    loop63:
            	    do {
            	        int alt63=2;
            	        int LA63_0 = input.LA(1);

            	        if ( (LA63_0==CR) ) {
            	            int LA63_1 = input.LA(2);

            	            if ( (LA63_1==CHARC) ) {
            	                alt63=1;
            	            }


            	        }


            	        switch (alt63) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1109);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop63;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:4: ( line_ac ( line_c )* )*
            	    loop65:
            	    do {
            	        int alt65=2;
            	        int LA65_0 = input.LA(1);

            	        if ( (LA65_0==CR) ) {
            	            int LA65_1 = input.LA(2);

            	            if ( (LA65_1==CHARA) ) {
            	                int LA65_3 = input.LA(3);

            	                if ( (LA65_3==CHARC) ) {
            	                    alt65=1;
            	                }


            	            }


            	        }


            	        switch (alt65) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_adm1117);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:13: ( line_c )*
            	    	    loop64:
            	    	    do {
            	    	        int alt64=2;
            	    	        int LA64_0 = input.LA(1);

            	    	        if ( (LA64_0==CR) ) {
            	    	            int LA64_1 = input.LA(2);

            	    	            if ( (LA64_1==CHARC) ) {
            	    	                alt64=1;
            	    	            }


            	    	        }


            	    	        switch (alt64) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1120);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop64;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop65;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_adm"



    // $ANTLR start "body_p_adm_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:452:1: body_p_adm_crapy : line_p_crapy ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* ;
    public final void body_p_adm_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:452:18: ( line_p_crapy ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:453:3: line_p_crapy ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            {
            pushFollow(FOLLOW_line_p_crapy_in_body_p_adm_crapy1139);
            line_p_crapy();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:453:16: ( line_c )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==CR) ) {
                    int LA67_1 = input.LA(2);

                    if ( (LA67_1==CHARC) ) {
                        alt67=1;
                    }


                }


                switch (alt67) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:453:17: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_adm_crapy1142);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==CR) ) {
                    int LA71_1 = input.LA(2);

                    if ( (LA71_1==CHARA) ) {
                        alt71=1;
                    }


                }


                switch (alt71) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_adm_crapy1149);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:12: ( line_c )*
            	    loop68:
            	    do {
            	        int alt68=2;
            	        int LA68_0 = input.LA(1);

            	        if ( (LA68_0==CR) ) {
            	            int LA68_1 = input.LA(2);

            	            if ( (LA68_1==CHARC) ) {
            	                alt68=1;
            	            }


            	        }


            	        switch (alt68) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_adm_crapy1152);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop68;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:4: ( line_ac ( line_c )* )*
            	    loop70:
            	    do {
            	        int alt70=2;
            	        int LA70_0 = input.LA(1);

            	        if ( (LA70_0==CR) ) {
            	            int LA70_1 = input.LA(2);

            	            if ( (LA70_1==CHARA) ) {
            	                int LA70_3 = input.LA(3);

            	                if ( (LA70_3==CHARC) ) {
            	                    alt70=1;
            	                }


            	            }


            	        }


            	        switch (alt70) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_adm_crapy1160);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:13: ( line_c )*
            	    	    loop69:
            	    	    do {
            	    	        int alt69=2;
            	    	        int LA69_0 = input.LA(1);

            	    	        if ( (LA69_0==CR) ) {
            	    	            int LA69_1 = input.LA(2);

            	    	            if ( (LA69_1==CHARC) ) {
            	    	                alt69=1;
            	    	            }


            	    	        }


            	    	        switch (alt69) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_adm_crapy1163);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop69;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop70;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_adm_crapy"



    // $ANTLR start "body_p_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:459:1: body_p_fac : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ ;
    public final void body_p_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:459:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_fac1183);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:10: ( line_c )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==CR) ) {
                    int LA72_1 = input.LA(2);

                    if ( (LA72_1==CHARC) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_fac1186);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==CR) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==CHARA) ) {
                    alt76=1;
                }
            }
            switch (alt76) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
                    {
                    pushFollow(FOLLOW_line_ap_in_body_p_fac1193);
                    line_ap();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:12: ( line_c )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==CR) ) {
                            int LA73_1 = input.LA(2);

                            if ( (LA73_1==CHARC) ) {
                                alt73=1;
                            }


                        }


                        switch (alt73) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:13: line_c
                    	    {
                    	    pushFollow(FOLLOW_line_c_in_body_p_fac1196);
                    	    line_c();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:4: ( line_ac ( line_c )* )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==CR) ) {
                            int LA75_1 = input.LA(2);

                            if ( (LA75_1==CHARA) ) {
                                alt75=1;
                            }


                        }


                        switch (alt75) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:5: line_ac ( line_c )*
                    	    {
                    	    pushFollow(FOLLOW_line_ac_in_body_p_fac1204);
                    	    line_ac();

                    	    state._fsp--;


                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:13: ( line_c )*
                    	    loop74:
                    	    do {
                    	        int alt74=2;
                    	        int LA74_0 = input.LA(1);

                    	        if ( (LA74_0==CR) ) {
                    	            int LA74_1 = input.LA(2);

                    	            if ( (LA74_1==CHARC) ) {
                    	                alt74=1;
                    	            }


                    	        }


                    	        switch (alt74) {
                    	    	case 1 :
                    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:14: line_c
                    	    	    {
                    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1207);
                    	    	    line_c();

                    	    	    state._fsp--;


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop74;
                    	        }
                    	    } while (true);


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:3: ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            int cnt82=0;
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==CR) ) {
                    int LA82_1 = input.LA(2);

                    if ( (LA82_1==CHARF) ) {
                        alt82=1;
                    }


                }


                switch (alt82) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:4: line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_fac_in_body_p_fac1221);
            	    line_fac();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:13: ( line_c )*
            	    loop77:
            	    do {
            	        int alt77=2;
            	        int LA77_0 = input.LA(1);

            	        if ( (LA77_0==CR) ) {
            	            int LA77_1 = input.LA(2);

            	            if ( (LA77_1==CHARC) ) {
            	                alt77=1;
            	            }


            	        }


            	        switch (alt77) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1224);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop77;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:4: ( line_reg ( line_c )* )*
            	    loop79:
            	    do {
            	        int alt79=2;
            	        int LA79_0 = input.LA(1);

            	        if ( (LA79_0==CR) ) {
            	            int LA79_1 = input.LA(2);

            	            if ( (LA79_1==CHARR) ) {
            	                alt79=1;
            	            }


            	        }


            	        switch (alt79) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:5: line_reg ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_reg_in_body_p_fac1232);
            	    	    line_reg();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:14: ( line_c )*
            	    	    loop78:
            	    	    do {
            	    	        int alt78=2;
            	    	        int LA78_0 = input.LA(1);

            	    	        if ( (LA78_0==CR) ) {
            	    	            int LA78_1 = input.LA(2);

            	    	            if ( (LA78_1==CHARC) ) {
            	    	                alt78=1;
            	    	            }


            	    	        }


            	    	        switch (alt78) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1235);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop78;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop79;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:4: ( line_act ( line_c )* )*
            	    loop81:
            	    do {
            	        int alt81=2;
            	        int LA81_0 = input.LA(1);

            	        if ( (LA81_0==CR) ) {
            	            int LA81_1 = input.LA(2);

            	            if ( (LA81_1==CHARA) ) {
            	                alt81=1;
            	            }


            	        }


            	        switch (alt81) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:5: line_act ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_act_in_body_p_fac1245);
            	    	    line_act();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:14: ( line_c )*
            	    	    loop80:
            	    	    do {
            	    	        int alt80=2;
            	    	        int LA80_0 = input.LA(1);

            	    	        if ( (LA80_0==CR) ) {
            	    	            int LA80_1 = input.LA(2);

            	    	            if ( (LA80_1==CHARC) ) {
            	    	                alt80=1;
            	    	            }


            	    	        }


            	    	        switch (alt80) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1248);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop80;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop81;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt82 >= 1 ) break loop82;
                        EarlyExitException eee =
                            new EarlyExitException(82, input);
                        throw eee;
                }
                cnt82++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_fac"



    // $ANTLR start "body_p_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:470:1: body_p_reg : line_p ( line_c )* ( line_reg ( line_c )* )+ ;
    public final void body_p_reg() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:470:12: ( line_p ( line_c )* ( line_reg ( line_c )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:3: line_p ( line_c )* ( line_reg ( line_c )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_reg1268);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:10: ( line_c )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==CR) ) {
                    int LA83_1 = input.LA(2);

                    if ( (LA83_1==CHARC) ) {
                        alt83=1;
                    }


                }


                switch (alt83) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_reg1271);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:3: ( line_reg ( line_c )* )+
            int cnt85=0;
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==CR) ) {
                    int LA85_1 = input.LA(2);

                    if ( (LA85_1==CHARR) ) {
                        alt85=1;
                    }


                }


                switch (alt85) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:4: line_reg ( line_c )*
            	    {
            	    pushFollow(FOLLOW_line_reg_in_body_p_reg1278);
            	    line_reg();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:13: ( line_c )*
            	    loop84:
            	    do {
            	        int alt84=2;
            	        int LA84_0 = input.LA(1);

            	        if ( (LA84_0==CR) ) {
            	            int LA84_1 = input.LA(2);

            	            if ( (LA84_1==CHARC) ) {
            	                alt84=1;
            	            }


            	        }


            	        switch (alt84) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_reg1281);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop84;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt85 >= 1 ) break loop85;
                        EarlyExitException eee =
                            new EarlyExitException(85, input);
                        throw eee;
                }
                cnt85++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_reg"



    // $ANTLR start "start_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:477:1: start_line_h : delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] ;
    public final void start_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:477:14: ( delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:478:3: delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h1300);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1304); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1306);
            st_sized_optionnal("H.3", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1311); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1313);
            st_sized_optionnal("H.4", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1318); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1320);
            spec_sized_mult_lvl1_st_mandatory_2("H.5", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1325); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1327);
            spec_sized_mult_lvl1_st_optionnal_6("H.6", 100);

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h"



    // $ANTLR start "start_line_h_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:1: start_line_h_crapy : delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] ;
    public final void start_line_h_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:20: ( delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:485:3: delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h_crapy1340);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1344); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1346);
            crapy_repet("H.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1352); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1354);
            crapy_repet("H.4");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1359); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1361);
            crapy_repet("H.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1366); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1368);
            crapy_repet("H.6");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h_crapy"



    // $ANTLR start "midd_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:1: midd_line_h : DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] ;
    public final void midd_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:13: ( DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:3: DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"]
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1382); 

            pushFollow(FOLLOW_spec_sized_tn_in_midd_line_h1384);
            spec_sized_tn("H.8", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1389); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1391);
            st_sized_optionnal("H.9", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1396); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1398);
            spec_sized_mult_lvl1_st_mandatory_2("H.10", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1403); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1405);
            st_sized_optionnal("H.11", 80);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1410); 

            pushFollow(FOLLOW_spec_const_7_12_in_midd_line_h1412);
            spec_const_7_12("H.12");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h"



    // $ANTLR start "midd_line_h_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:499:1: midd_line_h_crapy : ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void midd_line_h_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:499:19: ( ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:3: ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:3: ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==DELIMITER1) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:4: DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1424); 

                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1426);
                    crapy_repet("H.8");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:4: ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==DELIMITER1) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:5: DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1433); 

                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1435);
                            crapy_repet("H.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:5: ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt91=2;
                            int LA91_0 = input.LA(1);

                            if ( (LA91_0==DELIMITER1) ) {
                                alt91=1;
                            }
                            switch (alt91) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:6: DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1443); 

                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1445);
                                    crapy_repet("H.10");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:503:6: ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt90=2;
                                    int LA90_0 = input.LA(1);

                                    if ( (LA90_0==DELIMITER1) ) {
                                        alt90=1;
                                    }
                                    switch (alt90) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:503:7: DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1454); 

                                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1456);
                                            crapy_repet("H.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:504:7: ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            int alt89=2;
                                            int LA89_0 = input.LA(1);

                                            if ( (LA89_0==DELIMITER1) ) {
                                                alt89=1;
                                            }
                                            switch (alt89) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:504:8: DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1466); 

                                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1468);
                                                    crapy_repet("H.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:505:8: ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    int alt88=2;
                                                    int LA88_0 = input.LA(1);

                                                    if ( (LA88_0==DELIMITER1) ) {
                                                        alt88=1;
                                                    }
                                                    switch (alt88) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:505:9: DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1479); 

                                                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1481);
                                                            crapy_repet("H.13");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:9: ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            int alt87=2;
                                                            int LA87_0 = input.LA(1);

                                                            if ( (LA87_0==DELIMITER1) ) {
                                                                alt87=1;
                                                            }
                                                            switch (alt87) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:10: DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1493); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1495);
                                                                    crapy_repet("H.14");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:10: ( DELIMITER1 )?
                                                                    int alt86=2;
                                                                    int LA86_0 = input.LA(1);

                                                                    if ( (LA86_0==DELIMITER1) ) {
                                                                        alt86=1;
                                                                    }
                                                                    switch (alt86) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1507); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h_crapy"



    // $ANTLR start "line_h2_2_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:514:1: line_h2_2_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:517:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_oru1545);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1549); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1551);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_oru1556);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1560); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1562);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1567); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1569);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:522:3: ( DELIMITER1 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==DELIMITER1) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:522:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1574); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_oru"



    // $ANTLR start "line_h2_1_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:524:1: line_h2_1_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:527:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_oru1593);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1597); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1599);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_oru1604);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1608); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1610);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1615); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1617);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:532:3: ( DELIMITER1 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==DELIMITER1) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:532:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1622); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_oru"



    // $ANTLR start "line_h2_0_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:534:1: line_h2_0_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:536:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:537:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_oru1641);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1645); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1647);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_oru1652);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1656); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1658);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1663); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1665);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:542:3: ( DELIMITER1 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==DELIMITER1) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:542:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1670); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_oru"



    // $ANTLR start "line_h_crapy_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:544:1: line_h_crapy_oru : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:546:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:547:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_oru1689);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_oru1693); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h_crapy_oru1695);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_oru1700);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_oru"



    // $ANTLR start "line_h2_2_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:552:1: line_h2_2_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:554:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:555:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_orm1719);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1723); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1725);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_orm1730);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1734); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1736);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1741); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1743);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:560:3: ( DELIMITER1 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==DELIMITER1) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:560:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1748); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_orm"



    // $ANTLR start "line_h2_1_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:562:1: line_h2_1_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:564:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:565:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_orm1767);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1771); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1773);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_orm1778);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1782); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1784);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1789); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1791);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:570:3: ( DELIMITER1 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==DELIMITER1) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:570:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1796); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_orm"



    // $ANTLR start "line_h2_0_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:572:1: line_h2_0_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:574:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:575:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_orm1815);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1819); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1821);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_orm1826);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1830); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1832);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1837); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1839);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:580:3: ( DELIMITER1 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==DELIMITER1) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:580:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1844); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_orm"



    // $ANTLR start "line_h_crapy_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:582:1: line_h_crapy_orm : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:584:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:585:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_orm1863);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_orm1867); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h_crapy_orm1869);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_orm1874);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_orm"



    // $ANTLR start "line_h2_2_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:590:1: line_h2_2_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:592:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:593:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ora1893);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1897); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1899);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ora1904);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1908); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1910);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1915); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1917);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:598:3: ( DELIMITER1 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==DELIMITER1) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:598:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1922); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ora"



    // $ANTLR start "line_h2_1_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:600:1: line_h2_1_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:602:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:603:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ora1941);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1945); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1947);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ora1952);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1956); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1958);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1963); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1965);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:608:3: ( DELIMITER1 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==DELIMITER1) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:608:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1970); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ora"



    // $ANTLR start "line_h2_0_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:610:1: line_h2_0_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:612:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:613:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ora1989);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1993); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1995);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ora2000);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2004); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora2006);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2011); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ora2013);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:618:3: ( DELIMITER1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==DELIMITER1) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:618:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2018); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ora"



    // $ANTLR start "line_h_crapy_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:620:1: line_h_crapy_ora : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:622:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:623:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_ora2037);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_ora2041); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h_crapy_ora2043);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_ora2048);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_ora"



    // $ANTLR start "line_h2_2_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:628:1: line_h2_2_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:630:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:631:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_adm2067);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2071); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm2073);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_adm2078);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2082); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm2084);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2089); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2091);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:636:3: ( DELIMITER1 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==DELIMITER1) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:636:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2096); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_adm"



    // $ANTLR start "line_h2_1_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:638:1: line_h2_1_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:640:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:641:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_adm2115);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2119); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2121);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_adm2126);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2130); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2132);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2137); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2139);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:646:3: ( DELIMITER1 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==DELIMITER1) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:646:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2144); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_adm"



    // $ANTLR start "line_h2_0_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:648:1: line_h2_0_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:650:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:651:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_adm2163);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2167); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2169);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_adm2174);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2178); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2180);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2185); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2187);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:656:3: ( DELIMITER1 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==DELIMITER1) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:656:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2192); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_adm"



    // $ANTLR start "line_h_crapy_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:658:1: line_h_crapy_adm : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:660:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:661:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_adm2211);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_adm2215); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h_crapy_adm2217);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_adm2222);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_adm"



    // $ANTLR start "line_h2_2_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:666:1: line_h2_2_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:668:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:669:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_fac2241);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2245); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2247);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_fac2252);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2256); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2258);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2263); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2265);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:674:3: ( DELIMITER1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==DELIMITER1) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:674:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2270); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_fac"



    // $ANTLR start "line_h2_1_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:676:1: line_h2_1_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:678:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:679:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_fac2289);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2293); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2295);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_fac2300);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2304); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2306);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2311); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2313);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:684:3: ( DELIMITER1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==DELIMITER1) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:684:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2318); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_fac"



    // $ANTLR start "line_h2_0_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:686:1: line_h2_0_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:688:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:689:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_fac2337);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2341); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2343);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_fac2348);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2352); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2354);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2359); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2361);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:694:3: ( DELIMITER1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DELIMITER1) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:694:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2366); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_fac"



    // $ANTLR start "line_h_crapy_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:696:1: line_h_crapy_fac : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:698:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:699:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_fac2385);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_fac2389); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h_crapy_fac2391);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_fac2396);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_fac"



    // $ANTLR start "line_h2_2_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:704:1: line_h2_2_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:706:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:707:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_reg2415);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2419); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2421);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_reg2426);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2430); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2432);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2437); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2439);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:712:3: ( DELIMITER1 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==DELIMITER1) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:712:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2444); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_reg"



    // $ANTLR start "line_h2_1_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:714:1: line_h2_1_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:716:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:717:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_reg2463);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2467); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2469);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_reg2474);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2478); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2480);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2485); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2487);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:722:3: ( DELIMITER1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==DELIMITER1) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:722:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2492); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_reg"



    // $ANTLR start "line_h2_0_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:724:1: line_h2_0_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:726:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:727:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_reg2511);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2515); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2517);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_reg2522);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2526); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2528);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2533); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2535);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:732:3: ( DELIMITER1 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==DELIMITER1) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:732:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2540); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_reg"



    // $ANTLR start "line_h_crapy_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:734:1: line_h_crapy_reg : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:736:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:737:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_reg2559);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_reg2563); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h_crapy_reg2565);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_reg2570);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_reg"



    // $ANTLR start "line_h2_2_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:742:1: line_h2_2_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:744:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:745:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ns2589);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2593); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2595);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ns2600);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2604); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2606);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2611); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2613);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:750:3: ( DELIMITER1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==DELIMITER1) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:750:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2618); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ns"



    // $ANTLR start "line_h2_1_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:752:1: line_h2_1_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:754:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:755:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ns2637);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2641); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2643);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ns2648);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2652); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2654);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2659); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2661);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:760:3: ( DELIMITER1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==DELIMITER1) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:760:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2666); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ns"



    // $ANTLR start "line_h2_0_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:762:1: line_h2_0_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:764:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:765:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ns2685);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2689); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2691);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ns2696);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2700); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2702);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2707); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2709);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:770:3: ( DELIMITER1 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==DELIMITER1) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:770:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2714); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ns"



    // $ANTLR start "line_h_crapy_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:772:1: line_h_crapy_ns : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:774:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:775:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_ns2733);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_ns2737); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h_crapy_ns2739);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_ns2744);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_ns"



    // $ANTLR start "line_ap"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:780:1: line_ap : ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_ap() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:782:23: ( ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:783:3: ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:783:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:783:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap2764); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap2766); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap2768); 

            }


            startElement("AP.1");content("AP");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2775); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap2777);
            nm_integer_sized_mandatory("AP.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2782); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2784);
            st_sized_mandatory("AP.3", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2789); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2791);
            ts_sized_optionnal("AP.4", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2796); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2798);
            ts_sized_optionnal("AP.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2803); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap2805);
            nm_integer_sized_mandatory("AP.6", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2810); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2812);
            st_sized_mandatory("AP.7", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2817); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2819);
            nm_sized_mandatory("AP.8", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2824); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2826);
            nm_sized_mandatory("AP.9", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2831); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2833);
            nm_sized_mandatory("AP.10", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2838); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2840);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2845); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2847);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2852); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2854);
            st_sized_mandatory("AP.12", 1);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2859); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2861);
            st_sized_mandatory("AP.13", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2866); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2868);
            spec_sized_mult_lvl1_st_mandatory_6("AP.14", 48);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2873); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2875);
            st_sized_optionnal("AP.15", 24);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2880); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2882);
            nm_sized_mandatory("AP.16", 6);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:800:3: ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==DELIMITER1) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:800:4: DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2888); 

                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_ap2890);
                    nm_sized_optionnal("AP.17", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:801:4: ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==DELIMITER1) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:801:5: DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2897); 

                            pushFollow(FOLLOW_spec_on_optionnal_in_line_ap2899);
                            spec_on_optionnal("AP.18");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:802:5: ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            int alt120=2;
                            int LA120_0 = input.LA(1);

                            if ( (LA120_0==DELIMITER1) ) {
                                alt120=1;
                            }
                            switch (alt120) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:802:6: DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2907); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2909);
                                    ts_sized_optionnal("AP.19", 8);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:803:6: ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    int alt119=2;
                                    int LA119_0 = input.LA(1);

                                    if ( (LA119_0==DELIMITER1) ) {
                                        alt119=1;
                                    }
                                    switch (alt119) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:803:7: DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2918); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2920);
                                            ts_sized_optionnal("AP.20", 8);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:804:7: ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            int alt118=2;
                                            int LA118_0 = input.LA(1);

                                            if ( (LA118_0==DELIMITER1) ) {
                                                alt118=1;
                                            }
                                            switch (alt118) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:804:8: DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2930); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2932);
                                                    st_sized_optionnal("AP.21", 30);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:805:8: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    int alt117=2;
                                                    int LA117_0 = input.LA(1);

                                                    if ( (LA117_0==DELIMITER1) ) {
                                                        alt117=1;
                                                    }
                                                    switch (alt117) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:805:9: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2943); 

                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2945);
                                                            spec_sized_mult_lvl1_st_optionnal_6("AP.22", 200);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:806:9: ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            int alt116=2;
                                                            int LA116_0 = input.LA(1);

                                                            if ( (LA116_0==DELIMITER1) ) {
                                                                alt116=1;
                                                            }
                                                            switch (alt116) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:806:10: DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2957); 

                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2959);
                                                                    ts_sized_optionnal("AP.23", 15);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:807:10: ( DELIMITER1 )?
                                                                    int alt115=2;
                                                                    int LA115_0 = input.LA(1);

                                                                    if ( (LA115_0==DELIMITER1) ) {
                                                                        alt115=1;
                                                                    }
                                                                    switch (alt115) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:807:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2971); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap"



    // $ANTLR start "line_ap_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:809:1: line_ap_crapy : ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ap_crapy() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:811:23: ( ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:812:3: ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:812:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:812:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap_crapy3005); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap_crapy3007); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap_crapy3009); 

            }


            startElement("AP.1");content("AP");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:813:3: ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==DELIMITER1) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:813:4: DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3017); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3019);
                    crapy_repet("AP.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:4: ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==DELIMITER1) ) {
                        alt145=1;
                    }
                    switch (alt145) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:5: DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3026); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3028);
                            crapy_repet("AP.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:815:5: ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt144=2;
                            int LA144_0 = input.LA(1);

                            if ( (LA144_0==DELIMITER1) ) {
                                alt144=1;
                            }
                            switch (alt144) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:815:6: DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3036); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3038);
                                    crapy_repet("AP.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:816:6: ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt143=2;
                                    int LA143_0 = input.LA(1);

                                    if ( (LA143_0==DELIMITER1) ) {
                                        alt143=1;
                                    }
                                    switch (alt143) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:816:7: DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3047); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3049);
                                            crapy_repet("AP.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:817:7: ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt142=2;
                                            int LA142_0 = input.LA(1);

                                            if ( (LA142_0==DELIMITER1) ) {
                                                alt142=1;
                                            }
                                            switch (alt142) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:817:8: DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3059); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3061);
                                                    crapy_repet("AP.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:818:8: ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt141=2;
                                                    int LA141_0 = input.LA(1);

                                                    if ( (LA141_0==DELIMITER1) ) {
                                                        alt141=1;
                                                    }
                                                    switch (alt141) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:818:9: DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3072); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3074);
                                                            crapy_repet("AP.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:819:9: ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt140=2;
                                                            int LA140_0 = input.LA(1);

                                                            if ( (LA140_0==DELIMITER1) ) {
                                                                alt140=1;
                                                            }
                                                            switch (alt140) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:819:10: DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3086); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3088);
                                                                    crapy_repet("AP.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:820:10: ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt139=2;
                                                                    int LA139_0 = input.LA(1);

                                                                    if ( (LA139_0==DELIMITER1) ) {
                                                                        alt139=1;
                                                                    }
                                                                    switch (alt139) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:820:11: DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3101); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3103);
                                                                            crapy_repet("AP.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:821:11: ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt138=2;
                                                                            int LA138_0 = input.LA(1);

                                                                            if ( (LA138_0==DELIMITER1) ) {
                                                                                alt138=1;
                                                                            }
                                                                            switch (alt138) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:821:12: DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3117); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3119);
                                                                                    crapy_repet("AP.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:822:12: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt137=2;
                                                                                    int LA137_0 = input.LA(1);

                                                                                    if ( (LA137_0==DELIMITER1) ) {
                                                                                        alt137=1;
                                                                                    }
                                                                                    switch (alt137) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:822:13: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3134); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3136);
                                                                                            crapy_repet("AP.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:823:13: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt136=2;
                                                                                            int LA136_0 = input.LA(1);

                                                                                            if ( (LA136_0==DELIMITER1) ) {
                                                                                                alt136=1;
                                                                                            }
                                                                                            switch (alt136) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:823:14: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3152); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3154);
                                                                                                    crapy_repet("AP.11");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:14: ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt135=2;
                                                                                                    int LA135_0 = input.LA(1);

                                                                                                    if ( (LA135_0==DELIMITER1) ) {
                                                                                                        alt135=1;
                                                                                                    }
                                                                                                    switch (alt135) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:15: DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3171); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3173);
                                                                                                            crapy_repet("AP.12");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:825:15: ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt134=2;
                                                                                                            int LA134_0 = input.LA(1);

                                                                                                            if ( (LA134_0==DELIMITER1) ) {
                                                                                                                alt134=1;
                                                                                                            }
                                                                                                            switch (alt134) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:825:16: DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3191); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3193);
                                                                                                                    crapy_repet("AP.13");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:826:16: ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt133=2;
                                                                                                                    int LA133_0 = input.LA(1);

                                                                                                                    if ( (LA133_0==DELIMITER1) ) {
                                                                                                                        alt133=1;
                                                                                                                    }
                                                                                                                    switch (alt133) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:826:17: DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3212); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3214);
                                                                                                                            crapy_repet("AP.14");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:827:17: ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt132=2;
                                                                                                                            int LA132_0 = input.LA(1);

                                                                                                                            if ( (LA132_0==DELIMITER1) ) {
                                                                                                                                alt132=1;
                                                                                                                            }
                                                                                                                            switch (alt132) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:827:18: DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3234); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3236);
                                                                                                                                    crapy_repet("AP.15");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:828:18: ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt131=2;
                                                                                                                                    int LA131_0 = input.LA(1);

                                                                                                                                    if ( (LA131_0==DELIMITER1) ) {
                                                                                                                                        alt131=1;
                                                                                                                                    }
                                                                                                                                    switch (alt131) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:828:19: DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3257); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3259);
                                                                                                                                            crapy_repet("AP.16");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:829:19: ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            int alt130=2;
                                                                                                                                            int LA130_0 = input.LA(1);

                                                                                                                                            if ( (LA130_0==DELIMITER1) ) {
                                                                                                                                                alt130=1;
                                                                                                                                            }
                                                                                                                                            switch (alt130) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:829:20: DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3281); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3283);
                                                                                                                                                    crapy_repet("AP.17");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:830:20: ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    int alt129=2;
                                                                                                                                                    int LA129_0 = input.LA(1);

                                                                                                                                                    if ( (LA129_0==DELIMITER1) ) {
                                                                                                                                                        alt129=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt129) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:830:21: DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3306); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3308);
                                                                                                                                                            crapy_repet("AP.18");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:831:21: ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            int alt128=2;
                                                                                                                                                            int LA128_0 = input.LA(1);

                                                                                                                                                            if ( (LA128_0==DELIMITER1) ) {
                                                                                                                                                                alt128=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt128) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:831:22: DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3332); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3334);
                                                                                                                                                                    crapy_repet("AP.19");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:832:22: ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    int alt127=2;
                                                                                                                                                                    int LA127_0 = input.LA(1);

                                                                                                                                                                    if ( (LA127_0==DELIMITER1) ) {
                                                                                                                                                                        alt127=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt127) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:832:23: DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3359); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3361);
                                                                                                                                                                            crapy_repet("AP.20");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:833:23: ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            int alt126=2;
                                                                                                                                                                            int LA126_0 = input.LA(1);

                                                                                                                                                                            if ( (LA126_0==DELIMITER1) ) {
                                                                                                                                                                                alt126=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt126) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:833:24: DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3387); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3389);
                                                                                                                                                                                    crapy_repet("AP.21");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:834:24: ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    int alt125=2;
                                                                                                                                                                                    int LA125_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA125_0==DELIMITER1) ) {
                                                                                                                                                                                        alt125=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt125) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:834:25: DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3416); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3418);
                                                                                                                                                                                            crapy_repet("AP.22");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:835:25: ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            int alt124=2;
                                                                                                                                                                                            int LA124_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA124_0==DELIMITER1) ) {
                                                                                                                                                                                                alt124=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt124) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:835:26: DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3446); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3448);
                                                                                                                                                                                                    crapy_repet("AP.23");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:836:26: ( DELIMITER1 )?
                                                                                                                                                                                                    int alt123=2;
                                                                                                                                                                                                    int LA123_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA123_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt123=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt123) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:836:26: DELIMITER1
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3476); 

                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap_crapy"



    // $ANTLR start "line_ac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:839:1: line_ac : ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? ;
    public final void line_ac() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:841:23: ( ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:842:3: ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:842:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:842:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac3543); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac3545); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac3547); 

            }


            startElement("AC.1");content("AC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3554); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ac3556);
            nm_integer_sized_mandatory("AC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3561); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3563);
            st_sized_mandatory("AC.3", 9);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3568); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3570);
            st_sized_mandatory("AC.4", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3575); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ac3577);
            ts_sized_optionnal("AC.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3582); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_ac3584);
            ts_sized_mandatory("AC.6", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3589); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3591);
            st_sized_optionnal("AC.7", 28);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3596); 

            pushFollow(FOLLOW_spec_ac_8_in_line_ac3598);
            spec_ac_8("AC.8", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:850:3: ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==DELIMITER1) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:850:4: DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3604); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3606);
                    st_sized_optionnal("AC.9", 40);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:851:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==DELIMITER1) ) {
                        alt148=1;
                    }
                    switch (alt148) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:851:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3613); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3615);
                            spec_sized_mult_lvl1_st_optionnal_6("AC.10", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:852:5: ( DELIMITER1 )?
                            int alt147=2;
                            int LA147_0 = input.LA(1);

                            if ( (LA147_0==DELIMITER1) ) {
                                alt147=1;
                            }
                            switch (alt147) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:852:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3622); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac"



    // $ANTLR start "line_ac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:854:1: line_ac_crapy : ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ac_crapy() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:856:23: ( ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:3: ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac_crapy3646); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac_crapy3648); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac_crapy3650); 

            }


            startElement("AC.1");content("AC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:858:3: ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==DELIMITER1) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:858:4: DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3658); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3660);
                    crapy_repet("AC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:859:4: ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==DELIMITER1) ) {
                        alt158=1;
                    }
                    switch (alt158) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:859:5: DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3667); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3669);
                            crapy_repet("AC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:860:5: ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            int alt157=2;
                            int LA157_0 = input.LA(1);

                            if ( (LA157_0==DELIMITER1) ) {
                                alt157=1;
                            }
                            switch (alt157) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:860:6: DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3677); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3679);
                                    crapy_repet("AC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:861:6: ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    int alt156=2;
                                    int LA156_0 = input.LA(1);

                                    if ( (LA156_0==DELIMITER1) ) {
                                        alt156=1;
                                    }
                                    switch (alt156) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:861:7: DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3688); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3690);
                                            crapy_repet("AC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:862:7: ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            int alt155=2;
                                            int LA155_0 = input.LA(1);

                                            if ( (LA155_0==DELIMITER1) ) {
                                                alt155=1;
                                            }
                                            switch (alt155) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:862:8: DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3700); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3702);
                                                    crapy_repet("AC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:863:8: ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    int alt154=2;
                                                    int LA154_0 = input.LA(1);

                                                    if ( (LA154_0==DELIMITER1) ) {
                                                        alt154=1;
                                                    }
                                                    switch (alt154) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:863:9: DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3713); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3715);
                                                            crapy_repet("AC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:864:9: ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            int alt153=2;
                                                            int LA153_0 = input.LA(1);

                                                            if ( (LA153_0==DELIMITER1) ) {
                                                                alt153=1;
                                                            }
                                                            switch (alt153) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:864:10: DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3727); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3729);
                                                                    crapy_repet("AC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:865:10: ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    int alt152=2;
                                                                    int LA152_0 = input.LA(1);

                                                                    if ( (LA152_0==DELIMITER1) ) {
                                                                        alt152=1;
                                                                    }
                                                                    switch (alt152) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:865:11: DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3742); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3744);
                                                                            crapy_repet("AC.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:866:11: ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            int alt151=2;
                                                                            int LA151_0 = input.LA(1);

                                                                            if ( (LA151_0==DELIMITER1) ) {
                                                                                alt151=1;
                                                                            }
                                                                            switch (alt151) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:866:12: DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3758); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3760);
                                                                                    crapy_repet("AC.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:867:12: ( DELIMITER1 )?
                                                                                    int alt150=2;
                                                                                    int LA150_0 = input.LA(1);

                                                                                    if ( (LA150_0==DELIMITER1) ) {
                                                                                        alt150=1;
                                                                                    }
                                                                                    switch (alt150) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:867:12: DELIMITER1
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3774); 

                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac_crapy"



    // $ANTLR start "line_act"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:1: line_act : ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? ;
    public final void line_act() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:872:23: ( ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:3: ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act3813); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act3815); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act3817); 

            match(input,CHART,FOLLOW_CHART_in_line_act3819); 

            }


            startElement("ACT.1");content("ACT");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3826); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_act3828);
            nm_integer_sized_mandatory("ACT.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3833); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_act3835);
            st_sized_mandatory("ACT.3", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3840); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3842);
            nm_sized_mandatory("ACT.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3847); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3849);
            nm_sized_mandatory("ACT.5", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3854); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3856);
            nm_sized_mandatory("ACT.6", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3861); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act3863);
            st_sized_optionnal("ACT.7", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3868); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act3870);
            st_sized_optionnal("ACT.8", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3875); 

            pushFollow(FOLLOW_spec_fac_6_in_line_act3877);
            spec_fac_6("ACT.9", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3882); 

            pushFollow(FOLLOW_spec_act_10_in_line_act3884);
            spec_act_10("ACT.10", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3889); 

            pushFollow(FOLLOW_spec_act_11_in_line_act3891);
            spec_act_11("ACT.11");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:3: ( DELIMITER1 )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==DELIMITER1) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3896); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act"



    // $ANTLR start "line_act_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:886:1: line_act_crapy : ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_act_crapy() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:888:23: ( ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:3: ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act_crapy3916); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act_crapy3918); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act_crapy3920); 

            match(input,CHART,FOLLOW_CHART_in_line_act_crapy3922); 

            }


            startElement("ACT.1");content("ACT");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:3: ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==DELIMITER1) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:4: DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3930); 

                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3932);
                    crapy_repet("ACT.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:891:4: ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==DELIMITER1) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:891:5: DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3939); 

                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3941);
                            crapy_repet("ACT.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:892:5: ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt169=2;
                            int LA169_0 = input.LA(1);

                            if ( (LA169_0==DELIMITER1) ) {
                                alt169=1;
                            }
                            switch (alt169) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:892:6: DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3949); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3951);
                                    crapy_repet("ACT.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:893:6: ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt168=2;
                                    int LA168_0 = input.LA(1);

                                    if ( (LA168_0==DELIMITER1) ) {
                                        alt168=1;
                                    }
                                    switch (alt168) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:893:7: DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3960); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3962);
                                            crapy_repet("ACT.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:894:7: ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt167=2;
                                            int LA167_0 = input.LA(1);

                                            if ( (LA167_0==DELIMITER1) ) {
                                                alt167=1;
                                            }
                                            switch (alt167) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:894:8: DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3972); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3974);
                                                    crapy_repet("ACT.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:895:8: ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt166=2;
                                                    int LA166_0 = input.LA(1);

                                                    if ( (LA166_0==DELIMITER1) ) {
                                                        alt166=1;
                                                    }
                                                    switch (alt166) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:895:9: DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3985); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3987);
                                                            crapy_repet("ACT.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:9: ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            int alt165=2;
                                                            int LA165_0 = input.LA(1);

                                                            if ( (LA165_0==DELIMITER1) ) {
                                                                alt165=1;
                                                            }
                                                            switch (alt165) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:10: DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3999); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4001);
                                                                    crapy_repet("ACT.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:897:10: ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    int alt164=2;
                                                                    int LA164_0 = input.LA(1);

                                                                    if ( (LA164_0==DELIMITER1) ) {
                                                                        alt164=1;
                                                                    }
                                                                    switch (alt164) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:897:11: DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4014); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4016);
                                                                            crapy_repet("ACT.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:898:11: ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            int alt163=2;
                                                                            int LA163_0 = input.LA(1);

                                                                            if ( (LA163_0==DELIMITER1) ) {
                                                                                alt163=1;
                                                                            }
                                                                            switch (alt163) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:898:12: DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4030); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4032);
                                                                                    crapy_repet("ACT.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:12: ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    int alt162=2;
                                                                                    int LA162_0 = input.LA(1);

                                                                                    if ( (LA162_0==DELIMITER1) ) {
                                                                                        alt162=1;
                                                                                    }
                                                                                    switch (alt162) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:13: DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4047); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4049);
                                                                                            crapy_repet("ACT.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:900:13: ( DELIMITER1 )?
                                                                                            int alt161=2;
                                                                                            int LA161_0 = input.LA(1);

                                                                                            if ( (LA161_0==DELIMITER1) ) {
                                                                                                alt161=1;
                                                                                            }
                                                                                            switch (alt161) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:900:13: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4064); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act_crapy"



    // $ANTLR start "line_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:903:1: line_fac : ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_fac() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:905:23: ( ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:3: ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac4105); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac4107); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac4109); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac4111); 

            }


            startElement("FAC.1");content("FAC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4118); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_fac4120);
            nm_integer_sized_mandatory("FAC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4125); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac4127);
            st_sized_mandatory("FAC.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4132); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac4134);
            st_sized_mandatory("FAC.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4139); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_fac4141);
            ts_sized_mandatory("FAC.5", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:3: ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==DELIMITER1) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:4: DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4147); 

                    pushFollow(FOLLOW_spec_fac_6_in_line_fac4149);
                    spec_fac_6("FAC.6", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:4: ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==DELIMITER1) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:5: DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4156); 

                            pushFollow(FOLLOW_spec_fac_6_in_line_fac4158);
                            spec_fac_6("FAC.7", 60);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:5: ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            int alt173=2;
                            int LA173_0 = input.LA(1);

                            if ( (LA173_0==DELIMITER1) ) {
                                alt173=1;
                            }
                            switch (alt173) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:6: DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4166); 

                                    pushFollow(FOLLOW_spec_on_optionnal_in_line_fac4168);
                                    spec_on_optionnal("FAC.8");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:914:6: ( DELIMITER1 )?
                                    int alt172=2;
                                    int LA172_0 = input.LA(1);

                                    if ( (LA172_0==DELIMITER1) ) {
                                        alt172=1;
                                    }
                                    switch (alt172) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:914:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4176); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac"



    // $ANTLR start "line_fac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:916:1: line_fac_crapy : ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_fac_crapy() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:918:23: ( ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:919:3: ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:919:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:919:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac_crapy4204); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac_crapy4206); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac_crapy4208); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac_crapy4210); 

            }


            startElement("FAC.1");content("FAC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:3: ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==DELIMITER1) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:4: DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4218); 

                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4220);
                    crapy_repet("FAC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:4: ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==DELIMITER1) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:5: DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4227); 

                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4229);
                            crapy_repet("FAC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:922:5: ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt181=2;
                            int LA181_0 = input.LA(1);

                            if ( (LA181_0==DELIMITER1) ) {
                                alt181=1;
                            }
                            switch (alt181) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:922:6: DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4237); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4239);
                                    crapy_repet("FAC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:923:6: ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt180=2;
                                    int LA180_0 = input.LA(1);

                                    if ( (LA180_0==DELIMITER1) ) {
                                        alt180=1;
                                    }
                                    switch (alt180) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:923:7: DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4248); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4250);
                                            crapy_repet("FAC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:924:7: ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt179=2;
                                            int LA179_0 = input.LA(1);

                                            if ( (LA179_0==DELIMITER1) ) {
                                                alt179=1;
                                            }
                                            switch (alt179) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:924:8: DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4260); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4262);
                                                    crapy_repet("FAC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:925:8: ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    int alt178=2;
                                                    int LA178_0 = input.LA(1);

                                                    if ( (LA178_0==DELIMITER1) ) {
                                                        alt178=1;
                                                    }
                                                    switch (alt178) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:925:9: DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4273); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4275);
                                                            crapy_repet("FAC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:926:9: ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            int alt177=2;
                                                            int LA177_0 = input.LA(1);

                                                            if ( (LA177_0==DELIMITER1) ) {
                                                                alt177=1;
                                                            }
                                                            switch (alt177) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:926:10: DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4287); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4289);
                                                                    crapy_repet("FAC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:927:10: ( DELIMITER1 )?
                                                                    int alt176=2;
                                                                    int LA176_0 = input.LA(1);

                                                                    if ( (LA176_0==DELIMITER1) ) {
                                                                        alt176=1;
                                                                    }
                                                                    switch (alt176) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:927:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4301); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac_crapy"



    // $ANTLR start "line_p"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:930:1: line_p : ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:932:23: ( ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:933:3: ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:933:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:933:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p4336); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p4338); 

            }


            startElement("P.1");content("P");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4345); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_p4347);
            nm_integer_sized_mandatory("P.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4352); 

            pushFollow(FOLLOW_spec_sized_8_3_in_line_p4354);
            spec_sized_8_3("P.3", 36);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4359); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4361);
            st_sized_optionnal("P.4", 16);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:937:3: ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==DELIMITER1) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:937:4: DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4367); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4369);
                    st_sized_optionnal("P.5", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt217=2;
                    int LA217_0 = input.LA(1);

                    if ( (LA217_0==DELIMITER1) ) {
                        alt217=1;
                    }
                    switch (alt217) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4376); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4378);
                            spec_sized_mult_lvl1_st_optionnal_6("P.6", 48);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:939:5: ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt216=2;
                            int LA216_0 = input.LA(1);

                            if ( (LA216_0==DELIMITER1) ) {
                                alt216=1;
                            }
                            switch (alt216) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:939:6: DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4386); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4388);
                                    st_sized_optionnal("P.7", 24);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:940:6: ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt215=2;
                                    int LA215_0 = input.LA(1);

                                    if ( (LA215_0==DELIMITER1) ) {
                                        alt215=1;
                                    }
                                    switch (alt215) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:940:7: DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4397); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4399);
                                            ts_sized_optionnal("P.8", 26);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:941:7: ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt214=2;
                                            int LA214_0 = input.LA(1);

                                            if ( (LA214_0==DELIMITER1) ) {
                                                alt214=1;
                                            }
                                            switch (alt214) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:941:8: DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4409); 

                                                    pushFollow(FOLLOW_spec_const_sexe_in_line_p4411);
                                                    spec_const_sexe("P.9");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:942:8: ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt213=2;
                                                    int LA213_0 = input.LA(1);

                                                    if ( (LA213_0==DELIMITER1) ) {
                                                        alt213=1;
                                                    }
                                                    switch (alt213) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:942:9: DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4422); 

                                                            pushFollow(FOLLOW_spec_const_race_in_line_p4424);
                                                            spec_const_race("P.10");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:9: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt212=2;
                                                            int LA212_0 = input.LA(1);

                                                            if ( (LA212_0==DELIMITER1) ) {
                                                                alt212=1;
                                                            }
                                                            switch (alt212) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:10: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4436); 

                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4438);
                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.11", 200);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:10: ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt211=2;
                                                                    int LA211_0 = input.LA(1);

                                                                    if ( (LA211_0==DELIMITER1) ) {
                                                                        alt211=1;
                                                                    }
                                                                    switch (alt211) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:11: DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4451); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4453);
                                                                            st_sized_optionnal("P.12", 120);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:11: ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt210=2;
                                                                            int LA210_0 = input.LA(1);

                                                                            if ( (LA210_0==DELIMITER1) ) {
                                                                                alt210=1;
                                                                            }
                                                                            switch (alt210) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:12: DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4467); 

                                                                                    pushFollow(FOLLOW_spec_sized_tn_in_line_p4469);
                                                                                    spec_sized_tn("P.13", 40);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:12: ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt209=2;
                                                                                    int LA209_0 = input.LA(1);

                                                                                    if ( (LA209_0==DELIMITER1) ) {
                                                                                        alt209=1;
                                                                                    }
                                                                                    switch (alt209) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:13: DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4508); 

                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_p4510);
                                                                                            spec_sized_cna("P.14", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:51: ( REPETITEUR spec_sized_cna[\"P.14\", 60] )*
                                                                                            loop184:
                                                                                            do {
                                                                                                int alt184=2;
                                                                                                int LA184_0 = input.LA(1);

                                                                                                if ( (LA184_0==REPETITEUR) ) {
                                                                                                    alt184=1;
                                                                                                }


                                                                                                switch (alt184) {
                                                                                            	case 1 :
                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:52: REPETITEUR spec_sized_cna[\"P.14\", 60]
                                                                                            	    {
                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4514); 

                                                                                            	    pushFollow(FOLLOW_spec_sized_cna_in_line_p4516);
                                                                                            	    spec_sized_cna("P.14", 60);

                                                                                            	    state._fsp--;


                                                                                            	    }
                                                                                            	    break;

                                                                                            	default :
                                                                                            	    break loop184;
                                                                                                }
                                                                                            } while (true);


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:13: ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt208=2;
                                                                                            int LA208_0 = input.LA(1);

                                                                                            if ( (LA208_0==DELIMITER1) ) {
                                                                                                alt208=1;
                                                                                            }
                                                                                            switch (alt208) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:14: DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4534); 

                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4536);
                                                                                                    st_sized_optionnal("P.15", 60);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:14: ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt207=2;
                                                                                                    int LA207_0 = input.LA(1);

                                                                                                    if ( (LA207_0==DELIMITER1) ) {
                                                                                                        alt207=1;
                                                                                                    }
                                                                                                    switch (alt207) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:15: DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4553); 

                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4555);
                                                                                                            st_sized_optionnal("P.16", 60);

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:15: ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt206=2;
                                                                                                            int LA206_0 = input.LA(1);

                                                                                                            if ( (LA206_0==DELIMITER1) ) {
                                                                                                                alt206=1;
                                                                                                            }
                                                                                                            switch (alt206) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:16: DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4588); 

                                                                                                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4590);
                                                                                                                    nm_sized_optionnal("P.17", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:16: ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt205=2;
                                                                                                                    int LA205_0 = input.LA(1);

                                                                                                                    if ( (LA205_0==DELIMITER1) ) {
                                                                                                                        alt205=1;
                                                                                                                    }
                                                                                                                    switch (alt205) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:17: DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4625); 

                                                                                                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4627);
                                                                                                                            nm_sized_optionnal("P.18", 10);

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:17: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt204=2;
                                                                                                                            int LA204_0 = input.LA(1);

                                                                                                                            if ( (LA204_0==DELIMITER1) ) {
                                                                                                                                alt204=1;
                                                                                                                            }
                                                                                                                            switch (alt204) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:18: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4647); 

                                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4649);
                                                                                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:78: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )*
                                                                                                                                    loop185:
                                                                                                                                    do {
                                                                                                                                        int alt185=2;
                                                                                                                                        int LA185_0 = input.LA(1);

                                                                                                                                        if ( (LA185_0==REPETITEUR) ) {
                                                                                                                                            alt185=1;
                                                                                                                                        }


                                                                                                                                        switch (alt185) {
                                                                                                                                    	case 1 :
                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:79: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200]
                                                                                                                                    	    {
                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4653); 

                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4655);
                                                                                                                                    	    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    	    state._fsp--;


                                                                                                                                    	    }
                                                                                                                                    	    break;

                                                                                                                                    	default :
                                                                                                                                    	    break loop185;
                                                                                                                                        }
                                                                                                                                    } while (true);


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:18: ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt203=2;
                                                                                                                                    int LA203_0 = input.LA(1);

                                                                                                                                    if ( (LA203_0==DELIMITER1) ) {
                                                                                                                                        alt203=1;
                                                                                                                                    }
                                                                                                                                    switch (alt203) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:19: DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4678); 

                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4680);
                                                                                                                                            st_sized_optionnal("P.20", 200);

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:62: ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )*
                                                                                                                                            loop186:
                                                                                                                                            do {
                                                                                                                                                int alt186=2;
                                                                                                                                                int LA186_0 = input.LA(1);

                                                                                                                                                if ( (LA186_0==REPETITEUR) ) {
                                                                                                                                                    alt186=1;
                                                                                                                                                }


                                                                                                                                                switch (alt186) {
                                                                                                                                            	case 1 :
                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:63: REPETITEUR st_sized_optionnal[\"P.20\", 200]
                                                                                                                                            	    {
                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4684); 

                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4686);
                                                                                                                                            	    st_sized_optionnal("P.20", 200);

                                                                                                                                            	    state._fsp--;


                                                                                                                                            	    }
                                                                                                                                            	    break;

                                                                                                                                            	default :
                                                                                                                                            	    break loop186;
                                                                                                                                                }
                                                                                                                                            } while (true);


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:957:19: ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt202=2;
                                                                                                                                            int LA202_0 = input.LA(1);

                                                                                                                                            if ( (LA202_0==DELIMITER1) ) {
                                                                                                                                                alt202=1;
                                                                                                                                            }
                                                                                                                                            switch (alt202) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:957:20: DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4710); 

                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4712);
                                                                                                                                                    st_sized_optionnal("P.21", 200);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:958:20: ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt201=2;
                                                                                                                                                    int LA201_0 = input.LA(1);

                                                                                                                                                    if ( (LA201_0==DELIMITER1) ) {
                                                                                                                                                        alt201=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt201) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:958:21: DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4735); 

                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4737);
                                                                                                                                                            st_sized_optionnal("P.22", 60);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:959:21: ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt200=2;
                                                                                                                                                            int LA200_0 = input.LA(1);

                                                                                                                                                            if ( (LA200_0==DELIMITER1) ) {
                                                                                                                                                                alt200=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt200) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:959:22: DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4761); 

                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4763);
                                                                                                                                                                    st_sized_optionnal("P.23", 60);

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:22: ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt199=2;
                                                                                                                                                                    int LA199_0 = input.LA(1);

                                                                                                                                                                    if ( (LA199_0==DELIMITER1) ) {
                                                                                                                                                                        alt199=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt199) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:23: DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4788); 

                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4790);
                                                                                                                                                                            ts_sized_optionnal("P.24", 26);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:65: ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )?
                                                                                                                                                                            int alt187=2;
                                                                                                                                                                            int LA187_0 = input.LA(1);

                                                                                                                                                                            if ( (LA187_0==REPETITEUR) ) {
                                                                                                                                                                                alt187=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt187) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:66: REPETITEUR ts_sized_optionnal[\"P.24\", 26]
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4794); 

                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4796);
                                                                                                                                                                                    ts_sized_optionnal("P.24", 26);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:961:23: ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt198=2;
                                                                                                                                                                            int LA198_0 = input.LA(1);

                                                                                                                                                                            if ( (LA198_0==DELIMITER1) ) {
                                                                                                                                                                                alt198=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt198) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:961:24: DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4824); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_const_8_25_in_line_p4826);
                                                                                                                                                                                    spec_const_8_25("P.25");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:962:24: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt197=2;
                                                                                                                                                                                    int LA197_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA197_0==DELIMITER1) ) {
                                                                                                                                                                                        alt197=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt197) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:962:25: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4853); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p4855);
                                                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_8("P.26", 100);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:964:25: ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt196=2;
                                                                                                                                                                                            int LA196_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA196_0==DELIMITER1) ) {
                                                                                                                                                                                                alt196=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt196) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:964:26: DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4908); 

                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4910);
                                                                                                                                                                                                    st_sized_optionnal("P.27", 100);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:26: ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt195=2;
                                                                                                                                                                                                    int LA195_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA195_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt195=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt195) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:27: DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4939); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_p4941);
                                                                                                                                                                                                            spec_const_race("P.28");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:967:27: ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt194=2;
                                                                                                                                                                                                            int LA194_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA194_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt194=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt194) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:967:28: DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4998); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p5000);
                                                                                                                                                                                                                    st_sized_optionnal("P.29", 2);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:969:28: ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt193=2;
                                                                                                                                                                                                                    int LA193_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA193_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt193=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt193) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:969:29: DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5059); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p5061);
                                                                                                                                                                                                                            st_sized_optionnal("P.30", 20);

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:970:29: ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            int alt192=2;
                                                                                                                                                                                                                            int LA192_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA192_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt192=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt192) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:970:30: DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5093); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p5095);
                                                                                                                                                                                                                                    st_sized_optionnal("P.31", 20);

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:972:30: ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    int alt191=2;
                                                                                                                                                                                                                                    int LA191_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA191_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt191=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt191) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:972:31: DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5158); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p5160);
                                                                                                                                                                                                                                            st_sized_optionnal("P.32", 20);

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:973:31: ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            int alt190=2;
                                                                                                                                                                                                                                            int LA190_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA190_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt190=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt190) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:973:32: DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5194); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5196);
                                                                                                                                                                                                                                                    ts_sized_optionnal("P.33", 26);

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:974:32: ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    int alt189=2;
                                                                                                                                                                                                                                                    int LA189_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA189_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt189=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt189) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:974:33: DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5231); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5233);
                                                                                                                                                                                                                                                            ts_sized_optionnal("P.34", 26);

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:975:33: ( DELIMITER1 )?
                                                                                                                                                                                                                                                            int alt188=2;
                                                                                                                                                                                                                                                            int LA188_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA188_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt188=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt188) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:975:33: DELIMITER1
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5268); 

                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p"



    // $ANTLR start "line_p_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:977:1: line_p_crapy : ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p_crapy() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:979:23: ( ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:3: ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p_crapy5348); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p_crapy5350); 

            }


            startElement("P.1");content("P");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:981:3: ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==DELIMITER1) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:981:4: DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5358); 

                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5360);
                    crapy_repet("P.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:982:4: ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt251=2;
                    int LA251_0 = input.LA(1);

                    if ( (LA251_0==DELIMITER1) ) {
                        alt251=1;
                    }
                    switch (alt251) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:982:5: DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5367); 

                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5369);
                            crapy_repet("P.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:983:5: ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt250=2;
                            int LA250_0 = input.LA(1);

                            if ( (LA250_0==DELIMITER1) ) {
                                alt250=1;
                            }
                            switch (alt250) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:983:6: DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5377); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5379);
                                    crapy_repet("P.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:984:6: ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt249=2;
                                    int LA249_0 = input.LA(1);

                                    if ( (LA249_0==DELIMITER1) ) {
                                        alt249=1;
                                    }
                                    switch (alt249) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:984:7: DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5388); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5390);
                                            crapy_repet("P.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:985:7: ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt248=2;
                                            int LA248_0 = input.LA(1);

                                            if ( (LA248_0==DELIMITER1) ) {
                                                alt248=1;
                                            }
                                            switch (alt248) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:985:8: DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5400); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5402);
                                                    crapy_repet("P.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:986:8: ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt247=2;
                                                    int LA247_0 = input.LA(1);

                                                    if ( (LA247_0==DELIMITER1) ) {
                                                        alt247=1;
                                                    }
                                                    switch (alt247) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:986:9: DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5413); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5415);
                                                            crapy_repet("P.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:9: ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt246=2;
                                                            int LA246_0 = input.LA(1);

                                                            if ( (LA246_0==DELIMITER1) ) {
                                                                alt246=1;
                                                            }
                                                            switch (alt246) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:10: DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5427); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5429);
                                                                    crapy_repet("P.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:988:10: ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt245=2;
                                                                    int LA245_0 = input.LA(1);

                                                                    if ( (LA245_0==DELIMITER1) ) {
                                                                        alt245=1;
                                                                    }
                                                                    switch (alt245) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:988:11: DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5442); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5444);
                                                                            crapy_repet("P.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:989:11: ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt244=2;
                                                                            int LA244_0 = input.LA(1);

                                                                            if ( (LA244_0==DELIMITER1) ) {
                                                                                alt244=1;
                                                                            }
                                                                            switch (alt244) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:989:12: DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5458); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5460);
                                                                                    crapy_repet("P.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:990:12: ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt243=2;
                                                                                    int LA243_0 = input.LA(1);

                                                                                    if ( (LA243_0==DELIMITER1) ) {
                                                                                        alt243=1;
                                                                                    }
                                                                                    switch (alt243) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:990:13: DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5475); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5477);
                                                                                            crapy_repet("P.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:13: ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt242=2;
                                                                                            int LA242_0 = input.LA(1);

                                                                                            if ( (LA242_0==DELIMITER1) ) {
                                                                                                alt242=1;
                                                                                            }
                                                                                            switch (alt242) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:14: DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5493); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5495);
                                                                                                    crapy_repet("P.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:14: ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt241=2;
                                                                                                    int LA241_0 = input.LA(1);

                                                                                                    if ( (LA241_0==DELIMITER1) ) {
                                                                                                        alt241=1;
                                                                                                    }
                                                                                                    switch (alt241) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:15: DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5512); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5514);
                                                                                                            crapy_repet("P.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:15: ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt240=2;
                                                                                                            int LA240_0 = input.LA(1);

                                                                                                            if ( (LA240_0==DELIMITER1) ) {
                                                                                                                alt240=1;
                                                                                                            }
                                                                                                            switch (alt240) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:16: DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5532); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5534);
                                                                                                                    crapy_repet("P.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:994:16: ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt239=2;
                                                                                                                    int LA239_0 = input.LA(1);

                                                                                                                    if ( (LA239_0==DELIMITER1) ) {
                                                                                                                        alt239=1;
                                                                                                                    }
                                                                                                                    switch (alt239) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:994:17: DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5553); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5555);
                                                                                                                            crapy_repet("P.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:995:17: ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt238=2;
                                                                                                                            int LA238_0 = input.LA(1);

                                                                                                                            if ( (LA238_0==DELIMITER1) ) {
                                                                                                                                alt238=1;
                                                                                                                            }
                                                                                                                            switch (alt238) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:995:18: DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5575); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5577);
                                                                                                                                    crapy_repet("P.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:996:18: ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt237=2;
                                                                                                                                    int LA237_0 = input.LA(1);

                                                                                                                                    if ( (LA237_0==DELIMITER1) ) {
                                                                                                                                        alt237=1;
                                                                                                                                    }
                                                                                                                                    switch (alt237) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:996:19: DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5598); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5600);
                                                                                                                                            crapy_repet("P.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:997:19: ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt236=2;
                                                                                                                                            int LA236_0 = input.LA(1);

                                                                                                                                            if ( (LA236_0==DELIMITER1) ) {
                                                                                                                                                alt236=1;
                                                                                                                                            }
                                                                                                                                            switch (alt236) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:997:20: DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5622); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5624);
                                                                                                                                                    crapy_repet("P.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:998:20: ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt235=2;
                                                                                                                                                    int LA235_0 = input.LA(1);

                                                                                                                                                    if ( (LA235_0==DELIMITER1) ) {
                                                                                                                                                        alt235=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt235) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:998:21: DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5647); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5649);
                                                                                                                                                            crapy_repet("P.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:21: ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt234=2;
                                                                                                                                                            int LA234_0 = input.LA(1);

                                                                                                                                                            if ( (LA234_0==DELIMITER1) ) {
                                                                                                                                                                alt234=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt234) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:22: DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5673); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5675);
                                                                                                                                                                    crapy_repet("P.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1000:22: ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt233=2;
                                                                                                                                                                    int LA233_0 = input.LA(1);

                                                                                                                                                                    if ( (LA233_0==DELIMITER1) ) {
                                                                                                                                                                        alt233=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt233) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1000:23: DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5700); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5702);
                                                                                                                                                                            crapy_repet("P.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1001:23: ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt232=2;
                                                                                                                                                                            int LA232_0 = input.LA(1);

                                                                                                                                                                            if ( (LA232_0==DELIMITER1) ) {
                                                                                                                                                                                alt232=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt232) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1001:24: DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5728); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5730);
                                                                                                                                                                                    crapy_repet("P.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:24: ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt231=2;
                                                                                                                                                                                    int LA231_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA231_0==DELIMITER1) ) {
                                                                                                                                                                                        alt231=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt231) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:25: DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5757); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5759);
                                                                                                                                                                                            crapy_repet("P.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:25: ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt230=2;
                                                                                                                                                                                            int LA230_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA230_0==DELIMITER1) ) {
                                                                                                                                                                                                alt230=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt230) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:26: DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5787); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5789);
                                                                                                                                                                                                    crapy_repet("P.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1004:26: ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt229=2;
                                                                                                                                                                                                    int LA229_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA229_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt229=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt229) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1004:27: DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5818); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5820);
                                                                                                                                                                                                            crapy_repet("P.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1005:27: ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt228=2;
                                                                                                                                                                                                            int LA228_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA228_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt228=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt228) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1005:28: DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5850); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5852);
                                                                                                                                                                                                                    crapy_repet("P.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1006:28: ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt227=2;
                                                                                                                                                                                                                    int LA227_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA227_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt227=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt227) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1006:29: DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5883); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5885);
                                                                                                                                                                                                                            crapy_repet("P.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1007:29: ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt226=2;
                                                                                                                                                                                                                            int LA226_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA226_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt226=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt226) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1007:30: DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5917); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5919);
                                                                                                                                                                                                                                    crapy_repet("P.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1008:30: ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt225=2;
                                                                                                                                                                                                                                    int LA225_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA225_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt225=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt225) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1008:31: DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5952); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5954);
                                                                                                                                                                                                                                            crapy_repet("P.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:31: ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt224=2;
                                                                                                                                                                                                                                            int LA224_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA224_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt224=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt224) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:32: DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5988); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5990);
                                                                                                                                                                                                                                                    crapy_repet("P.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:32: ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt223=2;
                                                                                                                                                                                                                                                    int LA223_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA223_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt223=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt223) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:33: DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6025); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6027);
                                                                                                                                                                                                                                                            crapy_repet("P.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1011:33: ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            int alt222=2;
                                                                                                                                                                                                                                                            int LA222_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA222_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt222=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt222) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1011:34: DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6063); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6065);
                                                                                                                                                                                                                                                                    crapy_repet("P.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1012:34: ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    int alt221=2;
                                                                                                                                                                                                                                                                    int LA221_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA221_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt221=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt221) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1012:35: DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6102); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6104);
                                                                                                                                                                                                                                                                            crapy_repet("P.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1013:35: ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            int alt220=2;
                                                                                                                                                                                                                                                                            int LA220_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA220_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt220=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt220) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1013:36: DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6142); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6144);
                                                                                                                                                                                                                                                                                    crapy_repet("P.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:36: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    int alt219=2;
                                                                                                                                                                                                                                                                                    int LA219_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA219_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt219=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt219) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:36: DELIMITER1
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6182); 

                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p_crapy"



    // $ANTLR start "line_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1017:1: line_reg : ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? ;
    public final void line_reg() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1019:23: ( ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1020:3: ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1020:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1020:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg6269); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg6271); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg6273); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg6275); 

            }


            startElement("REG.1");content("REG");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6282); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_reg6284);
            nm_integer_sized_mandatory("REG.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6289); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_reg6291);
            st_sized_mandatory("REG.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6296); 

            pushFollow(FOLLOW_spec_reg_4_in_line_reg6298);
            spec_reg_4("REG.4", 11);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6303); 

            pushFollow(FOLLOW_spec_p_or_m_in_line_reg6305);
            spec_p_or_m("REG.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6310); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_reg6312);
            ts_sized_mandatory("REG.6", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:3: ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==DELIMITER1) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:4: DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6321); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6323);
                    st_sized_optionnal("REG.7", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:4: ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    int alt254=2;
                    int LA254_0 = input.LA(1);

                    if ( (LA254_0==DELIMITER1) ) {
                        alt254=1;
                    }
                    switch (alt254) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:5: DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6330); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6332);
                            st_sized_optionnal("REG.8", 10);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:5: ( DELIMITER1 )?
                            int alt253=2;
                            int LA253_0 = input.LA(1);

                            if ( (LA253_0==DELIMITER1) ) {
                                alt253=1;
                            }
                            switch (alt253) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6339); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg"



    // $ANTLR start "line_reg_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:1: line_reg_crapy : ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_reg_crapy() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1033:23: ( ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:3: ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg_crapy6363); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg_crapy6365); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg_crapy6367); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg_crapy6369); 

            }


            startElement("REG.1");content("REG");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:3: ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==DELIMITER1) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:4: DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6377); 

                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6379);
                    crapy_repet("REG.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:4: ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt262=2;
                    int LA262_0 = input.LA(1);

                    if ( (LA262_0==DELIMITER1) ) {
                        alt262=1;
                    }
                    switch (alt262) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:5: DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6386); 

                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6388);
                            crapy_repet("REG.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:5: ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt261=2;
                            int LA261_0 = input.LA(1);

                            if ( (LA261_0==DELIMITER1) ) {
                                alt261=1;
                            }
                            switch (alt261) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:6: DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6396); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6398);
                                    crapy_repet("REG.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:6: ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt260=2;
                                    int LA260_0 = input.LA(1);

                                    if ( (LA260_0==DELIMITER1) ) {
                                        alt260=1;
                                    }
                                    switch (alt260) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:7: DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6407); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6409);
                                            crapy_repet("REG.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:7: ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt259=2;
                                            int LA259_0 = input.LA(1);

                                            if ( (LA259_0==DELIMITER1) ) {
                                                alt259=1;
                                            }
                                            switch (alt259) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:8: DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6419); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6421);
                                                    crapy_repet("REG.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:8: ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    int alt258=2;
                                                    int LA258_0 = input.LA(1);

                                                    if ( (LA258_0==DELIMITER1) ) {
                                                        alt258=1;
                                                    }
                                                    switch (alt258) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:9: DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6432); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6434);
                                                            crapy_repet("REG.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:9: ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            int alt257=2;
                                                            int LA257_0 = input.LA(1);

                                                            if ( (LA257_0==DELIMITER1) ) {
                                                                alt257=1;
                                                            }
                                                            switch (alt257) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:10: DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6446); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6448);
                                                                    crapy_repet("REG.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1042:10: ( DELIMITER1 )?
                                                                    int alt256=2;
                                                                    int LA256_0 = input.LA(1);

                                                                    if ( (LA256_0==DELIMITER1) ) {
                                                                        alt256=1;
                                                                    }
                                                                    switch (alt256) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1042:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6460); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg_crapy"



    // $ANTLR start "line_obr"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1045:1: line_obr : ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1047:23: ( ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:3: ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr6495); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr6497); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr6499); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr6501); 

            }


            startElement("OBR.1");content("OBR");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6508); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obr6510);
            nm_integer_sized_mandatory("OBR.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6515); 

            pushFollow(FOLLOW_spec_sized_9_3_in_line_obr6517);
            spec_sized_9_3("OBR.3", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6522); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6524);
            spec_sized_mult_lvl1_st_optionnal_2("OBR.4", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6529); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6531);
            spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 640000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:67: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )*
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( (LA264_0==REPETITEUR) ) {
                    alt264=1;
                }


                switch (alt264) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:68: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6535); 

            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6537);
            	    spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop264;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6547); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6549);
            st_sized_optionnal("OBR.6", 2);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:45: ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==REPETITEUR) ) {
                    alt265=1;
                }


                switch (alt265) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:46: REPETITEUR st_sized_optionnal[\"OBR.6\", 2]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6553); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6555);
            	    st_sized_optionnal("OBR.6", 2);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6562); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6564);
            ts_sized_optionnal("OBR.7", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6569); 

            pushFollow(FOLLOW_spec_non_sized_9_8_in_line_obr6571);
            spec_non_sized_9_8("OBR.8");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6576); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6578);
            ts_sized_optionnal("OBR.9", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6586); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6588);
            st_sized_optionnal("OBR.10", 20);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6593); 

            pushFollow(FOLLOW_spec_sized_cna_in_line_obr6595);
            spec_sized_cna("OBR.11", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6603); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6605);
            st_sized_optionnal("OBR.12", 1);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:3: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==DELIMITER1) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:4: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6614); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6616);
                    spec_sized_mult_lvl1_st_optionnal_2("OBR.13", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:4: ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==DELIMITER1) ) {
                        alt292=1;
                    }
                    switch (alt292) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:5: DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6623); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6625);
                            st_sized_optionnal("OBR.14", 300);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:5: ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt291=2;
                            int LA291_0 = input.LA(1);

                            if ( (LA291_0==DELIMITER1) ) {
                                alt291=1;
                            }
                            switch (alt291) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:6: DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6633); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6635);
                                    ts_sized_optionnal("OBR.15", 26);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:6: ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt290=2;
                                    int LA290_0 = input.LA(1);

                                    if ( (LA290_0==DELIMITER1) ) {
                                        alt290=1;
                                    }
                                    switch (alt290) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:7: DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6644); 

                                            pushFollow(FOLLOW_spec_sized_9_16_in_line_obr6646);
                                            spec_sized_9_16("OBR.16", 300);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:7: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt289=2;
                                            int LA289_0 = input.LA(1);

                                            if ( (LA289_0==DELIMITER1) ) {
                                                alt289=1;
                                            }
                                            switch (alt289) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:8: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6656); 

                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6658);
                                                    spec_sized_mult_lvl1_st_optionnal_6("OBR.17", 60);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1069:8: ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt288=2;
                                                    int LA288_0 = input.LA(1);

                                                    if ( (LA288_0==DELIMITER1) ) {
                                                        alt288=1;
                                                    }
                                                    switch (alt288) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1069:9: DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6669); 

                                                            pushFollow(FOLLOW_spec_sized_tn_in_line_obr6671);
                                                            spec_sized_tn("OBR.18", 40);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1070:9: ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt287=2;
                                                            int LA287_0 = input.LA(1);

                                                            if ( (LA287_0==DELIMITER1) ) {
                                                                alt287=1;
                                                            }
                                                            switch (alt287) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1070:10: DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6683); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6685);
                                                                    st_sized_optionnal("OBR.19", 60);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1071:10: ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt286=2;
                                                                    int LA286_0 = input.LA(1);

                                                                    if ( (LA286_0==DELIMITER1) ) {
                                                                        alt286=1;
                                                                    }
                                                                    switch (alt286) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1071:11: DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6698); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6700);
                                                                            st_sized_optionnal("OBR.20", 60);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1072:11: ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt285=2;
                                                                            int LA285_0 = input.LA(1);

                                                                            if ( (LA285_0==DELIMITER1) ) {
                                                                                alt285=1;
                                                                            }
                                                                            switch (alt285) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1072:12: DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6714); 

                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6716);
                                                                                    st_sized_optionnal("OBR.21", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1073:12: ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt284=2;
                                                                                    int LA284_0 = input.LA(1);

                                                                                    if ( (LA284_0==DELIMITER1) ) {
                                                                                        alt284=1;
                                                                                    }
                                                                                    switch (alt284) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1073:13: DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6731); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6733);
                                                                                            st_sized_optionnal("OBR.22", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:13: ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt283=2;
                                                                                            int LA283_0 = input.LA(1);

                                                                                            if ( (LA283_0==DELIMITER1) ) {
                                                                                                alt283=1;
                                                                                            }
                                                                                            switch (alt283) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:14: DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6749); 

                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6751);
                                                                                                    ts_sized_optionnal("OBR.23", 26);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1075:14: ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt282=2;
                                                                                                    int LA282_0 = input.LA(1);

                                                                                                    if ( (LA282_0==DELIMITER1) ) {
                                                                                                        alt282=1;
                                                                                                    }
                                                                                                    switch (alt282) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1075:15: DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6768); 

                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr6770);
                                                                                                            spec_const_race("OBR.24");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1076:15: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt281=2;
                                                                                                            int LA281_0 = input.LA(1);

                                                                                                            if ( (LA281_0==DELIMITER1) ) {
                                                                                                                alt281=1;
                                                                                                            }
                                                                                                            switch (alt281) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1076:16: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6788); 

                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6790);
                                                                                                                    spec_sized_mult_lvl1_st_optionnal_2("OBR.25", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1077:16: ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt280=2;
                                                                                                                    int LA280_0 = input.LA(1);

                                                                                                                    if ( (LA280_0==DELIMITER1) ) {
                                                                                                                        alt280=1;
                                                                                                                    }
                                                                                                                    switch (alt280) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1077:17: DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6809); 

                                                                                                                            pushFollow(FOLLOW_spec_const_9_26_in_line_obr6811);
                                                                                                                            spec_const_9_26("OBR.26");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1078:17: ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt279=2;
                                                                                                                            int LA279_0 = input.LA(1);

                                                                                                                            if ( (LA279_0==DELIMITER1) ) {
                                                                                                                                alt279=1;
                                                                                                                            }
                                                                                                                            switch (alt279) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1078:18: DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6831); 

                                                                                                                                    pushFollow(FOLLOW_spec_const_race_in_line_obr6833);
                                                                                                                                    spec_const_race("OBR.27");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1079:18: ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt278=2;
                                                                                                                                    int LA278_0 = input.LA(1);

                                                                                                                                    if ( (LA278_0==DELIMITER1) ) {
                                                                                                                                        alt278=1;
                                                                                                                                    }
                                                                                                                                    switch (alt278) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1079:19: DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6854); 

                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr6856);
                                                                                                                                            spec_const_race("OBR.28");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:19: ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt277=2;
                                                                                                                                            int LA277_0 = input.LA(1);

                                                                                                                                            if ( (LA277_0==DELIMITER1) ) {
                                                                                                                                                alt277=1;
                                                                                                                                            }
                                                                                                                                            switch (alt277) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:20: DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6878); 

                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6880);
                                                                                                                                                    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:61: ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )*
                                                                                                                                                    loop266:
                                                                                                                                                    do {
                                                                                                                                                        int alt266=2;
                                                                                                                                                        int LA266_0 = input.LA(1);

                                                                                                                                                        if ( (LA266_0==REPETITEUR) ) {
                                                                                                                                                            alt266=1;
                                                                                                                                                        }


                                                                                                                                                        switch (alt266) {
                                                                                                                                                    	case 1 :
                                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:62: REPETITEUR spec_sized_cna[\"OBR.29\", 150]
                                                                                                                                                    	    {
                                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6884); 

                                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6886);
                                                                                                                                                    	    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    	    state._fsp--;


                                                                                                                                                    	    }
                                                                                                                                                    	    break;

                                                                                                                                                    	default :
                                                                                                                                                    	    break loop266;
                                                                                                                                                        }
                                                                                                                                                    } while (true);


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:20: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt276=2;
                                                                                                                                                    int LA276_0 = input.LA(1);

                                                                                                                                                    if ( (LA276_0==DELIMITER1) ) {
                                                                                                                                                        alt276=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt276) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:21: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6911); 

                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr6913);
                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_4("OBR.30", 150);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:21: ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt275=2;
                                                                                                                                                            int LA275_0 = input.LA(1);

                                                                                                                                                            if ( (LA275_0==DELIMITER1) ) {
                                                                                                                                                                alt275=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt275) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:22: DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6937); 

                                                                                                                                                                    pushFollow(FOLLOW_spec_const_9_31_in_line_obr6939);
                                                                                                                                                                    spec_const_9_31("OBR.31");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1084:22: ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    int alt274=2;
                                                                                                                                                                    int LA274_0 = input.LA(1);

                                                                                                                                                                    if ( (LA274_0==DELIMITER1) ) {
                                                                                                                                                                        alt274=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt274) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1084:23: DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6986); 

                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6988);
                                                                                                                                                                            st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1084:68: ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )*
                                                                                                                                                                            loop267:
                                                                                                                                                                            do {
                                                                                                                                                                                int alt267=2;
                                                                                                                                                                                int LA267_0 = input.LA(1);

                                                                                                                                                                                if ( (LA267_0==REPETITEUR) ) {
                                                                                                                                                                                    alt267=1;
                                                                                                                                                                                }


                                                                                                                                                                                switch (alt267) {
                                                                                                                                                                            	case 1 :
                                                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1084:69: REPETITEUR st_sized_optionnal[\"OBR.32\", 300]
                                                                                                                                                                            	    {
                                                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6992); 

                                                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6994);
                                                                                                                                                                            	    st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            	    state._fsp--;


                                                                                                                                                                            	    }
                                                                                                                                                                            	    break;

                                                                                                                                                                            	default :
                                                                                                                                                                            	    break loop267;
                                                                                                                                                                                }
                                                                                                                                                                            } while (true);


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1085:23: ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            int alt273=2;
                                                                                                                                                                            int LA273_0 = input.LA(1);

                                                                                                                                                                            if ( (LA273_0==DELIMITER1) ) {
                                                                                                                                                                                alt273=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt273) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1085:24: DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7022); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7024);
                                                                                                                                                                                    spec_sized_cna("OBR.33", 60);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1086:24: ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    int alt272=2;
                                                                                                                                                                                    int LA272_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA272_0==DELIMITER1) ) {
                                                                                                                                                                                        alt272=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt272) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1086:25: DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7051); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr7053);
                                                                                                                                                                                            spec_sized_cna("OBR.34", 60);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1087:25: ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            int alt271=2;
                                                                                                                                                                                            int LA271_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA271_0==DELIMITER1) ) {
                                                                                                                                                                                                alt271=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt271) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1087:26: DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7081); 

                                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7083);
                                                                                                                                                                                                    spec_sized_cna("OBR.35", 60);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:26: ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    int alt270=2;
                                                                                                                                                                                                    int LA270_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA270_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt270=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt270) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:27: DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7112); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr7114);
                                                                                                                                                                                                            spec_sized_cna("OBR.36", 60);

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:27: ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            int alt269=2;
                                                                                                                                                                                                            int LA269_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA269_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt269=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt269) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:28: DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7144); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr7146);
                                                                                                                                                                                                                    ts_sized_optionnal("OBR.37", 26);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1090:29: ( DELIMITER1 )?
                                                                                                                                                                                                                    int alt268=2;
                                                                                                                                                                                                                    int LA268_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA268_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt268=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt268) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1090:29: DELIMITER1
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7177); 

                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr"



    // $ANTLR start "line_obr_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:1: line_obr_crapy : ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr_crapy() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1094:23: ( ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:3: ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr_crapy7247); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr_crapy7249); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr_crapy7251); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr_crapy7253); 

            }


            startElement("OBR.1");content("OBR");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:3: ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==DELIMITER1) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:4: DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7261); 

                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7263);
                    crapy_repet("OBR.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1097:4: ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt329=2;
                    int LA329_0 = input.LA(1);

                    if ( (LA329_0==DELIMITER1) ) {
                        alt329=1;
                    }
                    switch (alt329) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1097:5: DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7270); 

                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7272);
                            crapy_repet("OBR.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1098:5: ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt328=2;
                            int LA328_0 = input.LA(1);

                            if ( (LA328_0==DELIMITER1) ) {
                                alt328=1;
                            }
                            switch (alt328) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1098:6: DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7280); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7282);
                                    crapy_repet("OBR.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1099:6: ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt327=2;
                                    int LA327_0 = input.LA(1);

                                    if ( (LA327_0==DELIMITER1) ) {
                                        alt327=1;
                                    }
                                    switch (alt327) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1099:7: DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7291); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7293);
                                            crapy_repet("OBR.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:7: ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt326=2;
                                            int LA326_0 = input.LA(1);

                                            if ( (LA326_0==DELIMITER1) ) {
                                                alt326=1;
                                            }
                                            switch (alt326) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:8: DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7303); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7305);
                                                    crapy_repet("OBR.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1101:8: ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt325=2;
                                                    int LA325_0 = input.LA(1);

                                                    if ( (LA325_0==DELIMITER1) ) {
                                                        alt325=1;
                                                    }
                                                    switch (alt325) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1101:9: DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7316); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7318);
                                                            crapy_repet("OBR.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:9: ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt324=2;
                                                            int LA324_0 = input.LA(1);

                                                            if ( (LA324_0==DELIMITER1) ) {
                                                                alt324=1;
                                                            }
                                                            switch (alt324) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:10: DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7330); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7332);
                                                                    crapy_repet("OBR.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1103:10: ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt323=2;
                                                                    int LA323_0 = input.LA(1);

                                                                    if ( (LA323_0==DELIMITER1) ) {
                                                                        alt323=1;
                                                                    }
                                                                    switch (alt323) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1103:11: DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7345); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7347);
                                                                            crapy_repet("OBR.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1104:11: ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt322=2;
                                                                            int LA322_0 = input.LA(1);

                                                                            if ( (LA322_0==DELIMITER1) ) {
                                                                                alt322=1;
                                                                            }
                                                                            switch (alt322) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1104:12: DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7361); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7363);
                                                                                    crapy_repet("OBR.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:12: ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt321=2;
                                                                                    int LA321_0 = input.LA(1);

                                                                                    if ( (LA321_0==DELIMITER1) ) {
                                                                                        alt321=1;
                                                                                    }
                                                                                    switch (alt321) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:13: DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7378); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7380);
                                                                                            crapy_repet("OBR.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:13: ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt320=2;
                                                                                            int LA320_0 = input.LA(1);

                                                                                            if ( (LA320_0==DELIMITER1) ) {
                                                                                                alt320=1;
                                                                                            }
                                                                                            switch (alt320) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:14: DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7396); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7398);
                                                                                                    crapy_repet("OBR.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1107:14: ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt319=2;
                                                                                                    int LA319_0 = input.LA(1);

                                                                                                    if ( (LA319_0==DELIMITER1) ) {
                                                                                                        alt319=1;
                                                                                                    }
                                                                                                    switch (alt319) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1107:15: DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7415); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7417);
                                                                                                            crapy_repet("OBR.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:15: ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt318=2;
                                                                                                            int LA318_0 = input.LA(1);

                                                                                                            if ( (LA318_0==DELIMITER1) ) {
                                                                                                                alt318=1;
                                                                                                            }
                                                                                                            switch (alt318) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:16: DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7435); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7437);
                                                                                                                    crapy_repet("OBR.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1109:16: ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt317=2;
                                                                                                                    int LA317_0 = input.LA(1);

                                                                                                                    if ( (LA317_0==DELIMITER1) ) {
                                                                                                                        alt317=1;
                                                                                                                    }
                                                                                                                    switch (alt317) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1109:17: DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7456); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7458);
                                                                                                                            crapy_repet("OBR.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:17: ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt316=2;
                                                                                                                            int LA316_0 = input.LA(1);

                                                                                                                            if ( (LA316_0==DELIMITER1) ) {
                                                                                                                                alt316=1;
                                                                                                                            }
                                                                                                                            switch (alt316) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:18: DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7478); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7480);
                                                                                                                                    crapy_repet("OBR.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1111:18: ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt315=2;
                                                                                                                                    int LA315_0 = input.LA(1);

                                                                                                                                    if ( (LA315_0==DELIMITER1) ) {
                                                                                                                                        alt315=1;
                                                                                                                                    }
                                                                                                                                    switch (alt315) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1111:19: DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7501); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7503);
                                                                                                                                            crapy_repet("OBR.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1112:19: ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt314=2;
                                                                                                                                            int LA314_0 = input.LA(1);

                                                                                                                                            if ( (LA314_0==DELIMITER1) ) {
                                                                                                                                                alt314=1;
                                                                                                                                            }
                                                                                                                                            switch (alt314) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1112:20: DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7525); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7527);
                                                                                                                                                    crapy_repet("OBR.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1113:20: ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt313=2;
                                                                                                                                                    int LA313_0 = input.LA(1);

                                                                                                                                                    if ( (LA313_0==DELIMITER1) ) {
                                                                                                                                                        alt313=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt313) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1113:21: DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7550); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7552);
                                                                                                                                                            crapy_repet("OBR.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1114:21: ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt312=2;
                                                                                                                                                            int LA312_0 = input.LA(1);

                                                                                                                                                            if ( (LA312_0==DELIMITER1) ) {
                                                                                                                                                                alt312=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt312) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1114:22: DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7576); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7578);
                                                                                                                                                                    crapy_repet("OBR.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:22: ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt311=2;
                                                                                                                                                                    int LA311_0 = input.LA(1);

                                                                                                                                                                    if ( (LA311_0==DELIMITER1) ) {
                                                                                                                                                                        alt311=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt311) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:23: DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7603); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7605);
                                                                                                                                                                            crapy_repet("OBR.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1116:23: ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt310=2;
                                                                                                                                                                            int LA310_0 = input.LA(1);

                                                                                                                                                                            if ( (LA310_0==DELIMITER1) ) {
                                                                                                                                                                                alt310=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt310) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1116:24: DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7631); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7633);
                                                                                                                                                                                    crapy_repet("OBR.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1117:24: ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt309=2;
                                                                                                                                                                                    int LA309_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA309_0==DELIMITER1) ) {
                                                                                                                                                                                        alt309=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt309) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1117:25: DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7660); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7662);
                                                                                                                                                                                            crapy_repet("OBR.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:25: ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt308=2;
                                                                                                                                                                                            int LA308_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA308_0==DELIMITER1) ) {
                                                                                                                                                                                                alt308=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt308) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:26: DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7690); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7692);
                                                                                                                                                                                                    crapy_repet("OBR.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:26: ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt307=2;
                                                                                                                                                                                                    int LA307_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA307_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt307=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt307) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:27: DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7721); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7723);
                                                                                                                                                                                                            crapy_repet("OBR.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:27: ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt306=2;
                                                                                                                                                                                                            int LA306_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA306_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt306=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt306) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:28: DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7753); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7755);
                                                                                                                                                                                                                    crapy_repet("OBR.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:28: ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt305=2;
                                                                                                                                                                                                                    int LA305_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA305_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt305=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt305) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:29: DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7786); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7788);
                                                                                                                                                                                                                            crapy_repet("OBR.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:29: ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt304=2;
                                                                                                                                                                                                                            int LA304_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA304_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt304=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt304) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:30: DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7820); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7822);
                                                                                                                                                                                                                                    crapy_repet("OBR.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:30: ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt303=2;
                                                                                                                                                                                                                                    int LA303_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA303_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt303=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt303) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:31: DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7855); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7857);
                                                                                                                                                                                                                                            crapy_repet("OBR.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:31: ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt302=2;
                                                                                                                                                                                                                                            int LA302_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA302_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt302=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt302) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:32: DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7891); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7893);
                                                                                                                                                                                                                                                    crapy_repet("OBR.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:32: ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt301=2;
                                                                                                                                                                                                                                                    int LA301_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA301_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt301=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt301) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:33: DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7928); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7930);
                                                                                                                                                                                                                                                            crapy_repet("OBR.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:33: ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            int alt300=2;
                                                                                                                                                                                                                                                            int LA300_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA300_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt300=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt300) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:34: DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7966); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7968);
                                                                                                                                                                                                                                                                    crapy_repet("OBR.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1127:34: ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    int alt299=2;
                                                                                                                                                                                                                                                                    int LA299_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA299_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt299=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt299) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1127:35: DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8005); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8007);
                                                                                                                                                                                                                                                                            crapy_repet("OBR.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:35: ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            int alt298=2;
                                                                                                                                                                                                                                                                            int LA298_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA298_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt298=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt298) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:36: DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8045); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8047);
                                                                                                                                                                                                                                                                                    crapy_repet("OBR.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:36: ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    int alt297=2;
                                                                                                                                                                                                                                                                                    int LA297_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA297_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt297=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt297) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:37: DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8086); 

                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8088);
                                                                                                                                                                                                                                                                                            crapy_repet("OBR.35");

                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:37: ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            int alt296=2;
                                                                                                                                                                                                                                                                                            int LA296_0 = input.LA(1);

                                                                                                                                                                                                                                                                                            if ( (LA296_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                alt296=1;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            switch (alt296) {
                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:38: DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8128); 

                                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8130);
                                                                                                                                                                                                                                                                                                    crapy_repet("OBR.36");

                                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:38: ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    int alt295=2;
                                                                                                                                                                                                                                                                                                    int LA295_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                    if ( (LA295_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                        alt295=1;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    switch (alt295) {
                                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:39: DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8171); 

                                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8173);
                                                                                                                                                                                                                                                                                                            crapy_repet("OBR.37");

                                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:40: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            int alt294=2;
                                                                                                                                                                                                                                                                                                            int LA294_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                            if ( (LA294_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                                alt294=1;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            switch (alt294) {
                                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:40: DELIMITER1
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8215); 

                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr_crapy"



    // $ANTLR start "line_obx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1135:1: line_obx : ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) ;
    public final void line_obx() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1137:23: ( ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:3: ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx8308); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx8310); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx8312); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx8314); 

            }


            startElement("OBX.1");content("OBX");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8321); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obx8323);
            nm_integer_sized_mandatory("OBX.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8328); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:5: ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            int alt365=7;
            switch ( input.LA(1) ) {
            case CHARN:
                {
                alt365=1;
                }
                break;
            case CHARC:
                {
                int LA365_2 = input.LA(2);

                if ( (LA365_2==CHARE) ) {
                    alt365=2;
                }
                else if ( (LA365_2==CHARK||LA365_2==CHARN) ) {
                    alt365=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 365, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARF:
                {
                alt365=3;
                }
                break;
            case CHARS:
                {
                alt365=4;
                }
                break;
            case CHARG:
                {
                int LA365_5 = input.LA(2);

                if ( (LA365_5==CHARC) ) {
                    alt365=5;
                }
                else if ( (LA365_5==CHARB||LA365_5==CHARN) ) {
                    alt365=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 365, 5, input);

                    throw nvae;

                }
                }
                break;
            case CHART:
                {
                int LA365_6 = input.LA(2);

                if ( (LA365_6==CHARX) ) {
                    alt365=6;
                }
                else if ( (LA365_6==CHARN) ) {
                    alt365=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 365, 6, input);

                    throw nvae;

                }
                }
                break;
            case CHARA:
            case CHARD:
            case CHARP:
                {
                alt365=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 0, input);

                throw nvae;

            }

            switch (alt365) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:7: spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_nm_in_line_obx8336);
                    spec_const_10_3_nm("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1142:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt335=2;
                    int LA335_0 = input.LA(1);

                    if ( (LA335_0==DELIMITER1) ) {
                        alt335=1;
                    }
                    switch (alt335) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1142:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8345); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8347);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1143:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt334=2;
                            int LA334_0 = input.LA(1);

                            if ( (LA334_0==DELIMITER1) ) {
                                alt334=1;
                            }
                            switch (alt334) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1143:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8357); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8359);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt333=2;
                                    int LA333_0 = input.LA(1);

                                    if ( (LA333_0==DELIMITER1) ) {
                                        alt333=1;
                                    }
                                    switch (alt333) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:9: DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8370); 

                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8372);
                                            nm_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:55: ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop331:
                                            do {
                                                int alt331=2;
                                                int LA331_0 = input.LA(1);

                                                if ( (LA331_0==REPETITEUR) ) {
                                                    alt331=1;
                                                }


                                                switch (alt331) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:56: REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8376); 

                                            	    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8378);
                                            	    nm_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop331;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1145:9: ( line_obx2_1_post10_6 )?
                                            int alt332=2;
                                            int LA332_0 = input.LA(1);

                                            if ( (LA332_0==DELIMITER1) ) {
                                                alt332=1;
                                            }
                                            switch (alt332) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1145:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8391);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:8: spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_ce_in_line_obx8408);
                    spec_const_10_3_ce("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1147:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt340=2;
                    int LA340_0 = input.LA(1);

                    if ( (LA340_0==DELIMITER1) ) {
                        alt340=1;
                    }
                    switch (alt340) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1147:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8417); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8419);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1148:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt339=2;
                            int LA339_0 = input.LA(1);

                            if ( (LA339_0==DELIMITER1) ) {
                                alt339=1;
                            }
                            switch (alt339) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1148:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8429); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8431);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt338=2;
                                    int LA338_0 = input.LA(1);

                                    if ( (LA338_0==DELIMITER1) ) {
                                        alt338=1;
                                    }
                                    switch (alt338) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8442); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8444);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop336:
                                            do {
                                                int alt336=2;
                                                int LA336_0 = input.LA(1);

                                                if ( (LA336_0==REPETITEUR) ) {
                                                    alt336=1;
                                                }


                                                switch (alt336) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8448); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8450);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop336;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:9: ( line_obx2_1_post10_6 )?
                                            int alt337=2;
                                            int LA337_0 = input.LA(1);

                                            if ( (LA337_0==DELIMITER1) ) {
                                                alt337=1;
                                            }
                                            switch (alt337) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8463);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:8: spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_fic_in_line_obx8480);
                    spec_const_10_3_fic("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt345=2;
                    int LA345_0 = input.LA(1);

                    if ( (LA345_0==DELIMITER1) ) {
                        alt345=1;
                    }
                    switch (alt345) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8489); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8491);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt344=2;
                            int LA344_0 = input.LA(1);

                            if ( (LA344_0==DELIMITER1) ) {
                                alt344=1;
                            }
                            switch (alt344) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8501); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8503);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt343=2;
                                    int LA343_0 = input.LA(1);

                                    if ( (LA343_0==DELIMITER1) ) {
                                        alt343=1;
                                    }
                                    switch (alt343) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8514); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8516);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop341:
                                            do {
                                                int alt341=2;
                                                int LA341_0 = input.LA(1);

                                                if ( (LA341_0==REPETITEUR) ) {
                                                    alt341=1;
                                                }


                                                switch (alt341) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8520); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8522);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop341;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:9: ( line_obx2_1_post10_6 )?
                                            int alt342=2;
                                            int LA342_0 = input.LA(1);

                                            if ( (LA342_0==DELIMITER1) ) {
                                                alt342=1;
                                            }
                                            switch (alt342) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8535);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:8: spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_st_in_line_obx8552);
                    spec_const_10_3_st("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt350=2;
                    int LA350_0 = input.LA(1);

                    if ( (LA350_0==DELIMITER1) ) {
                        alt350=1;
                    }
                    switch (alt350) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8561); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8563);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt349=2;
                            int LA349_0 = input.LA(1);

                            if ( (LA349_0==DELIMITER1) ) {
                                alt349=1;
                            }
                            switch (alt349) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8573); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8575);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:8: ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt348=2;
                                    int LA348_0 = input.LA(1);

                                    if ( (LA348_0==DELIMITER1) ) {
                                        alt348=1;
                                    }
                                    switch (alt348) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:9: DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8586); 

                                            pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8588);
                                            st_sized_mandatory("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:55: ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )*
                                            loop346:
                                            do {
                                                int alt346=2;
                                                int LA346_0 = input.LA(1);

                                                if ( (LA346_0==REPETITEUR) ) {
                                                    alt346=1;
                                                }


                                                switch (alt346) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:56: REPETITEUR st_sized_mandatory[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8592); 

                                            	    pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8594);
                                            	    st_sized_mandatory("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop346;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:9: ( line_obx2_1_post10_6 )?
                                            int alt347=2;
                                            int LA347_0 = input.LA(1);

                                            if ( (LA347_0==DELIMITER1) ) {
                                                alt347=1;
                                            }
                                            switch (alt347) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8607);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:8: spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_gc_in_line_obx8624);
                    spec_const_10_3_gc("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1162:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt355=2;
                    int LA355_0 = input.LA(1);

                    if ( (LA355_0==DELIMITER1) ) {
                        alt355=1;
                    }
                    switch (alt355) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1162:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8633); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8635);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1163:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt354=2;
                            int LA354_0 = input.LA(1);

                            if ( (LA354_0==DELIMITER1) ) {
                                alt354=1;
                            }
                            switch (alt354) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1163:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8645); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8647);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:8: ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt353=2;
                                    int LA353_0 = input.LA(1);

                                    if ( (LA353_0==DELIMITER1) ) {
                                        alt353=1;
                                    }
                                    switch (alt353) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:9: DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8658); 

                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8660);
                                            spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:72: ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )*
                                            loop351:
                                            do {
                                                int alt351=2;
                                                int LA351_0 = input.LA(1);

                                                if ( (LA351_0==REPETITEUR) ) {
                                                    alt351=1;
                                                }


                                                switch (alt351) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:73: REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8664); 

                                            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8666);
                                            	    spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop351;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1165:9: ( line_obx2_1_post10_6 )?
                                            int alt352=2;
                                            int LA352_0 = input.LA(1);

                                            if ( (LA352_0==DELIMITER1) ) {
                                                alt352=1;
                                            }
                                            switch (alt352) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1165:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8679);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:8: spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_tx_in_line_obx8696);
                    spec_const_10_3_tx("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1167:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    int alt359=2;
                    int LA359_0 = input.LA(1);

                    if ( (LA359_0==DELIMITER1) ) {
                        alt359=1;
                    }
                    switch (alt359) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1167:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8705); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8707);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1168:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            int alt358=2;
                            int LA358_0 = input.LA(1);

                            if ( (LA358_0==DELIMITER1) ) {
                                alt358=1;
                            }
                            switch (alt358) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1168:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8717); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8719);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1169:8: ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    int alt357=2;
                                    int LA357_0 = input.LA(1);

                                    if ( (LA357_0==DELIMITER1) ) {
                                        alt357=1;
                                    }
                                    switch (alt357) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1169:9: DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8730); 

                                            pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx8732);
                                            spec_sized_10_6_tx("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:9: ( line_obx2_1_post10_6 )?
                                            int alt356=2;
                                            int LA356_0 = input.LA(1);

                                            if ( (LA356_0==DELIMITER1) ) {
                                                alt356=1;
                                            }
                                            switch (alt356) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8743);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:8: spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_std_in_line_obx8760);
                    spec_const_10_3_std("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1172:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt364=2;
                    int LA364_0 = input.LA(1);

                    if ( (LA364_0==DELIMITER1) ) {
                        alt364=1;
                    }
                    switch (alt364) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1172:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8769); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8771);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1173:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt363=2;
                            int LA363_0 = input.LA(1);

                            if ( (LA363_0==DELIMITER1) ) {
                                alt363=1;
                            }
                            switch (alt363) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1173:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8781); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8783);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:8: ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt362=2;
                                    int LA362_0 = input.LA(1);

                                    if ( (LA362_0==DELIMITER1) ) {
                                        alt362=1;
                                    }
                                    switch (alt362) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:9: DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8794); 

                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8796);
                                            st_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:55: ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop360:
                                            do {
                                                int alt360=2;
                                                int LA360_0 = input.LA(1);

                                                if ( (LA360_0==REPETITEUR) ) {
                                                    alt360=1;
                                                }


                                                switch (alt360) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:56: REPETITEUR st_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8800); 

                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8802);
                                            	    st_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop360;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1175:9: ( line_obx2_1_post10_6 )?
                                            int alt361=2;
                                            int LA361_0 = input.LA(1);

                                            if ( (LA361_0==DELIMITER1) ) {
                                                alt361=1;
                                            }
                                            switch (alt361) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1175:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8815);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx"



    // $ANTLR start "line_obx2_1_post10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:1: line_obx2_1_post10_6 : ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) ;
    public final void line_obx2_1_post10_6() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:21: ( ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:6: DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68836); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68838);
            st_sized_optionnal("OBX.7", 20);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:6: ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==DELIMITER1) ) {
                alt379=1;
            }
            switch (alt379) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:7: DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68847); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68849);
                    st_sized_optionnal("OBX.8", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:50: ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )*
                    loop366:
                    do {
                        int alt366=2;
                        int LA366_0 = input.LA(1);

                        if ( (LA366_0==REPETITEUR) ) {
                            alt366=1;
                        }


                        switch (alt366) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:51: REPETITEUR st_sized_optionnal[\"OBX.8\", 60]
                    	    {
                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68853); 

                    	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68855);
                    	    st_sized_optionnal("OBX.8", 60);

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop366;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:7: ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt378=2;
                    int LA378_0 = input.LA(1);

                    if ( (LA378_0==DELIMITER1) ) {
                        alt378=1;
                    }
                    switch (alt378) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:8: DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68867); 

                            pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68869);
                            spec_const_10_9("OBX.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:44: ( REPETITEUR spec_const_10_9[\"OBX.9\"] )*
                            loop367:
                            do {
                                int alt367=2;
                                int LA367_0 = input.LA(1);

                                if ( (LA367_0==REPETITEUR) ) {
                                    alt367=1;
                                }


                                switch (alt367) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:45: REPETITEUR spec_const_10_9[\"OBX.9\"]
                            	    {
                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68873); 

                            	    pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68875);
                            	    spec_const_10_9("OBX.9");

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop367;
                                }
                            } while (true);


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1181:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt377=2;
                            int LA377_0 = input.LA(1);

                            if ( (LA377_0==DELIMITER1) ) {
                                alt377=1;
                            }
                            switch (alt377) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1181:9: DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68888); 

                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_68890);
                                    nm_sized_optionnal("OBX.10", 5);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:9: ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt376=2;
                                    int LA376_0 = input.LA(1);

                                    if ( (LA376_0==DELIMITER1) ) {
                                        alt376=1;
                                    }
                                    switch (alt376) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:10: DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68902); 

                                            pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68904);
                                            spec_const_10_11("OBX.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:48: ( REPETITEUR spec_const_10_11[\"OBX.11\"] )*
                                            loop368:
                                            do {
                                                int alt368=2;
                                                int LA368_0 = input.LA(1);

                                                if ( (LA368_0==REPETITEUR) ) {
                                                    alt368=1;
                                                }


                                                switch (alt368) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:49: REPETITEUR spec_const_10_11[\"OBX.11\"]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68908); 

                                            	    pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68910);
                                            	    spec_const_10_11("OBX.11");

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop368;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1183:10: ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt375=2;
                                            int LA375_0 = input.LA(1);

                                            if ( (LA375_0==DELIMITER1) ) {
                                                alt375=1;
                                            }
                                            switch (alt375) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1183:11: DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68925); 

                                                    pushFollow(FOLLOW_spec_const_10_12_in_line_obx2_1_post10_68927);
                                                    spec_const_10_12("OBX.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1184:11: ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt374=2;
                                                    int LA374_0 = input.LA(1);

                                                    if ( (LA374_0==DELIMITER1) ) {
                                                        alt374=1;
                                                    }
                                                    switch (alt374) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1184:12: DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68942); 

                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68944);
                                                            ts_sized_optionnal("OBX.13", 26);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1185:12: ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            int alt373=2;
                                                            int LA373_0 = input.LA(1);

                                                            if ( (LA373_0==DELIMITER1) ) {
                                                                alt373=1;
                                                            }
                                                            switch (alt373) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1185:13: DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68960); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68962);
                                                                    st_sized_optionnal("OBX.14", 20);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1186:13: ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    int alt372=2;
                                                                    int LA372_0 = input.LA(1);

                                                                    if ( (LA372_0==DELIMITER1) ) {
                                                                        alt372=1;
                                                                    }
                                                                    switch (alt372) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1186:14: DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68978); 

                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68980);
                                                                            ts_sized_optionnal("OBX.15", 26);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1187:14: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            int alt371=2;
                                                                            int LA371_0 = input.LA(1);

                                                                            if ( (LA371_0==DELIMITER1) ) {
                                                                                alt371=1;
                                                                            }
                                                                            switch (alt371) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1187:15: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68997); 

                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_68999);
                                                                                    spec_sized_mult_lvl1_st_optionnal_6("OBX.16", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:15: ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    int alt370=2;
                                                                                    int LA370_0 = input.LA(1);

                                                                                    if ( (LA370_0==DELIMITER1) ) {
                                                                                        alt370=1;
                                                                                    }
                                                                                    switch (alt370) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:16: DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69017); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69019);
                                                                                            st_sized_optionnal("OBX.17", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:60: ( DELIMITER1 )?
                                                                                            int alt369=2;
                                                                                            int LA369_0 = input.LA(1);

                                                                                            if ( (LA369_0==DELIMITER1) ) {
                                                                                                alt369=1;
                                                                                            }
                                                                                            switch (alt369) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:60: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69022); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx2_1_post10_6"



    // $ANTLR start "line_c"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1190:1: line_c : CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? ;
    public final void line_c() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1192:22: ( CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1193:3: CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )?
            {
            match(input,CR,FOLLOW_CR_in_line_c9061); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c9063); 

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9067); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_c9069);
            nm_integer_sized_mandatory("C.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9074); 

            pushFollow(FOLLOW_spec_const_12_3_in_line_c9076);
            spec_const_12_3("C.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9081); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_c9083);
            st_sized_optionnal("C.4", 64000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1196:47: ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )*
            loop380:
            do {
                int alt380=2;
                int LA380_0 = input.LA(1);

                if ( (LA380_0==REPETITEUR) ) {
                    alt380=1;
                }


                switch (alt380) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1196:48: REPETITEUR st_sized_optionnal[\"C.4\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_c9087); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_c9089);
            	    st_sized_optionnal("C.4", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop380;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:3: ( DELIMITER1 )?
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==DELIMITER1) ) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9098); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c"



    // $ANTLR start "line_l"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1199:1: line_l : CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1201:22: ( CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1202:3: CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l9116); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l9118); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:3: ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( (LA387_0==DELIMITER1) ) {
                alt387=1;
            }
            switch (alt387) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:4: DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9123); 

                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9125);
                    nm_integer_sized_optionnal("L.2", 1);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1204:4: ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    int alt386=2;
                    int LA386_0 = input.LA(1);

                    if ( (LA386_0==DELIMITER1) ) {
                        alt386=1;
                    }
                    switch (alt386) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1204:5: DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9132); 

                            pushFollow(FOLLOW_spec_const_race_in_line_l9134);
                            spec_const_race("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1205:5: ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            int alt385=2;
                            int LA385_0 = input.LA(1);

                            if ( (LA385_0==DELIMITER1) ) {
                                alt385=1;
                            }
                            switch (alt385) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1205:6: DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9142); 

                                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9144);
                                    nm_integer_sized_optionnal("L.4", 4);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:6: ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    int alt384=2;
                                    int LA384_0 = input.LA(1);

                                    if ( (LA384_0==DELIMITER1) ) {
                                        alt384=1;
                                    }
                                    switch (alt384) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:7: DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9153); 

                                            pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9155);
                                            nm_integer_sized_optionnal("L.5", 10);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:7: ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            int alt383=2;
                                            int LA383_0 = input.LA(1);

                                            if ( (LA383_0==DELIMITER1) ) {
                                                alt383=1;
                                            }
                                            switch (alt383) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:8: DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9165); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_l9167);
                                                    st_sized_optionnal("L.6", 12);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:49: ( DELIMITER1 )?
                                                    int alt382=2;
                                                    int LA382_0 = input.LA(1);

                                                    if ( (LA382_0==DELIMITER1) ) {
                                                        alt382=1;
                                                    }
                                                    switch (alt382) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:49: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9170); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l"



    // $ANTLR start "crapy_repet"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1211:1: crapy_repet[String nameElement] : crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? ;
    public final void crapy_repet(String nameElement) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1211:33: ( crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:3: crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )?
            {
            pushFollow(FOLLOW_crapy_champ_full_in_crapy_repet9194);
            crapy_champ_full(nameElement);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:34: ( REPETITEUR crapy_repet[$nameElement] )?
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==REPETITEUR) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:35: REPETITEUR crapy_repet[$nameElement]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_crapy_repet9198); 

                    pushFollow(FOLLOW_crapy_repet_in_crapy_repet9200);
                    crapy_repet(nameElement);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_repet"



    // $ANTLR start "crapy_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1214:1: crapy_champ_full[String nameElement] : ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1216:22: ( ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            int alt389=3;
            alt389 = dfa389.predict(input);
            switch (alt389) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_champ_full9222);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:5: crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9230);
                    crapy_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_full9237);
                    crapy_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_full"



    // $ANTLR start "crapy_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1222:1: crapy_champ_ordered[String nameElement, int order] : DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1222:52: ( DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1223:3: DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_crapy_champ_ordered9255); 

            pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9257);
            crapy_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:3: ( crapy_champ_ordered[$nameElement, $order + 1] )?
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==DELIMITER2) ) {
                alt390=1;
            }
            switch (alt390) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:3: crapy_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9262);
                    crapy_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_ordered"



    // $ANTLR start "crapy_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1226:1: crapy_sous_champ_full[String nameElement] : ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1228:22: ( ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            int alt391=3;
            alt391 = dfa391.predict(input);
            switch (alt391) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_sous_champ_full9285);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1230:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1230:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1230:5: crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9293);
                    crapy_sous_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9299);
                    crapy_sous_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_full"



    // $ANTLR start "crapy_sous_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:1: crapy_sous_champ_ordered[String nameElement, int order] : DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_sous_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:57: ( DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1235:3: DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered9317); 

            pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered9319);
            crapy_sous_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:5: ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==DELIMITER3) ) {
                alt392=1;
            }
            switch (alt392) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:5: crapy_sous_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered9326);
                    crapy_sous_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_ordered"



    // $ANTLR start "crapy_sous_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1238:1: crapy_sous_sous_champ_full[String nameElement] : final_st ;
    public final void crapy_sous_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1240:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1241:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_crapy_sous_sous_champ_full9346);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_sous_champ_full"



    // $ANTLR start "spec_act_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1250:1: spec_act_11[String nameElement] : ( final_HR | final_RX | final_charR );
    public final void spec_act_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1252:22: ( final_HR | final_RX | final_charR )
            int alt393=3;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==CHARH) ) {
                alt393=1;
            }
            else if ( (LA393_0==CHARR) ) {
                int LA393_2 = input.LA(2);

                if ( (LA393_2==CHARX) ) {
                    alt393=2;
                }
                else if ( ((LA393_2 >= CR && LA393_2 <= DELIMITER1)) ) {
                    alt393=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 393, 2, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 393, 0, input);

                throw nvae;

            }
            switch (alt393) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:3: final_HR
                    {
                    pushFollow(FOLLOW_final_HR_in_spec_act_119373);
                    final_HR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:14: final_RX
                    {
                    pushFollow(FOLLOW_final_RX_in_spec_act_119377);
                    final_RX();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:25: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_act_119381);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_act_11"



    // $ANTLR start "spec_p_or_m"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1255:1: spec_p_or_m[String nameElement] : ( final_symbol_plus | final_symbol_moins );
    public final void spec_p_or_m(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1257:22: ( final_symbol_plus | final_symbol_moins )
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==PLUS) ) {
                alt394=1;
            }
            else if ( (LA394_0==MOINS) ) {
                alt394=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 394, 0, input);

                throw nvae;

            }
            switch (alt394) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1258:3: final_symbol_plus
                    {
                    pushFollow(FOLLOW_final_symbol_plus_in_spec_p_or_m9399);
                    final_symbol_plus();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1258:23: final_symbol_moins
                    {
                    pushFollow(FOLLOW_final_symbol_moins_in_spec_p_or_m9403);
                    final_symbol_moins();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_p_or_m"


    public static class spec_ac_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_ac_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1260:1: spec_ac_8[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] ;
    public final HPRIMSParser.spec_ac_8_return spec_ac_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_ac_8_return retval = new HPRIMSParser.spec_ac_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1262:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1263:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_89423);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_89428); 

            pushFollow(FOLLOW_spec_ac_8_2_in_spec_ac_89430);
            spec_ac_8_2(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_89435); 

            pushFollow(FOLLOW_spec_ac_8_3_in_spec_ac_89437);
            spec_ac_8_3(nameElement + ".3");

            state._fsp--;


            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_89442);
            nm_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_ac_8"



    // $ANTLR start "spec_ac_8_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1269:1: spec_ac_8_2[String nameElement] : ( final_TM | final_TR | final_FR );
    public final void spec_ac_8_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1271:22: ( final_TM | final_TR | final_FR )
            int alt395=3;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==CHART) ) {
                int LA395_1 = input.LA(2);

                if ( (LA395_1==CHARM) ) {
                    alt395=1;
                }
                else if ( (LA395_1==CHARR) ) {
                    alt395=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 395, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA395_0==CHARF) ) {
                alt395=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 395, 0, input);

                throw nvae;

            }
            switch (alt395) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:3: final_TM
                    {
                    pushFollow(FOLLOW_final_TM_in_spec_ac_8_29465);
                    final_TM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:14: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_29469);
                    final_TR();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:25: final_FR
                    {
                    pushFollow(FOLLOW_final_FR_in_spec_ac_8_29473);
                    final_FR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_2"



    // $ANTLR start "spec_ac_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1274:1: spec_ac_8_3[String nameElement] : ( final_PF | final_SS | final_TR );
    public final void spec_ac_8_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1276:22: ( final_PF | final_SS | final_TR )
            int alt396=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt396=1;
                }
                break;
            case CHARS:
                {
                alt396=2;
                }
                break;
            case CHART:
                {
                alt396=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 396, 0, input);

                throw nvae;

            }

            switch (alt396) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: final_PF
                    {
                    pushFollow(FOLLOW_final_PF_in_spec_ac_8_39493);
                    final_PF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:14: final_SS
                    {
                    pushFollow(FOLLOW_final_SS_in_spec_ac_8_39497);
                    final_SS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:25: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_39501);
                    final_TR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_3"



    // $ANTLR start "spec_on_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1279:1: spec_on_optionnal[String nameElement] : ( final_charO | final_charN )? ;
    public final void spec_on_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1281:22: ( ( final_charO | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:3: ( final_charO | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:3: ( final_charO | final_charN )?
            int alt397=3;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==CHARO) ) {
                alt397=1;
            }
            else if ( (LA397_0==CHARN) ) {
                alt397=2;
            }
            switch (alt397) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:4: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_on_optionnal9520);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:18: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_on_optionnal9524);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_on_optionnal"



    // $ANTLR start "spec_const_sexe"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1284:1: spec_const_sexe[String nameElement] : ( final_charM | final_charF | final_charU )? ;
    public final void spec_const_sexe(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1286:22: ( ( final_charM | final_charF | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: ( final_charM | final_charF | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: ( final_charM | final_charF | final_charU )?
            int alt398=4;
            switch ( input.LA(1) ) {
                case CHARM:
                    {
                    alt398=1;
                    }
                    break;
                case CHARF:
                    {
                    alt398=2;
                    }
                    break;
                case CHARU:
                    {
                    alt398=3;
                    }
                    break;
            }

            switch (alt398) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:4: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_sexe9545);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:18: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_sexe9549);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:32: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_sexe9553);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_sexe"



    // $ANTLR start "spec_const_race"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1289:1: spec_const_race[String nameElement] :;
    public final void spec_const_race(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1291:22: ()
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1292:3: 
            {
            }

            endElement();
        }
        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_race"



    // $ANTLR start "spec_const_7_13_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:1: spec_const_7_13_version_2_0[String nameElement] : spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1296:22: ( spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1297:3: spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_09590);
            spec_const_7_13_1_version_2_0(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_09593); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_09595);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_0"



    // $ANTLR start "spec_const_7_13_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1299:1: spec_const_7_13_version_2_1[String nameElement] : spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1301:22: ( spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1302:3: spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_19616);
            spec_const_7_13_1_version_2_1(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_19619); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_19621);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_1"



    // $ANTLR start "spec_const_7_13_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1304:1: spec_const_7_13_version_2_2[String nameElement] : spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1306:22: ( spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1307:3: spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_29640);
            spec_const_7_13_1_version_2_2(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_29643); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_29645);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_2"



    // $ANTLR start "spec_const_7_13_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1309:1: spec_const_7_13_2[String nameElement] : ( final_charC | final_charL | final_charR );
    public final void spec_const_7_13_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1311:22: ( final_charC | final_charL | final_charR )
            int alt399=3;
            switch ( input.LA(1) ) {
            case CHARC:
                {
                alt399=1;
                }
                break;
            case CHARL:
                {
                alt399=2;
                }
                break;
            case CHARR:
                {
                alt399=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 399, 0, input);

                throw nvae;

            }

            switch (alt399) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1312:3: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_7_13_29664);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1312:17: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_7_13_29668);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1312:31: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_7_13_29672);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_2"



    // $ANTLR start "spec_const_7_7_contexte_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1314:1: spec_const_7_7_contexte_ORU[String nameElement] : final_ORU ;
    public final void spec_const_7_7_contexte_ORU(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1316:22: ( final_ORU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1317:3: final_ORU
            {
            pushFollow(FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU9690);
            final_ORU();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORU"



    // $ANTLR start "spec_const_7_7_contexte_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1319:1: spec_const_7_7_contexte_ORM[String nameElement] : final_ORM ;
    public final void spec_const_7_7_contexte_ORM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1321:22: ( final_ORM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1322:3: final_ORM
            {
            pushFollow(FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM9708);
            final_ORM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORM"



    // $ANTLR start "spec_const_7_7_contexte_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1324:1: spec_const_7_7_contexte_ORA[String nameElement] : final_ORA ;
    public final void spec_const_7_7_contexte_ORA(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1326:22: ( final_ORA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1327:3: final_ORA
            {
            pushFollow(FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA9726);
            final_ORA();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORA"



    // $ANTLR start "spec_const_7_7_contexte_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1329:1: spec_const_7_7_contexte_ADM[String nameElement] : final_ADM ;
    public final void spec_const_7_7_contexte_ADM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1331:22: ( final_ADM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1332:3: final_ADM
            {
            pushFollow(FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM9744);
            final_ADM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ADM"



    // $ANTLR start "spec_const_7_7_contexte_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1334:1: spec_const_7_7_contexte_FAC[String nameElement] : final_FAC ;
    public final void spec_const_7_7_contexte_FAC(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1336:22: ( final_FAC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1337:3: final_FAC
            {
            pushFollow(FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC9764);
            final_FAC();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_FAC"



    // $ANTLR start "spec_const_7_7_contexte_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1339:1: spec_const_7_7_contexte_REG[String nameElement] : final_REG ;
    public final void spec_const_7_7_contexte_REG(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1341:22: ( final_REG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1342:3: final_REG
            {
            pushFollow(FOLLOW_final_REG_in_spec_const_7_7_contexte_REG9782);
            final_REG();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_REG"



    // $ANTLR start "spec_const_7_7_contexte_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1344:1: spec_const_7_7_contexte_NS[String nameElement] : final_NS ;
    public final void spec_const_7_7_contexte_NS(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1346:22: ( final_NS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:3: final_NS
            {
            pushFollow(FOLLOW_final_NS_in_spec_const_7_7_contexte_NS9800);
            final_NS();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_NS"



    // $ANTLR start "spec_const_7_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1349:1: spec_const_7_12[String nameElement] : ( final_charP | final_charD | final_charT ) ;
    public final void spec_const_7_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1351:22: ( ( final_charP | final_charD | final_charT ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:3: ( final_charP | final_charD | final_charT )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:3: ( final_charP | final_charD | final_charT )
            int alt400=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt400=1;
                }
                break;
            case CHARD:
                {
                alt400=2;
                }
                break;
            case CHART:
                {
                alt400=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 400, 0, input);

                throw nvae;

            }

            switch (alt400) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_7_129819);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:18: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_7_129823);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:32: final_charT
                    {
                    pushFollow(FOLLOW_final_charT_in_spec_const_7_129827);
                    final_charT();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_12"



    // $ANTLR start "spec_const_9_31"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1354:1: spec_const_9_31[String nameElement] : ( final_PORT | final_CART | final_WHLC | final_WALK )? ;
    public final void spec_const_9_31(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1356:22: ( ( final_PORT | final_CART | final_WHLC | final_WALK )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            int alt401=5;
            switch ( input.LA(1) ) {
                case CHARP:
                    {
                    alt401=1;
                    }
                    break;
                case CHARC:
                    {
                    alt401=2;
                    }
                    break;
                case CHARW:
                    {
                    int LA401_3 = input.LA(2);

                    if ( (LA401_3==CHARH) ) {
                        alt401=3;
                    }
                    else if ( (LA401_3==CHARA) ) {
                        alt401=4;
                    }
                    }
                    break;
            }

            switch (alt401) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:4: final_PORT
                    {
                    pushFollow(FOLLOW_final_PORT_in_spec_const_9_319847);
                    final_PORT();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:17: final_CART
                    {
                    pushFollow(FOLLOW_final_CART_in_spec_const_9_319851);
                    final_CART();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:30: final_WHLC
                    {
                    pushFollow(FOLLOW_final_WHLC_in_spec_const_9_319855);
                    final_WHLC();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:43: final_WALK
                    {
                    pushFollow(FOLLOW_final_WALK_in_spec_const_9_319859);
                    final_WALK();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_31"



    // $ANTLR start "spec_const_8_25"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1359:1: spec_const_8_25[String nameElement] : ( final_OP | final_IP | final_ER | final_PA | final_MP )? ;
    public final void spec_const_8_25(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1361:22: ( ( final_OP | final_IP | final_ER | final_PA | final_MP )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            int alt402=6;
            switch ( input.LA(1) ) {
                case CHARO:
                    {
                    alt402=1;
                    }
                    break;
                case CHARI:
                    {
                    alt402=2;
                    }
                    break;
                case CHARE:
                    {
                    alt402=3;
                    }
                    break;
                case CHARP:
                    {
                    alt402=4;
                    }
                    break;
                case CHARM:
                    {
                    alt402=5;
                    }
                    break;
            }

            switch (alt402) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:4: final_OP
                    {
                    pushFollow(FOLLOW_final_OP_in_spec_const_8_259880);
                    final_OP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:15: final_IP
                    {
                    pushFollow(FOLLOW_final_IP_in_spec_const_8_259884);
                    final_IP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:26: final_ER
                    {
                    pushFollow(FOLLOW_final_ER_in_spec_const_8_259888);
                    final_ER();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:37: final_PA
                    {
                    pushFollow(FOLLOW_final_PA_in_spec_const_8_259892);
                    final_PA();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:48: final_MP
                    {
                    pushFollow(FOLLOW_final_MP_in_spec_const_8_259896);
                    final_MP();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_8_25"



    // $ANTLR start "spec_const_9_26"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1364:1: spec_const_9_26[String nameElement] : ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? ;
    public final void spec_const_9_26(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1366:22: ( ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            int alt403=10;
            switch ( input.LA(1) ) {
                case CHARF:
                    {
                    alt403=1;
                    }
                    break;
                case CHARP:
                    {
                    alt403=2;
                    }
                    break;
                case CHARM:
                    {
                    alt403=3;
                    }
                    break;
                case CHARI:
                    {
                    alt403=4;
                    }
                    break;
                case CHARR:
                    {
                    alt403=5;
                    }
                    break;
                case CHARC:
                    {
                    alt403=6;
                    }
                    break;
                case CHARO:
                    {
                    alt403=7;
                    }
                    break;
                case CHARD:
                    {
                    alt403=8;
                    }
                    break;
                case CHARX:
                    {
                    alt403=9;
                    }
                    break;
            }

            switch (alt403) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:4: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_9_269917);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_9_269921);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:32: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_9_269925);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:46: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_9_269929);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:60: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_9_269933);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:74: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_9_269937);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:88: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_const_9_269941);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1368:3: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_9_269947);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1368:17: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_9_269951);
                    final_charX();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_26"


    public static class spec_const_10_3_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1370:1: spec_const_10_3_nm[String nameElement] : CHARN CHARM ;
    public final HPRIMSParser.spec_const_10_3_nm_return spec_const_10_3_nm(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_nm_return retval = new HPRIMSParser.spec_const_10_3_nm_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1372:22: ( CHARN CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1373:3: CHARN CHARM
            {
            match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_nm9972); 

            match(input,CHARM,FOLLOW_CHARM_in_spec_const_10_3_nm9974); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_nm"


    public static class spec_const_10_3_ce_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_ce"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1375:1: spec_const_10_3_ce[String nameElement] : CHARC CHARE ;
    public final HPRIMSParser.spec_const_10_3_ce_return spec_const_10_3_ce(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_ce_return retval = new HPRIMSParser.spec_const_10_3_ce_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1377:22: ( CHARC CHARE )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1378:3: CHARC CHARE
            {
            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_ce9995); 

            match(input,CHARE,FOLLOW_CHARE_in_spec_const_10_3_ce9997); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_ce"


    public static class spec_const_10_3_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:1: spec_const_10_3_st[String nameElement] : CHARS CHART ;
    public final HPRIMSParser.spec_const_10_3_st_return spec_const_10_3_st(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_st_return retval = new HPRIMSParser.spec_const_10_3_st_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1382:22: ( CHARS CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1383:3: CHARS CHART
            {
            match(input,CHARS,FOLLOW_CHARS_in_spec_const_10_3_st10018); 

            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_st10020); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_st"


    public static class spec_const_10_3_gc_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_gc"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:1: spec_const_10_3_gc[String nameElement] : CHARG CHARC ;
    public final HPRIMSParser.spec_const_10_3_gc_return spec_const_10_3_gc(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_gc_return retval = new HPRIMSParser.spec_const_10_3_gc_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1387:22: ( CHARG CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1388:3: CHARG CHARC
            {
            match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_gc10041); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_gc10043); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_gc"


    public static class spec_const_10_3_tx_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1390:1: spec_const_10_3_tx[String nameElement] : CHART CHARX ;
    public final HPRIMSParser.spec_const_10_3_tx_return spec_const_10_3_tx(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_tx_return retval = new HPRIMSParser.spec_const_10_3_tx_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1392:22: ( CHART CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1393:3: CHART CHARX
            {
            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_tx10065); 

            match(input,CHARX,FOLLOW_CHARX_in_spec_const_10_3_tx10067); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_tx"


    public static class spec_const_10_3_fic_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_fic"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1395:1: spec_const_10_3_fic[String nameElement] : ( CHARF CHARI CHARC ) ;
    public final HPRIMSParser.spec_const_10_3_fic_return spec_const_10_3_fic(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_fic_return retval = new HPRIMSParser.spec_const_10_3_fic_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1397:22: ( ( CHARF CHARI CHARC ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:3: ( CHARF CHARI CHARC )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:3: ( CHARF CHARI CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:4: CHARF CHARI CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_spec_const_10_3_fic10088); 

            match(input,CHARI,FOLLOW_CHARI_in_spec_const_10_3_fic10090); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_fic10092); 

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_fic"


    public static class spec_const_10_3_std_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_std"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:1: spec_const_10_3_std[String nameElement] : ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) );
    public final HPRIMSParser.spec_const_10_3_std_return spec_const_10_3_std(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_std_return retval = new HPRIMSParser.spec_const_10_3_std_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1402:22: ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) )
            int alt404=8;
            switch ( input.LA(1) ) {
            case CHARA:
                {
                alt404=1;
                }
                break;
            case CHARC:
                {
                int LA404_2 = input.LA(2);

                if ( (LA404_2==CHARK) ) {
                    alt404=2;
                }
                else if ( (LA404_2==CHARN) ) {
                    alt404=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 404, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARD:
                {
                alt404=4;
                }
                break;
            case CHARP:
                {
                alt404=5;
                }
                break;
            case CHART:
                {
                alt404=6;
                }
                break;
            case CHARG:
                {
                int LA404_6 = input.LA(2);

                if ( (LA404_6==CHARB) ) {
                    alt404=7;
                }
                else if ( (LA404_6==CHARN) ) {
                    alt404=8;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 404, 6, input);

                    throw nvae;

                }
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;

            }

            switch (alt404) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:3: ( CHARA CHARD )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:3: ( CHARA CHARD )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:4: CHARA CHARD
                    {
                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10114); 

                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10116); 

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:19: ( CHARC CHARK )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:19: ( CHARC CHARK )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:20: CHARC CHARK
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10122); 

                    match(input,CHARK,FOLLOW_CHARK_in_spec_const_10_3_std10124); 

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:35: ( CHARC CHARN CHARA )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:35: ( CHARC CHARN CHARA )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:36: CHARC CHARN CHARA
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10130); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10132); 

                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10134); 

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:57: ( CHARD CHART )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:57: ( CHARD CHART )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:58: CHARD CHART
                    {
                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10140); 

                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10142); 

                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:3: ( CHARP CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:3: ( CHARP CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:4: CHARP CHARN
                    {
                    match(input,CHARP,FOLLOW_CHARP_in_spec_const_10_3_std10150); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10152); 

                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:19: ( CHART CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:19: ( CHART CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:20: CHART CHARN
                    {
                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10158); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10160); 

                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:3: ( CHARG CHARB )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:3: ( CHARG CHARB )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:4: CHARG CHARB
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10168); 

                    match(input,CHARB,FOLLOW_CHARB_in_spec_const_10_3_std10170); 

                    }


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:19: ( CHARG CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:19: ( CHARG CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:20: CHARG CHARN
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10176); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10178); 

                    }


                    content(input.toString(retval.start,input.LT(-1)));

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_std"


    public static class spec_act_10_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_act_10"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1408:1: spec_act_10[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_act_10_return spec_act_10(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_act_10_return retval = new HPRIMSParser.spec_act_10_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1410:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1411:3: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010200);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1411:47: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )*
            loop405:
            do {
                int alt405=2;
                int LA405_0 = input.LA(1);

                if ( (LA405_0==REPETITEUR) ) {
                    alt405=1;
                }


                switch (alt405) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1411:48: REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_act_1010204); 

            	    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010206);
            	    st_non_sized_optionnal(nameElement + ".1");

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop405;
                }
            } while (true);


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_act_1010213); 

            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010215);
            st_non_sized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_act_10"


    public static class spec_fac_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_fac_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1415:1: spec_fac_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? ;
    public final HPRIMSParser.spec_fac_6_return spec_fac_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_fac_6_return retval = new HPRIMSParser.spec_fac_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1417:22: ( st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1418:3: st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610239);
            st_sized_optionnal(nameElement + ".1", 9);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1419:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            int alt407=2;
            int LA407_0 = input.LA(1);

            if ( (LA407_0==DELIMITER2) ) {
                alt407=1;
            }
            switch (alt407) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1419:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610245); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610247);
                    st_sized_optionnal(nameElement + ".2", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1420:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    int alt406=2;
                    int LA406_0 = input.LA(1);

                    if ( (LA406_0==DELIMITER2) ) {
                        alt406=1;
                    }
                    switch (alt406) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1420:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610254); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610256);
                            st_sized_optionnal(nameElement + ".3", 40);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_fac_6"


    public static class spec_reg_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_reg_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1423:1: spec_reg_4[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_reg_4_return spec_reg_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_reg_4_return retval = new HPRIMSParser.spec_reg_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1425:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1426:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_reg_410283);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_reg_410288); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_reg_410290);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_reg_4"


    public static class spec_sized_10_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1431:1: spec_sized_10_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? ;
    public final HPRIMSParser.spec_sized_10_6_return spec_sized_10_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_6_return retval = new HPRIMSParser.spec_sized_10_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1433:22: ( st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1434:3: st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610314);
            st_sized_optionnal(nameElement + ".1", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1435:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            int alt409=2;
            int LA409_0 = input.LA(1);

            if ( (LA409_0==DELIMITER2) ) {
                alt409=1;
            }
            switch (alt409) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1435:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_610320); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610322);
                    st_sized_optionnal(nameElement + ".2", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1436:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    int alt408=2;
                    int LA408_0 = input.LA(1);

                    if ( (LA408_0==DELIMITER2) ) {
                        alt408=1;
                    }
                    switch (alt408) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1436:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_610329); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610331);
                            st_sized_optionnal(nameElement + ".3", 10);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_6"



    // $ANTLR start "spec_const_10_9"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:1: spec_const_10_9[String nameElement] : ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? ;
    public final void spec_const_10_9(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1441:22: ( ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            int alt410=20;
            switch ( input.LA(1) ) {
                case CHARL:
                    {
                    int LA410_1 = input.LA(2);

                    if ( (LA410_1==CHARL) ) {
                        alt410=3;
                    }
                    else if ( ((LA410_1 >= CR && LA410_1 <= DELIMITER1)||LA410_1==REPETITEUR) ) {
                        alt410=1;
                    }
                    }
                    break;
                case CHARH:
                    {
                    int LA410_2 = input.LA(2);

                    if ( (LA410_2==CHARH) ) {
                        alt410=4;
                    }
                    else if ( ((LA410_2 >= CR && LA410_2 <= DELIMITER1)||LA410_2==REPETITEUR) ) {
                        alt410=2;
                    }
                    }
                    break;
                case CHAR_SYMBOL_INF:
                    {
                    alt410=5;
                    }
                    break;
                case CHAR_SYMBOL_SUP:
                    {
                    alt410=6;
                    }
                    break;
                case CHARN:
                    {
                    int LA410_5 = input.LA(2);

                    if ( (LA410_5==CHARu) ) {
                        alt410=10;
                    }
                    else if ( ((LA410_5 >= CR && LA410_5 <= DELIMITER1)||LA410_5==REPETITEUR) ) {
                        alt410=7;
                    }
                    }
                    break;
                case CHARA:
                    {
                    int LA410_6 = input.LA(2);

                    if ( (LA410_6==CHARA) ) {
                        alt410=9;
                    }
                    else if ( ((LA410_6 >= CR && LA410_6 <= DELIMITER1)||LA410_6==REPETITEUR) ) {
                        alt410=8;
                    }
                    }
                    break;
                case CHARU:
                    {
                    alt410=11;
                    }
                    break;
                case CHARD:
                    {
                    alt410=12;
                    }
                    break;
                case CHARB:
                    {
                    alt410=13;
                    }
                    break;
                case CHARW:
                    {
                    alt410=14;
                    }
                    break;
                case CHARR:
                    {
                    alt410=15;
                    }
                    break;
                case CHARI:
                    {
                    alt410=16;
                    }
                    break;
                case CHARS:
                    {
                    alt410=17;
                    }
                    break;
                case CHARM:
                    {
                    alt410=18;
                    }
                    break;
                case CHARV:
                    {
                    alt410=19;
                    }
                    break;
            }

            switch (alt410) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:4: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_10_910359);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:18: final_charH
                    {
                    pushFollow(FOLLOW_final_charH_in_spec_const_10_910363);
                    final_charH();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:32: final_LL
                    {
                    pushFollow(FOLLOW_final_LL_in_spec_const_10_910367);
                    final_LL();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:43: final_HH
                    {
                    pushFollow(FOLLOW_final_HH_in_spec_const_10_910371);
                    final_HH();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:54: final_symbol_inf
                    {
                    pushFollow(FOLLOW_final_symbol_inf_in_spec_const_10_910375);
                    final_symbol_inf();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:73: final_symbol_sup
                    {
                    pushFollow(FOLLOW_final_symbol_sup_in_spec_const_10_910379);
                    final_symbol_sup();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:3: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_910385);
                    final_charN();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:17: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_910389);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:31: final_AA
                    {
                    pushFollow(FOLLOW_final_AA_in_spec_const_10_910393);
                    final_AA();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:42: final_Null
                    {
                    pushFollow(FOLLOW_final_Null_in_spec_const_10_910397);
                    final_Null();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:55: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_910401);
                    final_charU();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:69: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_910405);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:83: final_charB
                    {
                    pushFollow(FOLLOW_final_charB_in_spec_const_10_910409);
                    final_charB();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:3: final_charW
                    {
                    pushFollow(FOLLOW_final_charW_in_spec_const_10_910415);
                    final_charW();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:17: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_910419);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:31: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_910423);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:45: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_910427);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:59: final_MS
                    {
                    pushFollow(FOLLOW_final_MS_in_spec_const_10_910431);
                    final_MS();

                    state._fsp--;


                    }
                    break;
                case 19 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:70: final_VS
                    {
                    pushFollow(FOLLOW_final_VS_in_spec_const_10_910435);
                    final_VS();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_9"



    // $ANTLR start "spec_const_10_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1446:1: spec_const_10_11[String nameElement] : ( final_charA | final_charS | final_charR | final_charN )? ;
    public final void spec_const_10_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1448:22: ( ( final_charA | final_charS | final_charR | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:3: ( final_charA | final_charS | final_charR | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:3: ( final_charA | final_charS | final_charR | final_charN )?
            int alt411=5;
            switch ( input.LA(1) ) {
                case CHARA:
                    {
                    alt411=1;
                    }
                    break;
                case CHARS:
                    {
                    alt411=2;
                    }
                    break;
                case CHARR:
                    {
                    alt411=3;
                    }
                    break;
                case CHARN:
                    {
                    alt411=4;
                    }
                    break;
            }

            switch (alt411) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:4: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_1110456);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:18: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_1110460);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:32: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1110464);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:46: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_1110468);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_11"



    // $ANTLR start "spec_const_10_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1451:1: spec_const_10_12[String nameElement] : ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? ;
    public final void spec_const_10_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1453:22: ( ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            int alt412=9;
            switch ( input.LA(1) ) {
                case CHARR:
                    {
                    alt412=1;
                    }
                    break;
                case CHARP:
                    {
                    alt412=2;
                    }
                    break;
                case CHARF:
                    {
                    alt412=3;
                    }
                    break;
                case CHARC:
                    {
                    alt412=4;
                    }
                    break;
                case CHARI:
                    {
                    alt412=5;
                    }
                    break;
                case CHARD:
                    {
                    alt412=6;
                    }
                    break;
                case CHARX:
                    {
                    alt412=7;
                    }
                    break;
                case CHARU:
                    {
                    alt412=8;
                    }
                    break;
            }

            switch (alt412) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:4: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1210489);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_10_1210493);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:32: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_10_1210497);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:46: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_10_1210501);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:60: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_1210505);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:74: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_1210509);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:4: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_10_1210516);
                    final_charX();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:18: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_1210520);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_12"



    // $ANTLR start "spec_const_12_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1457:1: spec_const_12_3[String nameElement] : ( final_charP | final_charL )? ;
    public final void spec_const_12_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1459:22: ( ( final_charP | final_charL )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:3: ( final_charP | final_charL )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:3: ( final_charP | final_charL )?
            int alt413=3;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==CHARP) ) {
                alt413=1;
            }
            else if ( (LA413_0==CHARL) ) {
                alt413=2;
            }
            switch (alt413) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_12_310541);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:18: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_12_310545);
                    final_charL();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_12_3"


    public static class spec_sized_mult_lvl1_st_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1462:1: spec_sized_mult_lvl1_st_mandatory_2[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return spec_sized_mult_lvl1_st_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1464:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210565);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_210571); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210573);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_2"


    public static class spec_sized_mult_lvl1_st_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1469:1: spec_sized_mult_lvl1_st_optionnal_2[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return spec_sized_mult_lvl1_st_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1471:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1472:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210596);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1473:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt414=2;
            int LA414_0 = input.LA(1);

            if ( (LA414_0==DELIMITER2) ) {
                alt414=1;
            }
            switch (alt414) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1473:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_210602); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210604);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_2"


    public static class spec_sized_mult_lvl1_st_optionnal_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1477:1: spec_sized_mult_lvl1_st_optionnal_4[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return spec_sized_mult_lvl1_st_optionnal_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1479:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1480:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410629);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1481:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            int alt417=2;
            int LA417_0 = input.LA(1);

            if ( (LA417_0==DELIMITER2) ) {
                alt417=1;
            }
            switch (alt417) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1481:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410635); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410637);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1482:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    int alt416=2;
                    int LA416_0 = input.LA(1);

                    if ( (LA416_0==DELIMITER2) ) {
                        alt416=1;
                    }
                    switch (alt416) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1482:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410644); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410646);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1483:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            int alt415=2;
                            int LA415_0 = input.LA(1);

                            if ( (LA415_0==DELIMITER2) ) {
                                alt415=1;
                            }
                            switch (alt415) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1483:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410654); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410656);
                                    st_non_sized_optionnal(nameElement + ".2");

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_4"


    public static class spec_sized_mult_lvl1_st_mandatory_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1487:1: spec_sized_mult_lvl1_st_mandatory_6[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return spec_sized_mult_lvl1_st_mandatory_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1489:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1490:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610685);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610691); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610693);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610700); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610702);
            st_nonsized_mandatory(nameElement + ".3");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610710); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610712);
            st_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610721); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610723);
            st_nonsized_mandatory(nameElement + ".5");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610733); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610735);
            st_nonsized_mandatory(nameElement + ".6");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_6"


    public static class spec_sized_mult_lvl1_st_optionnal_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1498:1: spec_sized_mult_lvl1_st_optionnal_6[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return spec_sized_mult_lvl1_st_optionnal_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1500:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610758);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==DELIMITER2) ) {
                alt422=1;
            }
            switch (alt422) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610765); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610767);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt421=2;
                    int LA421_0 = input.LA(1);

                    if ( (LA421_0==DELIMITER2) ) {
                        alt421=1;
                    }
                    switch (alt421) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610775); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610777);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1504:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt420=2;
                            int LA420_0 = input.LA(1);

                            if ( (LA420_0==DELIMITER2) ) {
                                alt420=1;
                            }
                            switch (alt420) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1504:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610786); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610788);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1505:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt419=2;
                                    int LA419_0 = input.LA(1);

                                    if ( (LA419_0==DELIMITER2) ) {
                                        alt419=1;
                                    }
                                    switch (alt419) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1505:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610798); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610800);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1506:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt418=2;
                                            int LA418_0 = input.LA(1);

                                            if ( (LA418_0==DELIMITER2) ) {
                                                alt418=1;
                                            }
                                            switch (alt418) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1506:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610811); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610813);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_6"


    public static class spec_sized_mult_lvl1_st_optionnal_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1510:1: spec_sized_mult_lvl1_st_optionnal_8[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return spec_sized_mult_lvl1_st_optionnal_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1512:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1513:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810846);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1514:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            int alt429=2;
            int LA429_0 = input.LA(1);

            if ( (LA429_0==DELIMITER2) ) {
                alt429=1;
            }
            switch (alt429) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1514:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810852); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810854);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1515:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    int alt428=2;
                    int LA428_0 = input.LA(1);

                    if ( (LA428_0==DELIMITER2) ) {
                        alt428=1;
                    }
                    switch (alt428) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1515:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810861); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810863);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1516:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            int alt427=2;
                            int LA427_0 = input.LA(1);

                            if ( (LA427_0==DELIMITER2) ) {
                                alt427=1;
                            }
                            switch (alt427) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1516:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810871); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810873);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1517:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    int alt426=2;
                                    int LA426_0 = input.LA(1);

                                    if ( (LA426_0==DELIMITER2) ) {
                                        alt426=1;
                                    }
                                    switch (alt426) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1517:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810882); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810884);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1518:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            int alt425=2;
                                            int LA425_0 = input.LA(1);

                                            if ( (LA425_0==DELIMITER2) ) {
                                                alt425=1;
                                            }
                                            switch (alt425) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1518:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810894); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810896);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1519:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    int alt424=2;
                                                    int LA424_0 = input.LA(1);

                                                    if ( (LA424_0==DELIMITER2) ) {
                                                        alt424=1;
                                                    }
                                                    switch (alt424) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1519:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            {
                                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810907); 

                                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810909);
                                                            st_non_sized_optionnal(nameElement + ".7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1520:9: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            int alt423=2;
                                                            int LA423_0 = input.LA(1);

                                                            if ( (LA423_0==DELIMITER2) ) {
                                                                alt423=1;
                                                            }
                                                            switch (alt423) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1520:10: DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"]
                                                                    {
                                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810921); 

                                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810923);
                                                                    st_non_sized_optionnal(nameElement + ".8");

                                                                    state._fsp--;


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_8"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1524:1: spec_sized_mult_lvl2_st_optionnal_3[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1526:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1527:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310960);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1528:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt431=2;
            int LA431_0 = input.LA(1);

            if ( (LA431_0==DELIMITER3) ) {
                alt431=1;
            }
            switch (alt431) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1528:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_310966); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310968);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1529:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt430=2;
                    int LA430_0 = input.LA(1);

                    if ( (LA430_0==DELIMITER3) ) {
                        alt430=1;
                    }
                    switch (alt430) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1529:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_310975); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310977);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_3"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1531:1: spec_sized_mult_lvl2_st_optionnal_6[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_6(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1533:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1534:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611000);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1535:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==DELIMITER3) ) {
                alt436=1;
            }
            switch (alt436) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1535:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611006); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611008);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1536:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt435=2;
                    int LA435_0 = input.LA(1);

                    if ( (LA435_0==DELIMITER3) ) {
                        alt435=1;
                    }
                    switch (alt435) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1536:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611015); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611017);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1537:5: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt434=2;
                            int LA434_0 = input.LA(1);

                            if ( (LA434_0==DELIMITER3) ) {
                                alt434=1;
                            }
                            switch (alt434) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1537:6: DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611025); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611027);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1538:6: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt433=2;
                                    int LA433_0 = input.LA(1);

                                    if ( (LA433_0==DELIMITER3) ) {
                                        alt433=1;
                                    }
                                    switch (alt433) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1538:7: DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611036); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611038);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1539:7: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt432=2;
                                            int LA432_0 = input.LA(1);

                                            if ( (LA432_0==DELIMITER3) ) {
                                                alt432=1;
                                            }
                                            switch (alt432) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1539:8: DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611048); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611050);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_6"


    public static class spec_sized_mult_lvl1_nm_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:1: spec_sized_mult_lvl1_nm_optionnal_2[String nameElement, int maxSize] : nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return spec_sized_mult_lvl1_nm_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1543:22: ( nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1544:3: nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211079);
            nm_nonsized_optionnal(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211084); 

            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211086);
            nm_nonsized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_optionnal_2"


    public static class spec_sized_mult_lvl1_nm_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1548:1: spec_sized_mult_lvl1_nm_mandatory_2[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return spec_sized_mult_lvl1_nm_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1550:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1551:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211111);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211116); 

            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211118);
            nm_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_mandatory_2"


    public static class spec_sized_cna_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_cna"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1555:1: spec_sized_cna[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_cna_return spec_sized_cna(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_cna_return retval = new HPRIMSParser.spec_sized_cna_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1557:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1558:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11141);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1559:4: ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==DELIMITER2) ) {
                alt438=1;
            }
            switch (alt438) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1559:5: DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11148); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11150);
                    spec_sized_mult_lvl2_st_optionnal_6(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1560:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt437=2;
                    int LA437_0 = input.LA(1);

                    if ( (LA437_0==DELIMITER2) ) {
                        alt437=1;
                    }
                    switch (alt437) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1560:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11158); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11160);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_cna"


    public static class spec_sized_8_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1568:1: spec_sized_8_3[String nameElement, int maxSize] : ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_8_3_return spec_sized_8_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_8_3_return retval = new HPRIMSParser.spec_sized_8_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1570:22: ( ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1571:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1571:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( ((LA440_0 >= CHARA && LA440_0 <= CHIFFRE9)||(LA440_0 >= LETTRE && LA440_0 <= POINT)) ) {
                alt440=1;
            }
            switch (alt440) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1571:4: st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    pushFollow(FOLLOW_st_sized_mandatory_in_spec_sized_8_311192);
                    st_sized_mandatory(nameElement + ".1", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1572:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt439=2;
                    int LA439_0 = input.LA(1);

                    if ( (LA439_0==DELIMITER2) ) {
                        alt439=1;
                    }
                    switch (alt439) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1572:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311199); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311201);
                            st_non_sized_optionnal(nameElement + ".2");

                            state._fsp--;


                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311209); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311211);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_8_3"


    public static class spec_sized_9_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1584:1: spec_sized_9_3[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? ;
    public final HPRIMSParser.spec_sized_9_3_return spec_sized_9_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_3_return retval = new HPRIMSParser.spec_sized_9_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1586:22: ( st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1588:3: st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311251);
            st_sized_optionnal(nameElement + ".1", 12);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1589:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( (LA441_0==DELIMITER2) ) {
                alt441=1;
            }
            switch (alt441) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1589:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_311257); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311259);
                    st_sized_optionnal(nameElement + ".2", 10);

                    state._fsp--;


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_3"



    // $ANTLR start "spec_non_sized_9_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1592:1: spec_non_sized_9_8[String nameElement] : ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? ;
    public final void spec_non_sized_9_8(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1594:22: ( ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1595:3: ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            {
            pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811284);
            ts_sized_optionnal(nameElement + ".1", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1596:4: ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            int alt442=2;
            int LA442_0 = input.LA(1);

            if ( (LA442_0==REPETITEUR) ) {
                alt442=1;
            }
            switch (alt442) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1596:5: REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_non_sized_9_811291); 

                    pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811293);
                    ts_sized_optionnal(nameElement + ".2", 26);

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_non_sized_9_8"


    public static class spec_sized_9_16_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_16"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1598:1: spec_sized_9_16[String nameElement, int maxSize] : spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_9_16_return spec_sized_9_16(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_16_return retval = new HPRIMSParser.spec_sized_9_16_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1600:22: ( spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1601:3: spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1611314);
            spec_sized_mult_lvl2_st_optionnal_3(nameElement + ".2");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1602:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( (LA444_0==DELIMITER2) ) {
                alt444=1;
            }
            switch (alt444) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1602:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1611320); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611322);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1603:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt443=2;
                    int LA443_0 = input.LA(1);

                    if ( (LA443_0==DELIMITER2) ) {
                        alt443=1;
                    }
                    switch (alt443) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1603:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1611329); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611331);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_16"


    public static class spec_sized_10_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1606:1: spec_sized_10_4[String nameElement, int maxsize] : st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_10_4_return spec_sized_10_4(String nameElement, int maxsize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_4_return retval = new HPRIMSParser.spec_sized_10_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1608:22: ( st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1609:3: st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_10_411358);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1610:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==DELIMITER2) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1610:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411364); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411366);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1611:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt448=2;
                    int LA448_0 = input.LA(1);

                    if ( (LA448_0==DELIMITER2) ) {
                        alt448=1;
                    }
                    switch (alt448) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1611:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411373); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411375);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1612:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt447=2;
                            int LA447_0 = input.LA(1);

                            if ( (LA447_0==DELIMITER2) ) {
                                alt447=1;
                            }
                            switch (alt447) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1612:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411383); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411385);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1613:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt446=2;
                                    int LA446_0 = input.LA(1);

                                    if ( (LA446_0==DELIMITER2) ) {
                                        alt446=1;
                                    }
                                    switch (alt446) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1613:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411394); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411396);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1614:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt445=2;
                                            int LA445_0 = input.LA(1);

                                            if ( (LA445_0==DELIMITER2) ) {
                                                alt445=1;
                                            }
                                            switch (alt445) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1614:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411406); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411408);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxsize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_4"



    // $ANTLR start "spec_sized_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1617:1: spec_sized_10_6_tx[String nameElement, int maxSize] : (g= final_spec_10_6_tx )? ;
    public final void spec_sized_10_6_tx(String nameElement, int maxSize) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1622:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1623:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1623:4: (g= final_spec_10_6_tx )?
            int alt450=2;
            int LA450_0 = input.LA(1);

            if ( ((LA450_0 >= CHARA && LA450_0 <= CHIFFRE9)||LA450_0==DELIMITER2||(LA450_0 >= LETTRE && LA450_0 <= POINT)) ) {
                alt450=1;
            }
            switch (alt450) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1623:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx11443);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            if (g != null)
                matchRegex(g, "^.{0," + maxSize + "}$", retval.start);

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_10_6_tx"



    // $ANTLR start "spec_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1627:1: spec_tx[String nameElement] : (g= final_spec_10_6_tx )? ;
    public final void spec_tx(String nameElement) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1632:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:4: (g= final_spec_10_6_tx )?
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( ((LA451_0 >= CHARA && LA451_0 <= CHIFFRE9)||LA451_0==DELIMITER2||(LA451_0 >= LETTRE && LA451_0 <= POINT)) ) {
                alt451=1;
            }
            switch (alt451) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_tx11468);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_tx"


    public static class spec_sized_tn_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_tn"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1635:1: spec_sized_tn[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_tn_return spec_sized_tn(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_tn_return retval = new HPRIMSParser.spec_sized_tn_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1637:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1638:2: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11486);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1639:3: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==REPETITEUR) ) {
                alt452=1;
            }
            switch (alt452) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1639:4: REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_sized_tn11492); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11494);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_tn"


    public static class st_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1645:1: st_sized_optionnal[String nameElement, int maxSize] : ( final_st )? ;
    public final HPRIMSParser.st_sized_optionnal_return st_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_optionnal_return retval = new HPRIMSParser.st_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1647:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1648:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1648:3: ( final_st )?
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( ((LA453_0 >= CHARA && LA453_0 <= CHIFFRE9)||(LA453_0 >= LETTRE && LA453_0 <= POINT)) ) {
                alt453=1;
            }
            switch (alt453) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1648:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_sized_optionnal11522);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_optionnal"


    public static class st_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1652:1: st_sized_mandatory[String nameElement, int maxSize] : final_st ;
    public final HPRIMSParser.st_sized_mandatory_return st_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_mandatory_return retval = new HPRIMSParser.st_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1654:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1655:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_sized_mandatory11545);
            final_st();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_mandatory"



    // $ANTLR start "st_non_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1658:1: st_non_sized_optionnal[String nameElement] : ( final_st )? ;
    public final void st_non_sized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1660:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1661:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1661:3: ( final_st )?
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( ((LA454_0 >= CHARA && LA454_0 <= CHIFFRE9)||(LA454_0 >= LETTRE && LA454_0 <= POINT)) ) {
                alt454=1;
            }
            switch (alt454) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1661:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_non_sized_optionnal11567);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_non_sized_optionnal"



    // $ANTLR start "st_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1663:1: st_nonsized_mandatory[String nameElement] : final_st ;
    public final void st_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1665:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1666:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_nonsized_mandatory11586);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_nonsized_mandatory"


    public static class nm_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1668:1: nm_sized_optionnal[String nameElement, int maxSize] : ( final_nm )? ;
    public final HPRIMSParser.nm_sized_optionnal_return nm_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_optionnal_return retval = new HPRIMSParser.nm_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1670:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1671:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1671:3: ( final_nm )?
            int alt455=2;
            int LA455_0 = input.LA(1);

            if ( ((LA455_0 >= CHIFFRE0 && LA455_0 <= CHIFFRE9)||(LA455_0 >= MOINS && LA455_0 <= POINT)) ) {
                alt455=1;
            }
            switch (alt455) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1671:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_sized_optionnal11604);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_optionnal"


    public static class nm_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1675:1: nm_sized_mandatory[String nameElement, int maxSize] : final_nm ;
    public final HPRIMSParser.nm_sized_mandatory_return nm_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_mandatory_return retval = new HPRIMSParser.nm_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1677:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1678:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_sized_mandatory11627);
            final_nm();

            state._fsp--;


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_mandatory"


    public static class nm_integer_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1682:1: nm_integer_sized_optionnal[String nameElement, int maxSize] : ( final_nm_integer )? ;
    public final HPRIMSParser.nm_integer_sized_optionnal_return nm_integer_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_optionnal_return retval = new HPRIMSParser.nm_integer_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1684:22: ( ( final_nm_integer )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1685:3: ( final_nm_integer )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1685:3: ( final_nm_integer )?
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( ((LA456_0 >= CHIFFRE0 && LA456_0 <= CHIFFRE9)) ) {
                alt456=1;
            }
            switch (alt456) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1685:3: final_nm_integer
                    {
                    pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal11649);
                    final_nm_integer();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_optionnal"


    public static class nm_integer_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1689:1: nm_integer_sized_mandatory[String nameElement, int maxSize] : final_nm_integer ;
    public final HPRIMSParser.nm_integer_sized_mandatory_return nm_integer_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_mandatory_return retval = new HPRIMSParser.nm_integer_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1691:22: ( final_nm_integer )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1692:3: final_nm_integer
            {
            pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory11677);
            final_nm_integer();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_mandatory"


    public static class ts_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1696:1: ts_sized_optionnal[String nameElement, int maxSize] : ( final_ts )? ;
    public final HPRIMSParser.ts_sized_optionnal_return ts_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_optionnal_return retval = new HPRIMSParser.ts_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1698:22: ( ( final_ts )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1699:3: ( final_ts )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1699:3: ( final_ts )?
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( ((LA457_0 >= CHIFFRE0 && LA457_0 <= CHIFFRE9)) ) {
                alt457=1;
            }
            switch (alt457) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1699:3: final_ts
                    {
                    pushFollow(FOLLOW_final_ts_in_ts_sized_optionnal11700);
                    final_ts();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_optionnal"


    public static class ts_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1703:1: ts_sized_mandatory[String nameElement, int maxSize] : final_ts ;
    public final HPRIMSParser.ts_sized_mandatory_return ts_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_mandatory_return retval = new HPRIMSParser.ts_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1705:22: ( final_ts )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1706:3: final_ts
            {
            pushFollow(FOLLOW_final_ts_in_ts_sized_mandatory11723);
            final_ts();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_mandatory"



    // $ANTLR start "nm_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1709:1: nm_nonsized_mandatory[String nameElement] : final_nm ;
    public final void nm_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1711:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_nonsized_mandatory11745);
            final_nm();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_mandatory"



    // $ANTLR start "nm_nonsized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1714:1: nm_nonsized_optionnal[String nameElement] : ( final_nm )? ;
    public final void nm_nonsized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1716:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1717:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1717:3: ( final_nm )?
            int alt458=2;
            int LA458_0 = input.LA(1);

            if ( ((LA458_0 >= CHIFFRE0 && LA458_0 <= CHIFFRE9)||(LA458_0 >= MOINS && LA458_0 <= POINT)) ) {
                alt458=1;
            }
            switch (alt458) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1717:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_nonsized_optionnal11763);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_optionnal"



    // $ANTLR start "spec_const_7_13_1_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1719:1: spec_const_7_13_1_version_2_0[String nameElement] : final_version_2_0 ;
    public final void spec_const_7_13_1_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1721:22: ( final_version_2_0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1722:3: final_version_2_0
            {
            pushFollow(FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_011782);
            final_version_2_0();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_0"



    // $ANTLR start "spec_const_7_13_1_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1724:1: spec_const_7_13_1_version_2_1[String nameElement] : final_version_2_1 ;
    public final void spec_const_7_13_1_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1726:22: ( final_version_2_1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1727:3: final_version_2_1
            {
            pushFollow(FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_111800);
            final_version_2_1();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_1"



    // $ANTLR start "spec_const_7_13_1_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1729:1: spec_const_7_13_1_version_2_2[String nameElement] : final_version_2_2 ;
    public final void spec_const_7_13_1_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:22: ( final_version_2_2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1732:3: final_version_2_2
            {
            pushFollow(FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_211820);
            final_version_2_2();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_2"



    // $ANTLR start "final_spec_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1736:1: final_spec_10_6_tx returns [String consoText] : g= content_spec_10_6 ;
    public final String final_spec_10_6_tx() throws RecognitionException {
        String consoText = null;


        String g =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1736:46: (g= content_spec_10_6 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:3: g= content_spec_10_6
            {
            pushFollow(FOLLOW_content_spec_10_6_in_final_spec_10_6_tx11837);
            g=content_spec_10_6();

            state._fsp--;


            content(g);
               consoText = g;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "final_spec_10_6_tx"



    // $ANTLR start "content_spec_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1741:1: content_spec_10_6 returns [String consoText] : (r= character | DELIMITER2 ) (p= content_spec_10_6 )? ;
    public final String content_spec_10_6() throws RecognitionException {
        String consoText = null;


        HPRIMSParser.character_return r =null;

        String p =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1741:45: ( (r= character | DELIMITER2 ) (p= content_spec_10_6 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1742:3: (r= character | DELIMITER2 ) (p= content_spec_10_6 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1742:3: (r= character | DELIMITER2 )
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( ((LA459_0 >= CHARA && LA459_0 <= CHIFFRE9)||(LA459_0 >= LETTRE && LA459_0 <= POINT)) ) {
                alt459=1;
            }
            else if ( (LA459_0==DELIMITER2) ) {
                alt459=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 459, 0, input);

                throw nvae;

            }
            switch (alt459) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1742:4: r= character
                    {
                    pushFollow(FOLLOW_character_in_content_spec_10_611859);
                    r=character();

                    state._fsp--;


                    consoText = (r!=null?input.toString(r.start,r.stop):null);

                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1742:42: DELIMITER2
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_content_spec_10_611865); 

                    consoText = "\n";

                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1743:6: (p= content_spec_10_6 )?
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( ((LA460_0 >= CHARA && LA460_0 <= CHIFFRE9)||LA460_0==DELIMITER2||(LA460_0 >= LETTRE && LA460_0 <= POINT)) ) {
                alt460=1;
            }
            switch (alt460) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1743:6: p= content_spec_10_6
                    {
                    pushFollow(FOLLOW_content_spec_10_6_in_content_spec_10_611876);
                    p=content_spec_10_6();

                    state._fsp--;


                    }
                    break;

            }


            if (p != null) { consoText += p; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "content_spec_10_6"


    public static class final_ts_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ts"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1745:1: final_ts : chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? ;
    public final HPRIMSParser.final_ts_return final_ts() throws RecognitionException {
        HPRIMSParser.final_ts_return retval = new HPRIMSParser.final_ts_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1745:9: ( chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1746:3: chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            {
            pushFollow(FOLLOW_chiffre_in_final_ts11888);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts11890);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts11894);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts11896);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts11898);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts11902);
            chiffre();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1748:11: ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( ((LA463_0 >= CHIFFRE0 && LA463_0 <= CHIFFRE9)) ) {
                alt463=1;
            }
            switch (alt463) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1748:12: chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    {
                    pushFollow(FOLLOW_chiffre_in_final_ts11905);
                    chiffre();

                    state._fsp--;


                    pushFollow(FOLLOW_chiffre_in_final_ts11907);
                    chiffre();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1749:3: ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    int alt462=2;
                    int LA462_0 = input.LA(1);

                    if ( ((LA462_0 >= CHIFFRE0 && LA462_0 <= CHIFFRE9)) ) {
                        alt462=1;
                    }
                    switch (alt462) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1749:4: chiffre chiffre chiffre chiffre ( chiffre chiffre )?
                            {
                            pushFollow(FOLLOW_chiffre_in_final_ts11912);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts11914);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts11916);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts11920);
                            chiffre();

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1750:11: ( chiffre chiffre )?
                            int alt461=2;
                            int LA461_0 = input.LA(1);

                            if ( ((LA461_0 >= CHIFFRE0 && LA461_0 <= CHIFFRE9)) ) {
                                alt461=1;
                            }
                            switch (alt461) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1750:12: chiffre chiffre
                                    {
                                    pushFollow(FOLLOW_chiffre_in_final_ts11923);
                                    chiffre();

                                    state._fsp--;


                                    pushFollow(FOLLOW_chiffre_in_final_ts11925);
                                    chiffre();

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ts"


    public static class final_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:1: final_st : ( character )+ ;
    public final HPRIMSParser.final_st_return final_st() throws RecognitionException {
        HPRIMSParser.final_st_return retval = new HPRIMSParser.final_st_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:9: ( ( character )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:3: ( character )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:3: ( character )+
            int cnt464=0;
            loop464:
            do {
                int alt464=2;
                int LA464_0 = input.LA(1);

                if ( ((LA464_0 >= CHARA && LA464_0 <= CHIFFRE9)||(LA464_0 >= LETTRE && LA464_0 <= POINT)) ) {
                    alt464=1;
                }


                switch (alt464) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:3: character
            	    {
            	    pushFollow(FOLLOW_character_in_final_st11944);
            	    character();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt464 >= 1 ) break loop464;
                        EarlyExitException eee =
                            new EarlyExitException(464, input);
                        throw eee;
                }
                cnt464++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_st"


    public static class final_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1757:1: final_nm : ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) ;
    public final HPRIMSParser.final_nm_return final_nm() throws RecognitionException {
        HPRIMSParser.final_nm_return retval = new HPRIMSParser.final_nm_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1757:9: ( ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:4: ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:4: ( PLUS | MOINS )?
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( ((LA465_0 >= MOINS && LA465_0 <= PLUS)) ) {
                alt465=1;
            }
            switch (alt465) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
                    {
                    if ( (input.LA(1) >= MOINS && input.LA(1) <= PLUS) ) {
                        input.consume();
                        state.errorRecovery=false;
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            int alt470=2;
            int LA470_0 = input.LA(1);

            if ( ((LA470_0 >= CHIFFRE0 && LA470_0 <= CHIFFRE9)) ) {
                alt470=1;
            }
            else if ( (LA470_0==POINT) ) {
                alt470=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 470, 0, input);

                throw nvae;

            }
            switch (alt470) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:5: ( chiffre )+ ( POINT ( chiffre )* )?
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:5: ( chiffre )+
                    int cnt466=0;
                    loop466:
                    do {
                        int alt466=2;
                        int LA466_0 = input.LA(1);

                        if ( ((LA466_0 >= CHIFFRE0 && LA466_0 <= CHIFFRE9)) ) {
                            alt466=1;
                        }


                        switch (alt466) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:5: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm11973);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt466 >= 1 ) break loop466;
                                EarlyExitException eee =
                                    new EarlyExitException(466, input);
                                throw eee;
                        }
                        cnt466++;
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:14: ( POINT ( chiffre )* )?
                    int alt468=2;
                    int LA468_0 = input.LA(1);

                    if ( (LA468_0==POINT) ) {
                        alt468=1;
                    }
                    switch (alt468) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:15: POINT ( chiffre )*
                            {
                            match(input,POINT,FOLLOW_POINT_in_final_nm11977); 

                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:21: ( chiffre )*
                            loop467:
                            do {
                                int alt467=2;
                                int LA467_0 = input.LA(1);

                                if ( ((LA467_0 >= CHIFFRE0 && LA467_0 <= CHIFFRE9)) ) {
                                    alt467=1;
                                }


                                switch (alt467) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:21: chiffre
                            	    {
                            	    pushFollow(FOLLOW_chiffre_in_final_nm11979);
                            	    chiffre();

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop467;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1760:4: ( POINT ( chiffre )+ )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1760:4: ( POINT ( chiffre )+ )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1760:5: POINT ( chiffre )+
                    {
                    match(input,POINT,FOLLOW_POINT_in_final_nm11989); 

                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1760:11: ( chiffre )+
                    int cnt469=0;
                    loop469:
                    do {
                        int alt469=2;
                        int LA469_0 = input.LA(1);

                        if ( ((LA469_0 >= CHIFFRE0 && LA469_0 <= CHIFFRE9)) ) {
                            alt469=1;
                        }


                        switch (alt469) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1760:11: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm11991);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt469 >= 1 ) break loop469;
                                EarlyExitException eee =
                                    new EarlyExitException(469, input);
                                throw eee;
                        }
                        cnt469++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm"


    public static class final_nm_integer_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm_integer"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:1: final_nm_integer : ( chiffre )+ ;
    public final HPRIMSParser.final_nm_integer_return final_nm_integer() throws RecognitionException {
        HPRIMSParser.final_nm_integer_return retval = new HPRIMSParser.final_nm_integer_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:17: ( ( chiffre )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:3: ( chiffre )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:3: ( chiffre )+
            int cnt471=0;
            loop471:
            do {
                int alt471=2;
                int LA471_0 = input.LA(1);

                if ( ((LA471_0 >= CHIFFRE0 && LA471_0 <= CHIFFRE9)) ) {
                    alt471=1;
                }


                switch (alt471) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:3: chiffre
            	    {
            	    pushFollow(FOLLOW_chiffre_in_final_nm_integer12008);
            	    chiffre();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt471 >= 1 ) break loop471;
                        EarlyExitException eee =
                            new EarlyExitException(471, input);
                        throw eee;
                }
                cnt471++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm_integer"


    public static class final_ADM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:1: final_ADM : CHARA CHARD CHARM ;
    public final HPRIMSParser.final_ADM_return final_ADM() throws RecognitionException {
        HPRIMSParser.final_ADM_return retval = new HPRIMSParser.final_ADM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:10: ( CHARA CHARD CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:12: CHARA CHARD CHARM
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_ADM12020); 

            match(input,CHARD,FOLLOW_CHARD_in_final_ADM12022); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ADM12024); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ADM"


    public static class final_ORA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1768:1: final_ORA : CHARO CHARR CHARA ;
    public final HPRIMSParser.final_ORA_return final_ORA() throws RecognitionException {
        HPRIMSParser.final_ORA_return retval = new HPRIMSParser.final_ORA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1768:10: ( CHARO CHARR CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1768:12: CHARO CHARR CHARA
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORA12032); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORA12034); 

            match(input,CHARA,FOLLOW_CHARA_in_final_ORA12036); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORA"


    public static class final_ORU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:1: final_ORU : CHARO CHARR CHARU ;
    public final HPRIMSParser.final_ORU_return final_ORU() throws RecognitionException {
        HPRIMSParser.final_ORU_return retval = new HPRIMSParser.final_ORU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:10: ( CHARO CHARR CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:12: CHARO CHARR CHARU
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORU12044); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORU12046); 

            match(input,CHARU,FOLLOW_CHARU_in_final_ORU12048); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORU"


    public static class final_ORM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:1: final_ORM : CHARO CHARR CHARM ;
    public final HPRIMSParser.final_ORM_return final_ORM() throws RecognitionException {
        HPRIMSParser.final_ORM_return retval = new HPRIMSParser.final_ORM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:10: ( CHARO CHARR CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:12: CHARO CHARR CHARM
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORM12056); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORM12058); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ORM12060); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORM"


    public static class final_FAC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:1: final_FAC : CHARF CHARA CHARC ;
    public final HPRIMSParser.final_FAC_return final_FAC() throws RecognitionException {
        HPRIMSParser.final_FAC_return retval = new HPRIMSParser.final_FAC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:10: ( CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:12: CHARF CHARA CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FAC12068); 

            match(input,CHARA,FOLLOW_CHARA_in_final_FAC12070); 

            match(input,CHARC,FOLLOW_CHARC_in_final_FAC12072); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FAC"


    public static class final_REG_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:1: final_REG : CHARR CHARE CHARG ;
    public final HPRIMSParser.final_REG_return final_REG() throws RecognitionException {
        HPRIMSParser.final_REG_return retval = new HPRIMSParser.final_REG_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:10: ( CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:12: CHARR CHARE CHARG
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_REG12080); 

            match(input,CHARE,FOLLOW_CHARE_in_final_REG12082); 

            match(input,CHARG,FOLLOW_CHARG_in_final_REG12084); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_REG"


    public static class final_CART_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_CART"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:1: final_CART : CHARC CHARA CHARR CHART ;
    public final HPRIMSParser.final_CART_return final_CART() throws RecognitionException {
        HPRIMSParser.final_CART_return retval = new HPRIMSParser.final_CART_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:11: ( CHARC CHARA CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:13: CHARC CHARA CHARR CHART
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_CART12093); 

            match(input,CHARA,FOLLOW_CHARA_in_final_CART12095); 

            match(input,CHARR,FOLLOW_CHARR_in_final_CART12097); 

            match(input,CHART,FOLLOW_CHART_in_final_CART12099); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_CART"


    public static class final_PORT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PORT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:1: final_PORT : CHARP CHARO CHARR CHART ;
    public final HPRIMSParser.final_PORT_return final_PORT() throws RecognitionException {
        HPRIMSParser.final_PORT_return retval = new HPRIMSParser.final_PORT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:11: ( CHARP CHARO CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:13: CHARP CHARO CHARR CHART
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PORT12107); 

            match(input,CHARO,FOLLOW_CHARO_in_final_PORT12109); 

            match(input,CHARR,FOLLOW_CHARR_in_final_PORT12111); 

            match(input,CHART,FOLLOW_CHART_in_final_PORT12113); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PORT"


    public static class final_WHLC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WHLC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:1: final_WHLC : CHARW CHARH CHARL CHARC ;
    public final HPRIMSParser.final_WHLC_return final_WHLC() throws RecognitionException {
        HPRIMSParser.final_WHLC_return retval = new HPRIMSParser.final_WHLC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:11: ( CHARW CHARH CHARL CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:13: CHARW CHARH CHARL CHARC
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WHLC12121); 

            match(input,CHARH,FOLLOW_CHARH_in_final_WHLC12123); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WHLC12125); 

            match(input,CHARC,FOLLOW_CHARC_in_final_WHLC12127); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WHLC"


    public static class final_WALK_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WALK"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:1: final_WALK : CHARW CHARA CHARL CHARK ;
    public final HPRIMSParser.final_WALK_return final_WALK() throws RecognitionException {
        HPRIMSParser.final_WALK_return retval = new HPRIMSParser.final_WALK_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:11: ( CHARW CHARA CHARL CHARK )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:13: CHARW CHARA CHARL CHARK
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WALK12135); 

            match(input,CHARA,FOLLOW_CHARA_in_final_WALK12137); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WALK12139); 

            match(input,CHARK,FOLLOW_CHARK_in_final_WALK12141); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WALK"


    public static class final_LL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_LL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:1: final_LL : CHARL CHARL ;
    public final HPRIMSParser.final_LL_return final_LL() throws RecognitionException {
        HPRIMSParser.final_LL_return retval = new HPRIMSParser.final_LL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:9: ( CHARL CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:11: CHARL CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_LL12150); 

            match(input,CHARL,FOLLOW_CHARL_in_final_LL12152); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_LL"


    public static class final_AA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_AA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:1: final_AA : CHARA CHARA ;
    public final HPRIMSParser.final_AA_return final_AA() throws RecognitionException {
        HPRIMSParser.final_AA_return retval = new HPRIMSParser.final_AA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:9: ( CHARA CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:11: CHARA CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_AA12160); 

            match(input,CHARA,FOLLOW_CHARA_in_final_AA12162); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_AA"


    public static class final_HH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:1: final_HH : CHARH CHARH ;
    public final HPRIMSParser.final_HH_return final_HH() throws RecognitionException {
        HPRIMSParser.final_HH_return retval = new HPRIMSParser.final_HH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:9: ( CHARH CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:11: CHARH CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HH12170); 

            match(input,CHARH,FOLLOW_CHARH_in_final_HH12172); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HH"


    public static class final_MS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:1: final_MS : CHARM CHARS ;
    public final HPRIMSParser.final_MS_return final_MS() throws RecognitionException {
        HPRIMSParser.final_MS_return retval = new HPRIMSParser.final_MS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:9: ( CHARM CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:11: CHARM CHARS
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MS12180); 

            match(input,CHARS,FOLLOW_CHARS_in_final_MS12182); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MS"


    public static class final_VS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_VS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:1: final_VS : CHARV CHARS ;
    public final HPRIMSParser.final_VS_return final_VS() throws RecognitionException {
        HPRIMSParser.final_VS_return retval = new HPRIMSParser.final_VS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:9: ( CHARV CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:11: CHARV CHARS
            {
            match(input,CHARV,FOLLOW_CHARV_in_final_VS12190); 

            match(input,CHARS,FOLLOW_CHARS_in_final_VS12192); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_VS"


    public static class final_Null_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_Null"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1784:1: final_Null : CHARN CHARu CHARl CHARl ;
    public final HPRIMSParser.final_Null_return final_Null() throws RecognitionException {
        HPRIMSParser.final_Null_return retval = new HPRIMSParser.final_Null_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1784:11: ( CHARN CHARu CHARl CHARl )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1784:13: CHARN CHARu CHARl CHARl
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_Null12200); 

            match(input,CHARu,FOLLOW_CHARu_in_final_Null12202); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12204); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12206); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_Null"


    public static class final_symbol_inf_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_inf"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:1: final_symbol_inf : CHAR_SYMBOL_INF ;
    public final HPRIMSParser.final_symbol_inf_return final_symbol_inf() throws RecognitionException {
        HPRIMSParser.final_symbol_inf_return retval = new HPRIMSParser.final_symbol_inf_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:17: ( CHAR_SYMBOL_INF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:19: CHAR_SYMBOL_INF
            {
            match(input,CHAR_SYMBOL_INF,FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12214); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_inf"


    public static class final_symbol_sup_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_sup"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:1: final_symbol_sup : CHAR_SYMBOL_SUP ;
    public final HPRIMSParser.final_symbol_sup_return final_symbol_sup() throws RecognitionException {
        HPRIMSParser.final_symbol_sup_return retval = new HPRIMSParser.final_symbol_sup_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:17: ( CHAR_SYMBOL_SUP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:19: CHAR_SYMBOL_SUP
            {
            match(input,CHAR_SYMBOL_SUP,FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12222); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_sup"


    public static class final_symbol_plus_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_plus"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:1: final_symbol_plus : PLUS ;
    public final HPRIMSParser.final_symbol_plus_return final_symbol_plus() throws RecognitionException {
        HPRIMSParser.final_symbol_plus_return retval = new HPRIMSParser.final_symbol_plus_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:18: ( PLUS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:20: PLUS
            {
            match(input,PLUS,FOLLOW_PLUS_in_final_symbol_plus12230); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_plus"


    public static class final_symbol_moins_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_moins"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1788:1: final_symbol_moins : MOINS ;
    public final HPRIMSParser.final_symbol_moins_return final_symbol_moins() throws RecognitionException {
        HPRIMSParser.final_symbol_moins_return retval = new HPRIMSParser.final_symbol_moins_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1788:19: ( MOINS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1788:21: MOINS
            {
            match(input,MOINS,FOLLOW_MOINS_in_final_symbol_moins12238); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_moins"


    public static class final_version_2_0_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:1: final_version_2_0 : CHARH CHIFFRE2 POINT CHIFFRE0 ;
    public final HPRIMSParser.final_version_2_0_return final_version_2_0() throws RecognitionException {
        HPRIMSParser.final_version_2_0_return retval = new HPRIMSParser.final_version_2_0_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:18: ( CHARH CHIFFRE2 POINT CHIFFRE0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:20: CHARH CHIFFRE2 POINT CHIFFRE0
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_012247); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_012249); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_012251); 

            match(input,CHIFFRE0,FOLLOW_CHIFFRE0_in_final_version_2_012253); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_0"


    public static class final_version_2_1_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:1: final_version_2_1 : CHARH CHIFFRE2 POINT CHIFFRE1 ;
    public final HPRIMSParser.final_version_2_1_return final_version_2_1() throws RecognitionException {
        HPRIMSParser.final_version_2_1_return retval = new HPRIMSParser.final_version_2_1_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:18: ( CHARH CHIFFRE2 POINT CHIFFRE1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:20: CHARH CHIFFRE2 POINT CHIFFRE1
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_112261); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_112263); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_112265); 

            match(input,CHIFFRE1,FOLLOW_CHIFFRE1_in_final_version_2_112267); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_1"


    public static class final_version_2_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:1: final_version_2_2 : CHARH CHIFFRE2 POINT CHIFFRE2 ;
    public final HPRIMSParser.final_version_2_2_return final_version_2_2() throws RecognitionException {
        HPRIMSParser.final_version_2_2_return retval = new HPRIMSParser.final_version_2_2_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:18: ( CHARH CHIFFRE2 POINT CHIFFRE2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:20: CHARH CHIFFRE2 POINT CHIFFRE2
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_212275); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212277); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_212279); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212281); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_2"


    public static class final_OP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_OP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:1: final_OP : CHARO CHARP ;
    public final HPRIMSParser.final_OP_return final_OP() throws RecognitionException {
        HPRIMSParser.final_OP_return retval = new HPRIMSParser.final_OP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:9: ( CHARO CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:11: CHARO CHARP
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_OP12290); 

            match(input,CHARP,FOLLOW_CHARP_in_final_OP12292); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_OP"


    public static class final_IP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_IP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:1: final_IP : CHARI CHARP ;
    public final HPRIMSParser.final_IP_return final_IP() throws RecognitionException {
        HPRIMSParser.final_IP_return retval = new HPRIMSParser.final_IP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:9: ( CHARI CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:11: CHARI CHARP
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_IP12300); 

            match(input,CHARP,FOLLOW_CHARP_in_final_IP12302); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_IP"


    public static class final_ER_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ER"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:1: final_ER : CHARE CHARR ;
    public final HPRIMSParser.final_ER_return final_ER() throws RecognitionException {
        HPRIMSParser.final_ER_return retval = new HPRIMSParser.final_ER_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:9: ( CHARE CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:11: CHARE CHARR
            {
            match(input,CHARE,FOLLOW_CHARE_in_final_ER12310); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ER12312); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ER"


    public static class final_PA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:1: final_PA : CHARP CHARA ;
    public final HPRIMSParser.final_PA_return final_PA() throws RecognitionException {
        HPRIMSParser.final_PA_return retval = new HPRIMSParser.final_PA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:9: ( CHARP CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:11: CHARP CHARA
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PA12320); 

            match(input,CHARA,FOLLOW_CHARA_in_final_PA12322); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PA"


    public static class final_MP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:1: final_MP : CHARM CHARP ;
    public final HPRIMSParser.final_MP_return final_MP() throws RecognitionException {
        HPRIMSParser.final_MP_return retval = new HPRIMSParser.final_MP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:9: ( CHARM CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:11: CHARM CHARP
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MP12330); 

            match(input,CHARP,FOLLOW_CHARP_in_final_MP12332); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MP"


    public static class final_TM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:1: final_TM : CHART CHARM ;
    public final HPRIMSParser.final_TM_return final_TM() throws RecognitionException {
        HPRIMSParser.final_TM_return retval = new HPRIMSParser.final_TM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:9: ( CHART CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:11: CHART CHARM
            {
            match(input,CHART,FOLLOW_CHART_in_final_TM12340); 

            match(input,CHARM,FOLLOW_CHARM_in_final_TM12342); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TM"


    public static class final_TR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:1: final_TR : CHART CHARR ;
    public final HPRIMSParser.final_TR_return final_TR() throws RecognitionException {
        HPRIMSParser.final_TR_return retval = new HPRIMSParser.final_TR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:9: ( CHART CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:11: CHART CHARR
            {
            match(input,CHART,FOLLOW_CHART_in_final_TR12350); 

            match(input,CHARR,FOLLOW_CHARR_in_final_TR12352); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TR"


    public static class final_FR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:1: final_FR : CHARF CHARR ;
    public final HPRIMSParser.final_FR_return final_FR() throws RecognitionException {
        HPRIMSParser.final_FR_return retval = new HPRIMSParser.final_FR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:9: ( CHARF CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:11: CHARF CHARR
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FR12360); 

            match(input,CHARR,FOLLOW_CHARR_in_final_FR12362); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FR"


    public static class final_PF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1802:1: final_PF : CHARP CHARF ;
    public final HPRIMSParser.final_PF_return final_PF() throws RecognitionException {
        HPRIMSParser.final_PF_return retval = new HPRIMSParser.final_PF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1802:9: ( CHARP CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1802:11: CHARP CHARF
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PF12370); 

            match(input,CHARF,FOLLOW_CHARF_in_final_PF12372); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PF"


    public static class final_SS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_SS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:1: final_SS : CHARS CHARS ;
    public final HPRIMSParser.final_SS_return final_SS() throws RecognitionException {
        HPRIMSParser.final_SS_return retval = new HPRIMSParser.final_SS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:9: ( CHARS CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:11: CHARS CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_SS12380); 

            match(input,CHARS,FOLLOW_CHARS_in_final_SS12382); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_SS"


    public static class final_RX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_RX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:1: final_RX : CHARR CHARX ;
    public final HPRIMSParser.final_RX_return final_RX() throws RecognitionException {
        HPRIMSParser.final_RX_return retval = new HPRIMSParser.final_RX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:9: ( CHARR CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:11: CHARR CHARX
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_RX12390); 

            match(input,CHARX,FOLLOW_CHARX_in_final_RX12392); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_RX"


    public static class final_HR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:1: final_HR : CHARH CHARR ;
    public final HPRIMSParser.final_HR_return final_HR() throws RecognitionException {
        HPRIMSParser.final_HR_return retval = new HPRIMSParser.final_HR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:9: ( CHARH CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:11: CHARH CHARR
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HR12400); 

            match(input,CHARR,FOLLOW_CHARR_in_final_HR12402); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HR"


    public static class final_NS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:1: final_NS : CHARN CHARS ;
    public final HPRIMSParser.final_NS_return final_NS() throws RecognitionException {
        HPRIMSParser.final_NS_return retval = new HPRIMSParser.final_NS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:9: ( CHARN CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:11: CHARN CHARS
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_NS12410); 

            match(input,CHARS,FOLLOW_CHARS_in_final_NS12412); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_NS"


    public static class final_charA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:1: final_charA : CHARA ;
    public final HPRIMSParser.final_charA_return final_charA() throws RecognitionException {
        HPRIMSParser.final_charA_return retval = new HPRIMSParser.final_charA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:12: ( CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:14: CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_charA12421); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charA"


    public static class final_charB_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charB"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:1: final_charB : CHARB ;
    public final HPRIMSParser.final_charB_return final_charB() throws RecognitionException {
        HPRIMSParser.final_charB_return retval = new HPRIMSParser.final_charB_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:12: ( CHARB )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:14: CHARB
            {
            match(input,CHARB,FOLLOW_CHARB_in_final_charB12429); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charB"


    public static class final_charC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:1: final_charC : CHARC ;
    public final HPRIMSParser.final_charC_return final_charC() throws RecognitionException {
        HPRIMSParser.final_charC_return retval = new HPRIMSParser.final_charC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:12: ( CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:14: CHARC
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_charC12437); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charC"


    public static class final_charD_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charD"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:1: final_charD : CHARD ;
    public final HPRIMSParser.final_charD_return final_charD() throws RecognitionException {
        HPRIMSParser.final_charD_return retval = new HPRIMSParser.final_charD_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:12: ( CHARD )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:14: CHARD
            {
            match(input,CHARD,FOLLOW_CHARD_in_final_charD12445); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charD"


    public static class final_charF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:1: final_charF : CHARF ;
    public final HPRIMSParser.final_charF_return final_charF() throws RecognitionException {
        HPRIMSParser.final_charF_return retval = new HPRIMSParser.final_charF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:12: ( CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:14: CHARF
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_charF12453); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charF"


    public static class final_charH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:1: final_charH : CHARH ;
    public final HPRIMSParser.final_charH_return final_charH() throws RecognitionException {
        HPRIMSParser.final_charH_return retval = new HPRIMSParser.final_charH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:12: ( CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:14: CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_charH12461); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charH"


    public static class final_charI_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charI"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:1: final_charI : CHARI ;
    public final HPRIMSParser.final_charI_return final_charI() throws RecognitionException {
        HPRIMSParser.final_charI_return retval = new HPRIMSParser.final_charI_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:12: ( CHARI )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:14: CHARI
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_charI12469); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charI"


    public static class final_charL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:1: final_charL : CHARL ;
    public final HPRIMSParser.final_charL_return final_charL() throws RecognitionException {
        HPRIMSParser.final_charL_return retval = new HPRIMSParser.final_charL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:12: ( CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:14: CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_charL12477); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charL"


    public static class final_charM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:1: final_charM : CHARM ;
    public final HPRIMSParser.final_charM_return final_charM() throws RecognitionException {
        HPRIMSParser.final_charM_return retval = new HPRIMSParser.final_charM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:12: ( CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:14: CHARM
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_charM12485); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charM"


    public static class final_charN_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charN"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:1: final_charN : CHARN ;
    public final HPRIMSParser.final_charN_return final_charN() throws RecognitionException {
        HPRIMSParser.final_charN_return retval = new HPRIMSParser.final_charN_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:12: ( CHARN )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:14: CHARN
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_charN12493); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charN"


    public static class final_charO_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charO"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:1: final_charO : CHARO ;
    public final HPRIMSParser.final_charO_return final_charO() throws RecognitionException {
        HPRIMSParser.final_charO_return retval = new HPRIMSParser.final_charO_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:12: ( CHARO )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:14: CHARO
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_charO12501); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charO"


    public static class final_charP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:1: final_charP : CHARP ;
    public final HPRIMSParser.final_charP_return final_charP() throws RecognitionException {
        HPRIMSParser.final_charP_return retval = new HPRIMSParser.final_charP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:12: ( CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:14: CHARP
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_charP12509); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charP"


    public static class final_charR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:1: final_charR : CHARR ;
    public final HPRIMSParser.final_charR_return final_charR() throws RecognitionException {
        HPRIMSParser.final_charR_return retval = new HPRIMSParser.final_charR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:12: ( CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:14: CHARR
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_charR12517); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charR"


    public static class final_charS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1821:1: final_charS : CHARS ;
    public final HPRIMSParser.final_charS_return final_charS() throws RecognitionException {
        HPRIMSParser.final_charS_return retval = new HPRIMSParser.final_charS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1821:12: ( CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1821:14: CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_charS12525); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charS"


    public static class final_charT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1822:1: final_charT : CHART ;
    public final HPRIMSParser.final_charT_return final_charT() throws RecognitionException {
        HPRIMSParser.final_charT_return retval = new HPRIMSParser.final_charT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1822:12: ( CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1822:14: CHART
            {
            match(input,CHART,FOLLOW_CHART_in_final_charT12533); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charT"


    public static class final_charU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1823:1: final_charU : CHARU ;
    public final HPRIMSParser.final_charU_return final_charU() throws RecognitionException {
        HPRIMSParser.final_charU_return retval = new HPRIMSParser.final_charU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1823:12: ( CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1823:14: CHARU
            {
            match(input,CHARU,FOLLOW_CHARU_in_final_charU12541); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charU"


    public static class final_charW_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charW"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1824:1: final_charW : CHARW ;
    public final HPRIMSParser.final_charW_return final_charW() throws RecognitionException {
        HPRIMSParser.final_charW_return retval = new HPRIMSParser.final_charW_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1824:12: ( CHARW )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1824:14: CHARW
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_charW12549); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charW"


    public static class final_charX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1825:1: final_charX : CHARX ;
    public final HPRIMSParser.final_charX_return final_charX() throws RecognitionException {
        HPRIMSParser.final_charX_return retval = new HPRIMSParser.final_charX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1825:12: ( CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1825:14: CHARX
            {
            match(input,CHARX,FOLLOW_CHARX_in_final_charX12557); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charX"


    public static class delimiters_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "delimiters"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1828:1: delimiters : DELIMITERS ;
    public final HPRIMSParser.delimiters_return delimiters() throws RecognitionException {
        HPRIMSParser.delimiters_return retval = new HPRIMSParser.delimiters_return();
        retval.start = input.LT(1);


        startElement("H.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1830:22: ( DELIMITERS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1831:3: DELIMITERS
            {
            match(input,DELIMITERS,FOLLOW_DELIMITERS_in_delimiters12578); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delimiters"


    public static class character_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "character"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1836:1: character : ( lettre | chiffre ) ;
    public final HPRIMSParser.character_return character() throws RecognitionException {
        HPRIMSParser.character_return retval = new HPRIMSParser.character_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1836:10: ( ( lettre | chiffre ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1837:3: ( lettre | chiffre )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1837:3: ( lettre | chiffre )
            int alt472=2;
            int LA472_0 = input.LA(1);

            if ( ((LA472_0 >= CHARA && LA472_0 <= CHARu)||(LA472_0 >= LETTRE && LA472_0 <= POINT)) ) {
                alt472=1;
            }
            else if ( ((LA472_0 >= CHIFFRE0 && LA472_0 <= CHIFFRE9)) ) {
                alt472=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 472, 0, input);

                throw nvae;

            }
            switch (alt472) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1837:4: lettre
                    {
                    pushFollow(FOLLOW_lettre_in_character12594);
                    lettre();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1837:13: chiffre
                    {
                    pushFollow(FOLLOW_chiffre_in_character12598);
                    chiffre();

                    state._fsp--;


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "character"



    // $ANTLR start "chiffre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1839:1: chiffre : ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) ;
    public final void chiffre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1839:8: ( ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHIFFRE0 && input.LA(1) <= CHIFFRE9) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "chiffre"



    // $ANTLR start "lettre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1843:1: lettre : ~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) ;
    public final void lettre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1843:7: (~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHARA && input.LA(1) <= CHARu)||(input.LA(1) >= LETTRE && input.LA(1) <= POINT) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "lettre"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA391 dfa391 = new DFA391(this);
    static final String DFA1_eotS =
        "\u00dd\uffff";
    static final String DFA1_eofS =
        "\u00dd\uffff";
    static final String DFA1_minS =
        "\1\54\1\51\24\4\1\23\1\7\1\4\1\10\4\4\1\17\1\6\1\12\3\4\6\51\147"+
        "\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\22\51\6\13\6\40\6"+
        "\60\6\36\22\uffff";
    static final String DFA1_maxS =
        "\1\54\1\51\20\60\1\23\3\60\1\23\1\7\1\4\1\10\3\60\1\26\1\17\1\6"+
        "\1\12\3\60\6\51\3\60\6\61\2\60\2\61\2\60\2\61\2\60\2\61\2\60\2\61"+
        "\2\60\2\61\2\60\2\61\106\60\1\25\2\60\1\25\2\60\1\25\2\60\1\25\2"+
        "\60\1\25\2\60\1\25\22\51\6\13\6\40\6\60\6\40\22\uffff";
    static final String DFA1_acceptS =
        "\u00cb\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22";
    static final String DFA1_specialS =
        "\u00dd\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\1",
            "\1\2",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\11\12\12\5\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\14\12\15\5\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\1\27\4\uffff\1\30\7\uffff\1\26\1\uffff\1\31",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\40",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\1\46\12\uffff\1\45\6\uffff\1\44",
            "\1\47",
            "\1\50",
            "\1\51",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\1\55",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\61",
            "\1\62",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\153\12\154\5\uffff\4\153",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\155\12\156\5\uffff\4\155",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\157\12\160\5\uffff\4\157",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\161\12\162\5\uffff\4\161",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\163\12\164\5\uffff\4\163",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\165\12\166\5\uffff\4\165",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\175\12\176\5\uffff\4\175",
            "\32\177\12\u0080\5\uffff\4\177",
            "\32\u0081\12\u0082\5\uffff\4\u0081",
            "\32\u0083\12\u0084\5\uffff\4\u0083",
            "\32\u0085\12\u0086\5\uffff\4\u0085",
            "\32\u0087\12\u0088\5\uffff\4\u0087",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\1\u00a2\12\uffff\1\u00a1\2\uffff\1\u00a3",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\1\u00a5\12\uffff\1\u00a4\2\uffff\1\u00a6",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\1\u00a8\12\uffff\1\u00a7\2\uffff\1\u00a9",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\1\u00ab\12\uffff\1\u00aa\2\uffff\1\u00ac",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\1\u00ae\12\uffff\1\u00ad\2\uffff\1\u00af",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\1\u00b1\12\uffff\1\u00b0\2\uffff\1\u00b2",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b9",
            "\1\u00ba",
            "\1\u00bb",
            "\1\u00bc",
            "\1\u00bd",
            "\1\u00be",
            "\1\u00bf",
            "\1\u00c0",
            "\1\u00c1",
            "\1\u00c2",
            "\1\u00c3",
            "\1\u00c4",
            "\1\u00c5",
            "\1\u00c6",
            "\1\u00c7",
            "\1\u00c8",
            "\1\u00c9",
            "\1\u00ca",
            "\1\u00cd\1\u00cc\1\u00cb",
            "\1\u00d0\1\u00cf\1\u00ce",
            "\1\u00d3\1\u00d2\1\u00d1",
            "\1\u00d6\1\u00d5\1\u00d4",
            "\1\u00d9\1\u00d8\1\u00d7",
            "\1\u00dc\1\u00db\1\u00da",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "209:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );";
        }
    }
    static final String DFA389_eotS =
        "\6\uffff";
    static final String DFA389_eofS =
        "\1\4\2\5\3\uffff";
    static final String DFA389_minS =
        "\3\4\3\uffff";
    static final String DFA389_maxS =
        "\3\61\3\uffff";
    static final String DFA389_acceptS =
        "\3\uffff\1\2\1\3\1\1";
    static final String DFA389_specialS =
        "\6\uffff}>";
    static final String[] DFA389_transitionS = {
            "\32\1\12\2\2\4\1\3\2\uffff\4\1\1\4",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "",
            "",
            ""
    };

    static final short[] DFA389_eot = DFA.unpackEncodedString(DFA389_eotS);
    static final short[] DFA389_eof = DFA.unpackEncodedString(DFA389_eofS);
    static final char[] DFA389_min = DFA.unpackEncodedStringToUnsignedChars(DFA389_minS);
    static final char[] DFA389_max = DFA.unpackEncodedStringToUnsignedChars(DFA389_maxS);
    static final short[] DFA389_accept = DFA.unpackEncodedString(DFA389_acceptS);
    static final short[] DFA389_special = DFA.unpackEncodedString(DFA389_specialS);
    static final short[][] DFA389_transition;

    static {
        int numStates = DFA389_transitionS.length;
        DFA389_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA389_transition[i] = DFA.unpackEncodedString(DFA389_transitionS[i]);
        }
    }

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = DFA389_eot;
            this.eof = DFA389_eof;
            this.min = DFA389_min;
            this.max = DFA389_max;
            this.accept = DFA389_accept;
            this.special = DFA389_special;
            this.transition = DFA389_transition;
        }
        public String getDescription() {
            return "1217:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?";
        }
    }
    static final String DFA391_eotS =
        "\6\uffff";
    static final String DFA391_eofS =
        "\1\3\2\4\3\uffff";
    static final String DFA391_minS =
        "\3\4\3\uffff";
    static final String DFA391_maxS =
        "\3\61\3\uffff";
    static final String DFA391_acceptS =
        "\3\uffff\1\3\1\1\1\2";
    static final String DFA391_specialS =
        "\6\uffff}>";
    static final String[] DFA391_transitionS = {
            "\32\1\12\2\3\3\2\uffff\4\1\1\3",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "",
            "",
            ""
    };

    static final short[] DFA391_eot = DFA.unpackEncodedString(DFA391_eotS);
    static final short[] DFA391_eof = DFA.unpackEncodedString(DFA391_eofS);
    static final char[] DFA391_min = DFA.unpackEncodedStringToUnsignedChars(DFA391_minS);
    static final char[] DFA391_max = DFA.unpackEncodedStringToUnsignedChars(DFA391_maxS);
    static final short[] DFA391_accept = DFA.unpackEncodedString(DFA391_acceptS);
    static final short[] DFA391_special = DFA.unpackEncodedString(DFA391_specialS);
    static final short[][] DFA391_transition;

    static {
        int numStates = DFA391_transitionS.length;
        DFA391_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA391_transition[i] = DFA.unpackEncodedString(DFA391_transitionS[i]);
        }
    }

    class DFA391 extends DFA {

        public DFA391(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 391;
            this.eot = DFA391_eot;
            this.eof = DFA391_eof;
            this.min = DFA391_min;
            this.max = DFA391_max;
            this.accept = DFA391_accept;
            this.special = DFA391_special;
            this.transition = DFA391_transition;
        }
        public String getDescription() {
            return "1229:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?";
        }
    }
 

    public static final BitSet FOLLOW_hprim_adm_crapy_in_hprim_crapy67 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_2_in_hprim84 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_1_in_hprim88 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_0_in_hprim92 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_2_in_hprim98 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_1_in_hprim102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_0_in_hprim106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_2_in_hprim112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_1_in_hprim116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_0_in_hprim120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_2_in_hprim126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_1_in_hprim130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_0_in_hprim134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_2_in_hprim139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_1_in_hprim143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_0_in_hprim147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_2_in_hprim152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_1_in_hprim156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_0_in_hprim160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_oru_in_hprim_oru_2_2178 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_2182 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_2187 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_2191 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_2196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_oru_in_hprim_oru_2_1213 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_1217 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_1222 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_1226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_1231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_oru_in_hprim_oru_2_0248 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_0252 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_0257 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_0261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_0266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ora_in_hprim_ora_2_2284 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_2288 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_2293 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_2297 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_2302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ora_in_hprim_ora_2_1319 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_1323 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_1328 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_1332 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_1337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ora_in_hprim_ora_2_0354 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_0358 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_0363 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_0367 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_0372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_orm_in_hprim_orm_2_2390 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_2394 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_2399 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_2403 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_2408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_orm_in_hprim_orm_2_1425 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_1429 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_1434 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_1438 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_1443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_orm_in_hprim_orm_2_0460 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_0464 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_0469 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_0473 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_0478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_adm_in_hprim_adm_2_2496 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_crapy_in_hprim_adm_2_2500 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_2505 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_2509 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_2514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_adm_in_hprim_adm_2_1531 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_1535 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_1540 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_1544 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_1549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_adm_in_hprim_adm_2_0566 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_0570 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_0575 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_0579 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_0584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_adm_in_hprim_adm_crapy601 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_crapy_in_hprim_adm_crapy605 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_crapy610 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_crapy614 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_crapy619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_fac_in_hprim_fac_2_2637 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_2641 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_2646 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_2650 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_2655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_fac_in_hprim_fac_2_1672 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_1676 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_1681 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_1685 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_1690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_fac_in_hprim_fac_2_0707 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_0711 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_0716 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_0720 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_0725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_reg_in_hprim_reg_2_2743 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_2747 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_2752 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_2756 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_2761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_reg_in_hprim_reg_2_1778 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_1782 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_1787 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_1791 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_1796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_reg_in_hprim_reg_2_0813 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_0817 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_0822 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_0826 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_0831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ns_in_hprim_ns_2_2849 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_2853 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_2857 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_2862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ns_in_hprim_ns_2_1879 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_1883 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_1887 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_1892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ns_in_hprim_ns_2_0909 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_0913 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_0917 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_0922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_orm933 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm936 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_orm943 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm946 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_orm954 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm957 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_ora977 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora980 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_ora987 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora990 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_ora998 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1001 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_ora1011 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1014 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_ora1023 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1026 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_oru1052 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1055 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_oru1062 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1065 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obx_in_body_p_oru1073 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1076 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_adm1096 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1099 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_p_adm1106 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1109 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_p_adm1117 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1120 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_crapy_in_body_p_adm_crapy1139 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm_crapy1142 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_p_adm_crapy1149 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm_crapy1152 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_p_adm_crapy1160 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm_crapy1163 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_fac1183 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1186 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_fac1193 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1196 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_fac1204 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1207 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_fac_in_body_p_fac1221 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1224 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_reg_in_body_p_fac1232 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1235 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_act_in_body_p_fac1245 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1248 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_reg1268 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1271 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_reg_in_body_p_reg1278 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1281 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h1300 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1304 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1306 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1311 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1313 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1318 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1320 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1325 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h_crapy1340 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1344 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1346 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1352 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1354 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1359 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1361 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1366 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1382 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_midd_line_h1384 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1389 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1391 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1396 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1398 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1403 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1405 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1410 = new BitSet(new long[]{0x0000000000240080L});
    public static final BitSet FOLLOW_spec_const_7_12_in_midd_line_h1412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1424 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1426 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1433 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1435 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1443 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1445 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1454 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1456 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1466 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1468 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1479 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1481 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1493 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1495 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_oru1545 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1549 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1551 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_oru1556 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1560 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1562 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1567 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1569 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_oru1593 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1597 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1599 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_oru1604 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1608 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1610 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1615 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1617 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_oru1641 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1645 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1647 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_oru1652 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1656 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1658 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1663 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1665 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_oru1689 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_oru1693 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h_crapy_oru1695 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_oru1700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_orm1719 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1723 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1725 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_orm1730 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1734 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1736 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1741 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1743 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_orm1767 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1771 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1773 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_orm1778 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1782 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1784 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1789 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1791 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_orm1815 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1819 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1821 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_orm1826 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1830 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1832 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1837 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1839 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_orm1863 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_orm1867 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h_crapy_orm1869 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_orm1874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ora1893 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1897 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1899 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ora1904 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1908 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1910 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1915 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1917 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ora1941 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1945 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1947 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ora1952 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1956 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1958 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1963 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1965 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ora1989 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1993 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1995 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ora2000 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2004 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora2006 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2011 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ora2013 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_ora2037 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_ora2041 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h_crapy_ora2043 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_ora2048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_adm2067 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2071 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm2073 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_adm2078 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2082 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm2084 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2089 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2091 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_adm2115 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2119 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2121 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_adm2126 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2130 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2132 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2137 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2139 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_adm2163 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2167 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2169 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_adm2174 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2178 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2180 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2185 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2187 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_adm2211 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_adm2215 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h_crapy_adm2217 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_adm2222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_fac2241 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2245 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2247 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_fac2252 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2256 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2258 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2263 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2265 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_fac2289 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2293 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2295 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_fac2300 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2304 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2306 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2311 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2313 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_fac2337 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2341 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2343 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_fac2348 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2352 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2354 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2359 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2361 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_fac2385 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_fac2389 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h_crapy_fac2391 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_fac2396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_reg2415 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2419 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2421 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_reg2426 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2430 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2432 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2437 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2439 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_reg2463 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2467 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2469 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_reg2474 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2478 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2480 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2485 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2487 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_reg2511 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2515 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2517 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_reg2522 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2526 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2528 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2533 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2535 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_reg2559 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_reg2563 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h_crapy_reg2565 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_reg2570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ns2589 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2593 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ns2600 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2604 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2606 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2611 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2613 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ns2637 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2641 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2643 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ns2648 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2652 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2654 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2659 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2661 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ns2685 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2689 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2691 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ns2696 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2700 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2702 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2707 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2709 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_ns2733 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_ns2737 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h_crapy_ns2739 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_ns2744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap2764 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap2766 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap2768 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2775 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap2777 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2782 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2784 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2789 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2791 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2796 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2798 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2803 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap2805 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2810 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2812 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2817 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2819 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2824 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2826 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2831 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2833 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2838 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2840 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2845 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2847 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2852 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2854 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2859 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2861 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2866 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2868 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2873 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2875 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2880 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2882 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2888 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_ap2890 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2897 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_ap2899 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2907 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2909 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2918 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2920 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2930 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2932 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2943 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2945 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2957 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2959 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap_crapy3005 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap_crapy3007 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap_crapy3009 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3017 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3019 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3026 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3028 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3036 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3038 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3047 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3049 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3059 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3061 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3072 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3074 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3086 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3088 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3101 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3103 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3117 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3119 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3134 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3136 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3152 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3154 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3171 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3173 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3191 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3193 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3212 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3214 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3234 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3236 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3257 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3259 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3281 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3283 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3306 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3308 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3332 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3334 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3359 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3361 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3387 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3389 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3416 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3418 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3446 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3448 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac3543 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac3545 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac3547 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3554 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ac3556 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3561 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3563 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3568 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3570 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3575 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ac3577 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3582 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_ac3584 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3589 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3591 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3596 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_ac_8_in_line_ac3598 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3604 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3606 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3613 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3615 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac_crapy3646 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac_crapy3648 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac_crapy3650 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3658 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3660 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3667 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3669 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3677 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3679 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3688 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3690 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3700 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3702 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3713 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3715 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3727 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3729 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3742 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3744 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3758 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3760 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act3813 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act3815 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act3817 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act3819 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3826 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_act3828 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3833 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_act3835 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3840 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3842 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3847 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3849 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3854 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3856 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3861 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act3863 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3868 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act3870 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3875 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_act3877 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3882 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_act_10_in_line_act3884 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3889 = new BitSet(new long[]{0x0000000000080800L});
    public static final BitSet FOLLOW_spec_act_11_in_line_act3891 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act_crapy3916 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act_crapy3918 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act_crapy3920 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act_crapy3922 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3930 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3932 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3939 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3941 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3949 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3951 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3960 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3962 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3972 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3974 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3985 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3987 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3999 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4001 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4014 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4016 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4030 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4032 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4047 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4049 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac4105 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac4107 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac4109 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac4111 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4118 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_fac4120 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4125 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac4127 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4132 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac4134 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4139 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_fac4141 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4147 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac4149 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4156 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac4158 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4166 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_fac4168 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac_crapy4204 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac_crapy4206 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac_crapy4208 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac_crapy4210 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4218 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4220 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4227 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4229 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4237 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4239 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4248 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4250 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4260 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4262 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4273 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4275 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4287 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4289 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p4336 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p4338 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4345 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_p4347 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4352 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_8_3_in_line_p4354 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4359 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4361 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4367 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4369 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4376 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4378 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4386 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4388 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4397 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4399 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4409 = new BitSet(new long[]{0x0000020000408200L});
    public static final BitSet FOLLOW_spec_const_sexe_in_line_p4411 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4422 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p4424 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4436 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4438 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4451 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4453 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4467 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_p4469 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4508 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4510 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4514 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4516 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4534 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4536 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4553 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4555 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4588 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4590 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4625 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4627 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4647 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4649 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4653 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4655 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4678 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4680 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4684 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4686 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4710 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4712 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4735 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4737 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4761 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4763 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4788 = new BitSet(new long[]{0x000202FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4790 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4794 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4796 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4824 = new BitSet(new long[]{0x0000020000069100L});
    public static final BitSet FOLLOW_spec_const_8_25_in_line_p4826 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4853 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p4855 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4908 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4910 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4939 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p4941 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4998 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5000 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5059 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5061 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5093 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5095 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5158 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5160 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5194 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5196 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5231 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5233 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p_crapy5348 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p_crapy5350 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5358 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5360 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5367 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5369 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5377 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5379 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5388 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5390 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5400 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5402 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5413 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5415 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5427 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5429 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5442 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5444 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5458 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5460 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5475 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5477 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5493 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5495 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5512 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5514 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5532 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5534 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5553 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5555 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5575 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5577 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5598 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5600 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5622 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5624 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5647 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5649 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5673 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5675 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5700 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5702 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5728 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5730 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5757 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5759 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5787 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5789 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5818 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5820 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5850 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5852 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5883 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5885 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5917 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5919 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5952 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5954 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5988 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5990 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6025 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6027 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6063 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6065 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6102 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6104 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6142 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6144 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg6269 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg6271 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg6273 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg6275 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6282 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_reg6284 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6289 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_reg6291 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6296 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_reg_4_in_line_reg6298 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6303 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_spec_p_or_m_in_line_reg6305 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6310 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_reg6312 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6321 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6323 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6330 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6332 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg_crapy6363 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg_crapy6365 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg_crapy6367 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg_crapy6369 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6377 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6379 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6386 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6388 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6396 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6398 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6407 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6409 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6419 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6421 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6432 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6434 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6446 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6448 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr6495 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr6497 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr6499 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr6501 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6508 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obr6510 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6515 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_3_in_line_obr6517 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6522 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6524 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6529 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6531 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6535 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6537 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6547 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6549 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6553 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6555 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6562 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6564 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6569 = new BitSet(new long[]{0x000200FFC0000000L});
    public static final BitSet FOLLOW_spec_non_sized_9_8_in_line_obr6571 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6576 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6578 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6586 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6588 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6593 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6603 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6605 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6614 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6616 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6623 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6625 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6633 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6635 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6644 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_16_in_line_obr6646 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6656 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6658 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6669 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_obr6671 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6683 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6685 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6698 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6700 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6714 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6716 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6731 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6733 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6749 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6751 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6768 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6770 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6788 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6790 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6809 = new BitSet(new long[]{0x00000200020E92C0L});
    public static final BitSet FOLLOW_spec_const_9_26_in_line_obr6811 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6831 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6833 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6854 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6856 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6878 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6880 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6884 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6886 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6911 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr6913 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6937 = new BitSet(new long[]{0x0000020001040040L});
    public static final BitSet FOLLOW_spec_const_9_31_in_line_obr6939 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6986 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6988 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6992 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6994 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7022 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7024 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7051 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7053 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7081 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7083 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7112 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7114 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7144 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr7146 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr_crapy7247 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr_crapy7249 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr_crapy7251 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr_crapy7253 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7261 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7263 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7270 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7272 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7280 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7282 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7291 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7293 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7303 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7305 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7316 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7318 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7330 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7332 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7345 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7347 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7361 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7363 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7378 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7380 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7396 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7398 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7415 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7417 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7435 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7437 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7456 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7458 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7478 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7480 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7501 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7503 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7525 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7527 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7550 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7552 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7576 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7578 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7603 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7605 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7631 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7633 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7660 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7662 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7690 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7692 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7721 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7723 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7753 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7755 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7786 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7788 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7820 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7822 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7855 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7857 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7891 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7893 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7928 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7930 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7966 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7968 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8005 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8007 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8045 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8047 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8086 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8088 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8128 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8130 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8171 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8173 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx8308 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx8310 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx8312 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx8314 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8321 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obx8323 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8328 = new BitSet(new long[]{0x00000000003506D0L});
    public static final BitSet FOLLOW_spec_const_10_3_nm_in_line_obx8336 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8345 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8347 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8357 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8359 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8370 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8372 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8376 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8378 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_ce_in_line_obx8408 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8417 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8419 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8429 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8431 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8442 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8444 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8448 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8450 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_fic_in_line_obx8480 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8489 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8491 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8501 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8503 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8514 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8516 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8520 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8522 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_st_in_line_obx8552 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8561 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8563 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8573 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8575 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8586 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8588 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8592 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8594 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_gc_in_line_obx8624 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8633 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8635 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8645 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8647 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8658 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8660 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8664 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8666 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_tx_in_line_obx8696 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8705 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8707 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8717 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8719 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8730 = new BitSet(new long[]{0x0001E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx8732 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_std_in_line_obx8760 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8769 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8771 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8781 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8783 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8794 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8796 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8800 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8802 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68836 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68838 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68847 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68849 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68853 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68855 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68867 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68869 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68873 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68875 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68888 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_68890 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68902 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68904 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68908 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68910 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68925 = new BitSet(new long[]{0x00000200024C12C0L});
    public static final BitSet FOLLOW_spec_const_10_12_in_line_obx2_1_post10_68927 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68942 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68944 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68960 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68962 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68978 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68980 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68997 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_68999 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69017 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69019 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c9061 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c9063 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9067 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_c9069 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9074 = new BitSet(new long[]{0x0000020000044000L});
    public static final BitSet FOLLOW_spec_const_12_3_in_line_c9076 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9081 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9083 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_c9087 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9089 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l9116 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l9118 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9123 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9125 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9132 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_l9134 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9142 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9144 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9153 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9155 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9165 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_l9167 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_champ_full_in_crapy_repet9194 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_crapy_repet9198 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_crapy_repet9200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_champ_full9222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9230 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_full9237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_crapy_champ_ordered9255 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9257 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_champ_full9285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9293 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered9317 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered9319 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered9326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_sous_champ_full9346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HR_in_spec_act_119373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_RX_in_spec_act_119377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_act_119381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_plus_in_spec_p_or_m9399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_moins_in_spec_p_or_m9403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_89423 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_89428 = new BitSet(new long[]{0x0000000000200200L});
    public static final BitSet FOLLOW_spec_ac_8_2_in_spec_ac_89430 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_89435 = new BitSet(new long[]{0x0000000000340000L});
    public static final BitSet FOLLOW_spec_ac_8_3_in_spec_ac_89437 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_89442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TM_in_spec_ac_8_29465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_29469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FR_in_spec_ac_8_29473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PF_in_spec_ac_8_39493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_SS_in_spec_ac_8_39497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_39501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_on_optionnal9520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_on_optionnal9524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_sexe9545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_sexe9549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_sexe9553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_09590 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_09593 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_09595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_19616 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_19619 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_19621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_29640 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_29643 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_29645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_7_13_29664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_7_13_29668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_7_13_29672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU9690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM9708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA9726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM9744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC9764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_REG_in_spec_const_7_7_contexte_REG9782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_NS_in_spec_const_7_7_contexte_NS9800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_7_129819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_7_129823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charT_in_spec_const_7_129827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PORT_in_spec_const_9_319847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_CART_in_spec_const_9_319851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WHLC_in_spec_const_9_319855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WALK_in_spec_const_9_319859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_OP_in_spec_const_8_259880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_IP_in_spec_const_8_259884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ER_in_spec_const_8_259888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PA_in_spec_const_8_259892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MP_in_spec_const_8_259896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_9_269917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_9_269921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_9_269925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_9_269929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_9_269933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_9_269937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_const_9_269941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_9_269947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_9_269951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_nm9972 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_spec_const_10_3_nm9974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_ce9995 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_spec_const_10_3_ce9997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_spec_const_10_3_st10018 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_st10020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_gc10041 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_gc10043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_tx10065 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_spec_const_10_3_tx10067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_spec_const_10_3_fic10088 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_CHARI_in_spec_const_10_3_fic10090 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_fic10092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10114 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10122 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_spec_const_10_3_std10124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10130 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10132 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10140 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_spec_const_10_3_std10150 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10158 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10168 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_spec_const_10_3_std10170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10176 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010200 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_act_1010204 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010206 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_act_1010213 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610239 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610245 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610247 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610254 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_reg_410283 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_reg_410288 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_reg_410290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610314 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_610320 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610322 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_610329 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_10_910359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charH_in_spec_const_10_910363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_LL_in_spec_const_10_910367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HH_in_spec_const_10_910371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_inf_in_spec_const_10_910375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_sup_in_spec_const_10_910379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_910385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_910389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_AA_in_spec_const_10_910393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_Null_in_spec_const_10_910397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_910401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_910405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charB_in_spec_const_10_910409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charW_in_spec_const_10_910415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_910419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_910423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_910427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MS_in_spec_const_10_910431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_VS_in_spec_const_10_910435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_1110456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_1110460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1110464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_1110468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1210489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_10_1210493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_10_1210497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_10_1210501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_1210505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_1210509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_10_1210516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_1210520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_12_310541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_12_310545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210565 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_210571 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210596 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_210602 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410629 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410635 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410637 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410644 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410646 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410654 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610685 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610691 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610693 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610700 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610702 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610710 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610712 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610721 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610723 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610733 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610758 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610765 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610767 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610775 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610777 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610786 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610788 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610798 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610800 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_610811 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_610813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810846 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810852 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810854 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810861 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810863 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810871 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810873 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810882 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810884 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810894 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810896 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810907 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810909 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_810921 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_810923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310960 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_310966 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310968 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_310975 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_310977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611000 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611006 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611008 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611015 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611017 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611025 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611027 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611036 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611038 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611048 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211079 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211084 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211111 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211116 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11141 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11148 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11150 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11158 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_spec_sized_8_311192 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311199 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311201 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311209 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311251 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_311257 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811284 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_non_sized_9_811291 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1611314 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1611320 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611322 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1611329 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_10_411358 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411364 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411366 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411373 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411375 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411383 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411385 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411394 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411396 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411406 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx11443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_tx11468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11486 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_sized_tn11492 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_optionnal11522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_mandatory11545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_non_sized_optionnal11567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_nonsized_mandatory11586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_optionnal11604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_mandatory11627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal11649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory11677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_optionnal11700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_mandatory11723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_mandatory11745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_optionnal11763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_011782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_111800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_211820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_content_spec_10_6_in_final_spec_10_6_tx11837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_content_spec_10_611859 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_DELIMITER2_in_content_spec_10_611865 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_content_spec_10_6_in_content_spec_10_611876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11888 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11890 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11894 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11896 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11898 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11902 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11905 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11907 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11912 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11914 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11916 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11920 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11923 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts11925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_final_st11944 = new BitSet(new long[]{0x0001E0FFFFFFFFF2L});
    public static final BitSet FOLLOW_chiffre_in_final_nm11973 = new BitSet(new long[]{0x000100FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm11977 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm11979 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm11989 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_nm11991 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm_integer12008 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_CHARA_in_final_ADM12020 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_final_ADM12022 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ADM12024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORA12032 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORA12034 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_ORA12036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORU12044 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORU12046 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_CHARU_in_final_ORU12048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORM12056 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORM12058 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ORM12060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FAC12068 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_FAC12070 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_FAC12072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_REG12080 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_final_REG12082 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_final_REG12084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_CART12093 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_CART12095 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_CART12097 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_CART12099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PORT12107 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_final_PORT12109 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_PORT12111 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_PORT12113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WHLC12121 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_WHLC12123 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WHLC12125 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_WHLC12127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WALK12135 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_WALK12137 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WALK12139 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_final_WALK12141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12150 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12160 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12170 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MS12180 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_MS12182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARV_in_final_VS12190 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_VS12192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_Null12200 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_CHARu_in_final_Null12202 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12204 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_final_symbol_plus12230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MOINS_in_final_symbol_moins12238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_012247 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_012249 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_012251 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_CHIFFRE0_in_final_version_2_012253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_112261 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_112263 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_112265 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_CHIFFRE1_in_final_version_2_112267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_212275 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212277 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_212279 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_OP12290 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_OP12292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_IP12300 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_IP12302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARE_in_final_ER12310 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ER12312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PA12320 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_PA12322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MP12330 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_MP12332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TM12340 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_TM12342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TR12350 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_TR12352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FR12360 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_FR12362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PF12370 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_final_PF12372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_SS12380 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_SS12382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_RX12390 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_final_RX12392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HR12400 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_HR12402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_NS12410 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_NS12412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_charA12421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARB_in_final_charB12429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_charC12437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_final_charD12445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_charF12453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_charH12461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_charI12469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_charL12477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_charM12485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_charN12493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_charO12501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_charP12509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_charR12517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_charS12525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_charT12533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARU_in_final_charU12541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_charW12549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARX_in_final_charX12557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITERS_in_delimiters12578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lettre_in_character12594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_character12598 = new BitSet(new long[]{0x0000000000000002L});

}