// $ANTLR 3.4 C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g 2013-05-25 01:54:03

package com.github.aiderpmsi.hprim.parser.antlr;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.LinkedList;

import com.github.aiderpmsi.hprim.parser.MatchRegexTokenException;
import com.github.aiderpmsi.hprim.parser.ContentHandlerException;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class HPRIMSParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARA", "CHARB", "CHARC", "CHARD", "CHARE", "CHARF", "CHARG", "CHARH", "CHARI", "CHARK", "CHARL", "CHARM", "CHARN", "CHARO", "CHARP", "CHARR", "CHARS", "CHART", "CHARU", "CHARV", "CHARW", "CHARX", "CHAR_SYMBOL_INF", "CHAR_SYMBOL_SUP", "CHARl", "CHARu", "CHIFFRE0", "CHIFFRE1", "CHIFFRE2", "CHIFFRE3", "CHIFFRE4", "CHIFFRE5", "CHIFFRE6", "CHIFFRE7", "CHIFFRE8", "CHIFFRE9", "CR", "DELIMITER1", "DELIMITER2", "DELIMITER3", "DELIMITERS", "LETTRE", "MOINS", "PLUS", "POINT", "REPETITEUR", "TOKENMISMATCH"
    };

    public static final int EOF=-1;
    public static final int CHARA=4;
    public static final int CHARB=5;
    public static final int CHARC=6;
    public static final int CHARD=7;
    public static final int CHARE=8;
    public static final int CHARF=9;
    public static final int CHARG=10;
    public static final int CHARH=11;
    public static final int CHARI=12;
    public static final int CHARK=13;
    public static final int CHARL=14;
    public static final int CHARM=15;
    public static final int CHARN=16;
    public static final int CHARO=17;
    public static final int CHARP=18;
    public static final int CHARR=19;
    public static final int CHARS=20;
    public static final int CHART=21;
    public static final int CHARU=22;
    public static final int CHARV=23;
    public static final int CHARW=24;
    public static final int CHARX=25;
    public static final int CHAR_SYMBOL_INF=26;
    public static final int CHAR_SYMBOL_SUP=27;
    public static final int CHARl=28;
    public static final int CHARu=29;
    public static final int CHIFFRE0=30;
    public static final int CHIFFRE1=31;
    public static final int CHIFFRE2=32;
    public static final int CHIFFRE3=33;
    public static final int CHIFFRE4=34;
    public static final int CHIFFRE5=35;
    public static final int CHIFFRE6=36;
    public static final int CHIFFRE7=37;
    public static final int CHIFFRE8=38;
    public static final int CHIFFRE9=39;
    public static final int CR=40;
    public static final int DELIMITER1=41;
    public static final int DELIMITER2=42;
    public static final int DELIMITER3=43;
    public static final int DELIMITERS=44;
    public static final int LETTRE=45;
    public static final int MOINS=46;
    public static final int PLUS=47;
    public static final int POINT=48;
    public static final int REPETITEUR=49;
    public static final int TOKENMISMATCH=50;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public HPRIMSParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public HPRIMSParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

    public String[] getTokenNames() { return HPRIMSParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g"; }



      /**
       * Collecteur utilisé dans cette classe
       */
      public ContentHandler contentHandler;

      /**
       * Logger de la classe
       */
      private static final Logger logger = Logger.getLogger(HPRIMSParser.class.getCanonicalName());
      
      /**
       * Type utilisé pour se souvenir du dernier élément
       */
      private class XmlElement {
          public String uri;
          public String localName;
          public String qName;
      }
      
      /**
       * Liste des éléments parcourus
       */
      private LinkedList<XmlElement> xmlElements = new LinkedList<XmlElement>(); 

      /**
       * Constructeur
       * @param lexer
       * @param my_col
       */
      public HPRIMSParser(TokenStream input, ContentHandler contentHandler) {
        this(input);
        this.contentHandler = contentHandler;
      }
      
      /**
       * Formate une erreur sous forme de chaine de caractères
       * @param err
       * @return
       */
      public String formatError(RecognitionException err) {
        return getErrorHeader(err) + " / " + getErrorMessage(err, this.getTokenNames());
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void startElement(String nameElement) throws ContentHandlerException {
          try {
              // Enregistrement de cet élément
              XmlElement xmlElement = new XmlElement();
              xmlElement.uri = "";
              xmlElement.localName = nameElement;
              xmlElement.qName = nameElement;
              xmlElements.add(xmlElement);
              // Ajout de ce élément
              contentHandler.startElement("", nameElement, nameElement, new AttributesImpl());
           } catch (SAXException e) {
              ContentHandlerException exc = new ContentHandlerException(e.getMessage());
              exc.setIntStream(input);
              exc.setStartToken(input.LT(1));
              throw exc;
           }
        }
       
      /**
       * Encadre l'appel du contentHandler
       */
      public void endElement() throws ContentHandlerException {
        try {
            XmlElement xmlElement = xmlElements.pollLast();
            contentHandler.endElement(xmlElement.uri,
                xmlElement.localName, xmlElement.qName);
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Début de document hprim
       */
      public void startDocument() throws ContentHandlerException {
        try {
            contentHandler.startDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Fin de document hprim
       */
      public void endDocument() throws ContentHandlerException {
        try {
            contentHandler.endDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void content(String content) throws ContentHandlerException {
        try {
            contentHandler.characters(content.toCharArray(),
                0, content.length());
         } catch (SAXException e) {
             ContentHandlerException exc = new ContentHandlerException(e.getMessage());
             exc.setIntStream(input);
             exc.setStartToken(input.LT(1));
             throw exc;
         }
      }

      /**
       * Méthode pour permettre d'envoyer un message d'erreur correct lors d'une erreur de type
       * MatchRegexTokenException
       * @param e
       * @param tokenNames
       */
      public String getErrorMessage(RecognitionException e, String[] tokenNames) {
        if (e instanceof MatchRegexTokenException) {
          MatchRegexTokenException mrte = (MatchRegexTokenException) e;
          return "Malformed message : " + mrte.getText() +
            " does not match " + mrte.getRegex();
        } else if (e instanceof ContentHandlerException) {
          ContentHandlerException che = (ContentHandlerException) e;
          return "Content handling error : " + che.getText();
        } else {
           return super.getErrorMessage(e, tokenNames);
        }
      }
      
      /**
       * La reconnaissance d'une erreur dans le parser 
       * lance une erreur et arrête l'ensemble du parsing immédiatement
       * @param tokenNames
       * @param e
       */
       public void emitErrorMessage(String msg) {
          throw new IllegalArgumentException(msg);
       }
        
        /**
         * Réalise un regexp
         * @param text
         * @param regex
         * @param input
         * @throws RecognitionException
         */
        public void matchRegex(String text, String regex, Token startToken) throws RecognitionException {
          Pattern my_p = Pattern.compile(regex, Pattern.DOTALL);
          Matcher my_m = my_p.matcher(text);
          if (!my_m.matches())
            throw new MatchRegexTokenException(input, startToken, text, regex);
        }




    // $ANTLR start "hprim_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:204:1: hprim_crapy : hprim_adm_crapy ;
    public final void hprim_crapy() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:206:23: ( hprim_adm_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:207:3: hprim_adm_crapy
            {
            pushFollow(FOLLOW_hprim_adm_crapy_in_hprim_crapy67);
            hprim_adm_crapy();

            state._fsp--;


            }

            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_crapy"



    // $ANTLR start "hprim"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:209:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );
    public final void hprim() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:211:23: ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 )
            int alt1=18;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:3: hprim_oru_2_2
                    {
                    pushFollow(FOLLOW_hprim_oru_2_2_in_hprim84);
                    hprim_oru_2_2();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:19: hprim_oru_2_1
                    {
                    pushFollow(FOLLOW_hprim_oru_2_1_in_hprim88);
                    hprim_oru_2_1();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:35: hprim_oru_2_0
                    {
                    pushFollow(FOLLOW_hprim_oru_2_0_in_hprim92);
                    hprim_oru_2_0();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:3: hprim_orm_2_2
                    {
                    pushFollow(FOLLOW_hprim_orm_2_2_in_hprim98);
                    hprim_orm_2_2();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:19: hprim_orm_2_1
                    {
                    pushFollow(FOLLOW_hprim_orm_2_1_in_hprim102);
                    hprim_orm_2_1();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:213:35: hprim_orm_2_0
                    {
                    pushFollow(FOLLOW_hprim_orm_2_0_in_hprim106);
                    hprim_orm_2_0();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:3: hprim_ora_2_2
                    {
                    pushFollow(FOLLOW_hprim_ora_2_2_in_hprim112);
                    hprim_ora_2_2();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:19: hprim_ora_2_1
                    {
                    pushFollow(FOLLOW_hprim_ora_2_1_in_hprim116);
                    hprim_ora_2_1();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:35: hprim_ora_2_0
                    {
                    pushFollow(FOLLOW_hprim_ora_2_0_in_hprim120);
                    hprim_ora_2_0();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:3: hprim_adm_2_2
                    {
                    pushFollow(FOLLOW_hprim_adm_2_2_in_hprim126);
                    hprim_adm_2_2();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:19: hprim_adm_2_1
                    {
                    pushFollow(FOLLOW_hprim_adm_2_1_in_hprim130);
                    hprim_adm_2_1();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:35: hprim_adm_2_0
                    {
                    pushFollow(FOLLOW_hprim_adm_2_0_in_hprim134);
                    hprim_adm_2_0();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:3: hprim_fac_2_2
                    {
                    pushFollow(FOLLOW_hprim_fac_2_2_in_hprim139);
                    hprim_fac_2_2();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:19: hprim_fac_2_1
                    {
                    pushFollow(FOLLOW_hprim_fac_2_1_in_hprim143);
                    hprim_fac_2_1();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:35: hprim_fac_2_0
                    {
                    pushFollow(FOLLOW_hprim_fac_2_0_in_hprim147);
                    hprim_fac_2_0();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:3: hprim_reg_2_2
                    {
                    pushFollow(FOLLOW_hprim_reg_2_2_in_hprim152);
                    hprim_reg_2_2();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:19: hprim_reg_2_1
                    {
                    pushFollow(FOLLOW_hprim_reg_2_1_in_hprim156);
                    hprim_reg_2_1();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:35: hprim_reg_2_0
                    {
                    pushFollow(FOLLOW_hprim_reg_2_0_in_hprim160);
                    hprim_reg_2_0();

                    state._fsp--;


                    }
                    break;

            }
            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim"



    // $ANTLR start "hprim_oru_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:220:1: hprim_oru_2_2 : line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_2() throws RecognitionException {
        startElement("HPRIM.ORU.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:222:22: ( line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:223:3: line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_oru_in_hprim_oru_2_2178);
            line_h2_2_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:224:3: ( body_p_oru )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==CR) ) {
                    int LA2_1 = input.LA(2);

                    if ( (LA2_1==CHARP) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:224:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_2182);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_2187);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:226:3: ( CR )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CR) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:226:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_2191); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_2196); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_2"



    // $ANTLR start "hprim_oru_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:229:1: hprim_oru_2_1 : line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_1() throws RecognitionException {
        startElement("HPRIM.ORU.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:231:22: ( line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:232:3: line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_oru_in_hprim_oru_2_1213);
            line_h2_1_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:233:3: ( body_p_oru )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==CR) ) {
                    int LA4_1 = input.LA(2);

                    if ( (LA4_1==CHARP) ) {
                        alt4=1;
                    }


                }


                switch (alt4) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:233:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_1217);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_1222);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:235:3: ( CR )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==CR) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:235:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_1226); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_1231); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_1"



    // $ANTLR start "hprim_oru_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:238:1: hprim_oru_2_0 : line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_0() throws RecognitionException {
        startElement("HPRIM.ORU.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:240:22: ( line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:241:3: line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_oru_in_hprim_oru_2_0248);
            line_h2_0_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:242:3: ( body_p_oru )+
            int cnt6=0;
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==CR) ) {
                    int LA6_1 = input.LA(2);

                    if ( (LA6_1==CHARP) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:242:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_0252);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt6 >= 1 ) break loop6;
                        EarlyExitException eee =
                            new EarlyExitException(6, input);
                        throw eee;
                }
                cnt6++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_0257);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:244:3: ( CR )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==CR) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:244:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_0261); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_0266); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_0"



    // $ANTLR start "hprim_oru_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:247:1: hprim_oru_crapy : line_h_crapy_oru ( line_crapy )* ( CR )? EOF ;
    public final void hprim_oru_crapy() throws RecognitionException {
        startElement("HPRIM.ORU.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:249:22: ( line_h_crapy_oru ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:250:3: line_h_crapy_oru ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_oru_in_hprim_oru_crapy283);
            line_h_crapy_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:251:3: ( line_crapy )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==CR) ) {
                    int LA8_1 = input.LA(2);

                    if ( (LA8_1==CHARA||LA8_1==CHARC||LA8_1==CHARF||LA8_1==CHARL||(LA8_1 >= CHARO && LA8_1 <= CHARR)) ) {
                        alt8=1;
                    }


                }


                switch (alt8) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:251:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_oru_crapy287);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:252:3: ( CR )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==CR) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:252:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_crapy292); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_crapy297); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_crapy"



    // $ANTLR start "hprim_ora_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:256:1: hprim_ora_2_2 : line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_2() throws RecognitionException {
        startElement("HPRIM.ORA.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:258:22: ( line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:259:3: line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ora_in_hprim_ora_2_2315);
            line_h2_2_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:260:3: ( body_p_ora )+
            int cnt10=0;
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==CR) ) {
                    int LA10_1 = input.LA(2);

                    if ( (LA10_1==CHARP) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:260:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_2319);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_2324);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:262:3: ( CR )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==CR) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:262:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_2328); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_2333); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_2"



    // $ANTLR start "hprim_ora_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:265:1: hprim_ora_2_1 : line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_1() throws RecognitionException {
        startElement("HPRIM.ORA.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:267:22: ( line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:268:3: line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ora_in_hprim_ora_2_1350);
            line_h2_1_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:269:3: ( body_p_ora )+
            int cnt12=0;
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==CR) ) {
                    int LA12_1 = input.LA(2);

                    if ( (LA12_1==CHARP) ) {
                        alt12=1;
                    }


                }


                switch (alt12) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:269:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_1354);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_1359);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:271:3: ( CR )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==CR) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:271:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_1363); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_1368); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_1"



    // $ANTLR start "hprim_ora_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:274:1: hprim_ora_2_0 : line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_0() throws RecognitionException {
        startElement("HPRIM.ORA.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:276:22: ( line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:277:3: line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ora_in_hprim_ora_2_0385);
            line_h2_0_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:278:3: ( body_p_ora )+
            int cnt14=0;
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==CR) ) {
                    int LA14_1 = input.LA(2);

                    if ( (LA14_1==CHARP) ) {
                        alt14=1;
                    }


                }


                switch (alt14) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:278:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_0389);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt14 >= 1 ) break loop14;
                        EarlyExitException eee =
                            new EarlyExitException(14, input);
                        throw eee;
                }
                cnt14++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_0394);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:280:3: ( CR )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==CR) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:280:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_0398); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_0403); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_0"



    // $ANTLR start "hprim_ora_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:283:1: hprim_ora_crapy : line_h_crapy_ora ( line_crapy )* ( CR )? EOF ;
    public final void hprim_ora_crapy() throws RecognitionException {
        startElement("HPRIM.ORA.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:285:22: ( line_h_crapy_ora ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:286:3: line_h_crapy_ora ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_ora_in_hprim_ora_crapy420);
            line_h_crapy_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:287:3: ( line_crapy )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==CR) ) {
                    int LA16_1 = input.LA(2);

                    if ( (LA16_1==CHARA||LA16_1==CHARC||LA16_1==CHARF||LA16_1==CHARL||(LA16_1 >= CHARO && LA16_1 <= CHARR)) ) {
                        alt16=1;
                    }


                }


                switch (alt16) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:287:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_ora_crapy424);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:288:3: ( CR )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==CR) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:288:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_crapy429); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_crapy434); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_crapy"



    // $ANTLR start "hprim_orm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:292:1: hprim_orm_2_2 : line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_2() throws RecognitionException {
        startElement("HPRIM.ORM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:294:22: ( line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:295:3: line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_orm_in_hprim_orm_2_2452);
            line_h2_2_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:296:3: ( body_p_orm )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==CR) ) {
                    int LA18_1 = input.LA(2);

                    if ( (LA18_1==CHARP) ) {
                        alt18=1;
                    }


                }


                switch (alt18) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:296:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_2456);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_2461);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:298:3: ( CR )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==CR) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:298:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_2465); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_2470); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_2"



    // $ANTLR start "hprim_orm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:301:1: hprim_orm_2_1 : line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_1() throws RecognitionException {
        startElement("HPRIM.ORM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:303:22: ( line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:304:3: line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_orm_in_hprim_orm_2_1487);
            line_h2_1_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:305:3: ( body_p_orm )+
            int cnt20=0;
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==CR) ) {
                    int LA20_1 = input.LA(2);

                    if ( (LA20_1==CHARP) ) {
                        alt20=1;
                    }


                }


                switch (alt20) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:305:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_1491);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_1496);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:307:3: ( CR )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==CR) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:307:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_1500); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_1505); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_1"



    // $ANTLR start "hprim_orm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:310:1: hprim_orm_2_0 : line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_0() throws RecognitionException {
        startElement("HPRIM.ORM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:312:22: ( line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:313:3: line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_orm_in_hprim_orm_2_0522);
            line_h2_0_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:314:3: ( body_p_orm )+
            int cnt22=0;
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==CR) ) {
                    int LA22_1 = input.LA(2);

                    if ( (LA22_1==CHARP) ) {
                        alt22=1;
                    }


                }


                switch (alt22) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:314:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_0526);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_0531);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:316:3: ( CR )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==CR) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:316:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_0535); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_0540); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_0"



    // $ANTLR start "hprim_orm_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:319:1: hprim_orm_crapy : line_h_crapy_orm ( line_crapy )* ( CR )? EOF ;
    public final void hprim_orm_crapy() throws RecognitionException {
        startElement("HPRIM.ORM.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:321:22: ( line_h_crapy_orm ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:322:3: line_h_crapy_orm ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_orm_in_hprim_orm_crapy557);
            line_h_crapy_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:323:3: ( line_crapy )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==CR) ) {
                    int LA24_1 = input.LA(2);

                    if ( (LA24_1==CHARA||LA24_1==CHARC||LA24_1==CHARF||LA24_1==CHARL||(LA24_1 >= CHARO && LA24_1 <= CHARR)) ) {
                        alt24=1;
                    }


                }


                switch (alt24) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:323:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_orm_crapy561);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:324:3: ( CR )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==CR) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:324:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_crapy566); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_crapy571); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_crapy"



    // $ANTLR start "hprim_adm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:328:1: hprim_adm_2_2 : line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_2() throws RecognitionException {
        startElement("HPRIM.ADM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:330:22: ( line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:331:3: line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_adm_in_hprim_adm_2_2589);
            line_h2_2_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:332:3: ( body_p_adm )+
            int cnt26=0;
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==CR) ) {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==CHARP) ) {
                        alt26=1;
                    }


                }


                switch (alt26) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:332:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_2593);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt26 >= 1 ) break loop26;
                        EarlyExitException eee =
                            new EarlyExitException(26, input);
                        throw eee;
                }
                cnt26++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_2598);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:334:3: ( CR )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==CR) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:334:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_2602); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_2607); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_2"



    // $ANTLR start "hprim_adm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:337:1: hprim_adm_2_1 : line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_1() throws RecognitionException {
        startElement("HPRIM.ADM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:339:22: ( line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:340:3: line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_adm_in_hprim_adm_2_1624);
            line_h2_1_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:341:3: ( body_p_adm )+
            int cnt28=0;
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==CR) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==CHARP) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:341:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_1628);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt28 >= 1 ) break loop28;
                        EarlyExitException eee =
                            new EarlyExitException(28, input);
                        throw eee;
                }
                cnt28++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_1633);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:343:3: ( CR )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==CR) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:343:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_1637); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_1642); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_1"



    // $ANTLR start "hprim_adm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:346:1: hprim_adm_2_0 : line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_0() throws RecognitionException {
        startElement("HPRIM.ADM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:348:22: ( line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:349:3: line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_adm_in_hprim_adm_2_0659);
            line_h2_0_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:350:3: ( body_p_adm )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==CR) ) {
                    int LA30_1 = input.LA(2);

                    if ( (LA30_1==CHARP) ) {
                        alt30=1;
                    }


                }


                switch (alt30) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:350:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_0663);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_0668);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:352:3: ( CR )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==CR) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:352:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_0672); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_0677); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_0"



    // $ANTLR start "hprim_adm_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:355:1: hprim_adm_crapy : line_h_crapy_adm ( line_crapy )* ( CR )? EOF ;
    public final void hprim_adm_crapy() throws RecognitionException {
        startElement("HPRIM.ADM.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:357:22: ( line_h_crapy_adm ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:358:3: line_h_crapy_adm ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_adm_in_hprim_adm_crapy694);
            line_h_crapy_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:359:3: ( line_crapy )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==CR) ) {
                    int LA32_1 = input.LA(2);

                    if ( (LA32_1==CHARA||LA32_1==CHARC||LA32_1==CHARF||LA32_1==CHARL||(LA32_1 >= CHARO && LA32_1 <= CHARR)) ) {
                        alt32=1;
                    }


                }


                switch (alt32) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:359:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_adm_crapy698);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:360:3: ( CR )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==CR) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:360:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_crapy703); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_crapy708); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_crapy"



    // $ANTLR start "hprim_fac_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:364:1: hprim_fac_2_2 : line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_2() throws RecognitionException {
        startElement("HPRIM.FAC.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:366:22: ( line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:367:3: line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_fac_in_hprim_fac_2_2726);
            line_h2_2_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:368:3: ( body_p_fac )+
            int cnt34=0;
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==CR) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==CHARP) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:368:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_2730);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_2735);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:370:3: ( CR )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==CR) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:370:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_2739); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_2744); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_2"



    // $ANTLR start "hprim_fac_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:373:1: hprim_fac_2_1 : line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_1() throws RecognitionException {
        startElement("HPRIM.FAC.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:375:22: ( line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:376:3: line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_fac_in_hprim_fac_2_1761);
            line_h2_1_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:377:3: ( body_p_fac )+
            int cnt36=0;
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==CR) ) {
                    int LA36_1 = input.LA(2);

                    if ( (LA36_1==CHARP) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:377:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_1765);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt36 >= 1 ) break loop36;
                        EarlyExitException eee =
                            new EarlyExitException(36, input);
                        throw eee;
                }
                cnt36++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_1770);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:379:3: ( CR )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==CR) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:379:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_1774); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_1779); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_1"



    // $ANTLR start "hprim_fac_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:382:1: hprim_fac_2_0 : line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_0() throws RecognitionException {
        startElement("HPRIM.FAC.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:384:22: ( line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:385:3: line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_fac_in_hprim_fac_2_0796);
            line_h2_0_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:386:3: ( body_p_fac )+
            int cnt38=0;
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CR) ) {
                    int LA38_1 = input.LA(2);

                    if ( (LA38_1==CHARP) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:386:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_0800);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt38 >= 1 ) break loop38;
                        EarlyExitException eee =
                            new EarlyExitException(38, input);
                        throw eee;
                }
                cnt38++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_0805);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:388:3: ( CR )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==CR) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:388:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_0809); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_0814); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_0"



    // $ANTLR start "hprim_fac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:391:1: hprim_fac_crapy : line_h_crapy_fac ( line_crapy )* ( CR )? EOF ;
    public final void hprim_fac_crapy() throws RecognitionException {
        startElement("HPRIM.FAC.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:393:22: ( line_h_crapy_fac ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:394:3: line_h_crapy_fac ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_fac_in_hprim_fac_crapy831);
            line_h_crapy_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:395:3: ( line_crapy )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==CR) ) {
                    int LA40_1 = input.LA(2);

                    if ( (LA40_1==CHARA||LA40_1==CHARC||LA40_1==CHARF||LA40_1==CHARL||(LA40_1 >= CHARO && LA40_1 <= CHARR)) ) {
                        alt40=1;
                    }


                }


                switch (alt40) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:395:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_fac_crapy835);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:396:3: ( CR )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==CR) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:396:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_crapy840); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_crapy845); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_crapy"



    // $ANTLR start "hprim_reg_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:400:1: hprim_reg_2_2 : line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_2() throws RecognitionException {
        startElement("HPRIM.REG.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:402:22: ( line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:403:3: line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_reg_in_hprim_reg_2_2863);
            line_h2_2_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:404:3: ( body_p_reg )+
            int cnt42=0;
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==CR) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==CHARP) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:404:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_2867);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt42 >= 1 ) break loop42;
                        EarlyExitException eee =
                            new EarlyExitException(42, input);
                        throw eee;
                }
                cnt42++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_2872);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:406:3: ( CR )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==CR) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:406:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_2876); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_2881); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_2"



    // $ANTLR start "hprim_reg_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:409:1: hprim_reg_2_1 : line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_1() throws RecognitionException {
        startElement("HPRIM.REG.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:411:22: ( line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:412:3: line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_reg_in_hprim_reg_2_1898);
            line_h2_1_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:413:3: ( body_p_reg )+
            int cnt44=0;
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==CR) ) {
                    int LA44_1 = input.LA(2);

                    if ( (LA44_1==CHARP) ) {
                        alt44=1;
                    }


                }


                switch (alt44) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:413:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_1902);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt44 >= 1 ) break loop44;
                        EarlyExitException eee =
                            new EarlyExitException(44, input);
                        throw eee;
                }
                cnt44++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_1907);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:415:3: ( CR )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==CR) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:415:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_1911); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_1916); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_1"



    // $ANTLR start "hprim_reg_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:418:1: hprim_reg_2_0 : line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_0() throws RecognitionException {
        startElement("HPRIM.REG.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:420:22: ( line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:421:3: line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_reg_in_hprim_reg_2_0933);
            line_h2_0_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:422:3: ( body_p_reg )+
            int cnt46=0;
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==CR) ) {
                    int LA46_1 = input.LA(2);

                    if ( (LA46_1==CHARP) ) {
                        alt46=1;
                    }


                }


                switch (alt46) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:422:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_0937);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt46 >= 1 ) break loop46;
                        EarlyExitException eee =
                            new EarlyExitException(46, input);
                        throw eee;
                }
                cnt46++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_0942);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:3: ( CR )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==CR) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_0946); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_0951); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_0"



    // $ANTLR start "hprim_reg_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:427:1: hprim_reg_crapy : line_h_crapy_reg ( line_crapy )* ( CR )? EOF ;
    public final void hprim_reg_crapy() throws RecognitionException {
        startElement("HPRIM.REG.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:429:22: ( line_h_crapy_reg ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:3: line_h_crapy_reg ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_reg_in_hprim_reg_crapy968);
            line_h_crapy_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:3: ( line_crapy )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==CR) ) {
                    int LA48_1 = input.LA(2);

                    if ( (LA48_1==CHARA||LA48_1==CHARC||LA48_1==CHARF||LA48_1==CHARL||(LA48_1 >= CHARO && LA48_1 <= CHARR)) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_reg_crapy972);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:3: ( CR )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==CR) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_crapy977); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_crapy982); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_crapy"



    // $ANTLR start "hprim_ns_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:436:1: hprim_ns_2_2 : line_h2_2_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_2() throws RecognitionException {
        startElement("HPRIM.NS.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:438:22: ( line_h2_2_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:3: line_h2_2_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ns_in_hprim_ns_2_21000);
            line_h2_2_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_21004);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:3: ( CR )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==CR) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_21008); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_21013); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_2"



    // $ANTLR start "hprim_ns_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:444:1: hprim_ns_2_1 : line_h2_1_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_1() throws RecognitionException {
        startElement("HPRIM.NS.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:446:22: ( line_h2_1_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:3: line_h2_1_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ns_in_hprim_ns_2_11030);
            line_h2_1_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_11034);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:3: ( CR )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==CR) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_11038); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_11043); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_1"



    // $ANTLR start "hprim_ns_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:452:1: hprim_ns_2_0 : line_h2_0_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_0() throws RecognitionException {
        startElement("HPRIM.NS.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:22: ( line_h2_0_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:3: line_h2_0_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ns_in_hprim_ns_2_01060);
            line_h2_0_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_01064);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:457:3: ( CR )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==CR) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:457:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_01068); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_01073); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_0"



    // $ANTLR start "hprim_ns_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:1: hprim_ns_crapy : line_h_crapy_ns ( line_crapy )* ( CR )? EOF ;
    public final void hprim_ns_crapy() throws RecognitionException {
        startElement("HPRIM.NS.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:22: ( line_h_crapy_ns ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:463:3: line_h_crapy_ns ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_ns_in_hprim_ns_crapy1090);
            line_h_crapy_ns();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:3: ( line_crapy )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==CR) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==CHARA||LA53_1==CHARC||LA53_1==CHARF||LA53_1==CHARL||(LA53_1 >= CHARO && LA53_1 <= CHARR)) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:464:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_ns_crapy1094);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:3: ( CR )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==CR) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_crapy1099); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_crapy1104); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_crapy"



    // $ANTLR start "line_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:469:1: line_crapy : ( line_p_crapy | line_c_crapy | line_ap_crapy | line_ac_crapy | line_obr_crapy | line_obx_crapy | line_fac_crapy | line_reg_crapy | line_act_crapy | line_l_crapy );
    public final void line_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:469:12: ( line_p_crapy | line_c_crapy | line_ap_crapy | line_ac_crapy | line_obr_crapy | line_obx_crapy | line_fac_crapy | line_reg_crapy | line_act_crapy | line_l_crapy )
            int alt55=10;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==CR) ) {
                switch ( input.LA(2) ) {
                case CHARP:
                    {
                    alt55=1;
                    }
                    break;
                case CHARC:
                    {
                    alt55=2;
                    }
                    break;
                case CHARA:
                    {
                    int LA55_4 = input.LA(3);

                    if ( (LA55_4==CHARP) ) {
                        alt55=3;
                    }
                    else if ( (LA55_4==CHARC) ) {
                        int LA55_10 = input.LA(4);

                        if ( (LA55_10==CHART) ) {
                            alt55=9;
                        }
                        else if ( (LA55_10==EOF||(LA55_10 >= CR && LA55_10 <= DELIMITER1)) ) {
                            alt55=4;
                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 55, 10, input);

                            throw nvae;

                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 4, input);

                        throw nvae;

                    }
                    }
                    break;
                case CHARO:
                    {
                    int LA55_5 = input.LA(3);

                    if ( (LA55_5==CHARB) ) {
                        int LA55_11 = input.LA(4);

                        if ( (LA55_11==CHARR) ) {
                            alt55=5;
                        }
                        else if ( (LA55_11==CHARX) ) {
                            alt55=6;
                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 55, 11, input);

                            throw nvae;

                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 5, input);

                        throw nvae;

                    }
                    }
                    break;
                case CHARF:
                    {
                    alt55=7;
                    }
                    break;
                case CHARR:
                    {
                    alt55=8;
                    }
                    break;
                case CHARL:
                    {
                    alt55=10;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;

                }

            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:470:3: line_p_crapy
                    {
                    pushFollow(FOLLOW_line_p_crapy_in_line_crapy1115);
                    line_p_crapy();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:3: line_c_crapy
                    {
                    pushFollow(FOLLOW_line_c_crapy_in_line_crapy1121);
                    line_c_crapy();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:3: line_ap_crapy
                    {
                    pushFollow(FOLLOW_line_ap_crapy_in_line_crapy1127);
                    line_ap_crapy();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:473:3: line_ac_crapy
                    {
                    pushFollow(FOLLOW_line_ac_crapy_in_line_crapy1133);
                    line_ac_crapy();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:474:3: line_obr_crapy
                    {
                    pushFollow(FOLLOW_line_obr_crapy_in_line_crapy1139);
                    line_obr_crapy();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:475:3: line_obx_crapy
                    {
                    pushFollow(FOLLOW_line_obx_crapy_in_line_crapy1145);
                    line_obx_crapy();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:476:3: line_fac_crapy
                    {
                    pushFollow(FOLLOW_line_fac_crapy_in_line_crapy1151);
                    line_fac_crapy();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:477:3: line_reg_crapy
                    {
                    pushFollow(FOLLOW_line_reg_crapy_in_line_crapy1157);
                    line_reg_crapy();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:478:3: line_act_crapy
                    {
                    pushFollow(FOLLOW_line_act_crapy_in_line_crapy1163);
                    line_act_crapy();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:479:3: line_l_crapy
                    {
                    pushFollow(FOLLOW_line_l_crapy_in_line_crapy1169);
                    line_l_crapy();

                    state._fsp--;


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_crapy"



    // $ANTLR start "body_p_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:482:1: body_p_orm : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ ;
    public final void body_p_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:482:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:483:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_orm1180);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:483:10: ( line_c )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==CR) ) {
                    int LA56_1 = input.LA(2);

                    if ( (LA56_1==CHARC) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:483:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_orm1183);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            int cnt60=0;
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==CR) ) {
                    int LA60_1 = input.LA(2);

                    if ( (LA60_1==CHARO) ) {
                        alt60=1;
                    }


                }


                switch (alt60) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:4: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_orm1190);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:13: ( line_c )*
            	    loop57:
            	    do {
            	        int alt57=2;
            	        int LA57_0 = input.LA(1);

            	        if ( (LA57_0==CR) ) {
            	            int LA57_1 = input.LA(2);

            	            if ( (LA57_1==CHARC) ) {
            	                alt57=1;
            	            }


            	        }


            	        switch (alt57) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:484:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_orm1193);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop57;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:485:4: ( line_obx ( line_c )* )*
            	    loop59:
            	    do {
            	        int alt59=2;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==CR) ) {
            	            int LA59_1 = input.LA(2);

            	            if ( (LA59_1==CHARO) ) {
            	                int LA59_3 = input.LA(3);

            	                if ( (LA59_3==CHARB) ) {
            	                    int LA59_4 = input.LA(4);

            	                    if ( (LA59_4==CHARX) ) {
            	                        alt59=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:485:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_orm1201);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:485:14: ( line_c )*
            	    	    loop58:
            	    	    do {
            	    	        int alt58=2;
            	    	        int LA58_0 = input.LA(1);

            	    	        if ( (LA58_0==CR) ) {
            	    	            int LA58_1 = input.LA(2);

            	    	            if ( (LA58_1==CHARC) ) {
            	    	                alt58=1;
            	    	            }


            	    	        }


            	    	        switch (alt58) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:485:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_orm1204);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop58;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop59;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_orm"



    // $ANTLR start "body_p_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:489:1: body_p_ora : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ ;
    public final void body_p_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:489:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:490:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_ora1224);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:490:10: ( line_c )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==CR) ) {
                    int LA61_1 = input.LA(2);

                    if ( (LA61_1==CHARC) ) {
                        alt61=1;
                    }


                }


                switch (alt61) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:490:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_ora1227);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:491:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            int cnt69=0;
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==CR) ) {
                    int LA69_1 = input.LA(2);

                    if ( (LA69_1==CHARA) ) {
                        alt69=1;
                    }


                }


                switch (alt69) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:491:4: line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_ora1234);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:491:12: ( line_c )*
            	    loop62:
            	    do {
            	        int alt62=2;
            	        int LA62_0 = input.LA(1);

            	        if ( (LA62_0==CR) ) {
            	            int LA62_1 = input.LA(2);

            	            if ( (LA62_1==CHARC) ) {
            	                alt62=1;
            	            }


            	        }


            	        switch (alt62) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:491:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1237);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop62;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:4: ( line_ac ( line_c )* )*
            	    loop64:
            	    do {
            	        int alt64=2;
            	        int LA64_0 = input.LA(1);

            	        if ( (LA64_0==CR) ) {
            	            int LA64_1 = input.LA(2);

            	            if ( (LA64_1==CHARA) ) {
            	                alt64=1;
            	            }


            	        }


            	        switch (alt64) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_ora1245);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:13: ( line_c )*
            	    	    loop63:
            	    	    do {
            	    	        int alt63=2;
            	    	        int LA63_0 = input.LA(1);

            	    	        if ( (LA63_0==CR) ) {
            	    	            int LA63_1 = input.LA(2);

            	    	            if ( (LA63_1==CHARC) ) {
            	    	                alt63=1;
            	    	            }


            	    	        }


            	    	        switch (alt63) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:492:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1248);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop63;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop64;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:4: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    int cnt68=0;
            	    loop68:
            	    do {
            	        int alt68=2;
            	        int LA68_0 = input.LA(1);

            	        if ( (LA68_0==CR) ) {
            	            int LA68_1 = input.LA(2);

            	            if ( (LA68_1==CHARO) ) {
            	                alt68=1;
            	            }


            	        }


            	        switch (alt68) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:5: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obr_in_body_p_ora1258);
            	    	    line_obr();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:14: ( line_c )*
            	    	    loop65:
            	    	    do {
            	    	        int alt65=2;
            	    	        int LA65_0 = input.LA(1);

            	    	        if ( (LA65_0==CR) ) {
            	    	            int LA65_1 = input.LA(2);

            	    	            if ( (LA65_1==CHARC) ) {
            	    	                alt65=1;
            	    	            }


            	    	        }


            	    	        switch (alt65) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1261);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop65;
            	    	        }
            	    	    } while (true);


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:494:5: ( line_obx ( line_c )* )*
            	    	    loop67:
            	    	    do {
            	    	        int alt67=2;
            	    	        int LA67_0 = input.LA(1);

            	    	        if ( (LA67_0==CR) ) {
            	    	            int LA67_1 = input.LA(2);

            	    	            if ( (LA67_1==CHARO) ) {
            	    	                int LA67_3 = input.LA(3);

            	    	                if ( (LA67_3==CHARB) ) {
            	    	                    int LA67_4 = input.LA(4);

            	    	                    if ( (LA67_4==CHARX) ) {
            	    	                        alt67=1;
            	    	                    }


            	    	                }


            	    	            }


            	    	        }


            	    	        switch (alt67) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:494:6: line_obx ( line_c )*
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_obx_in_body_p_ora1270);
            	    	    	    line_obx();

            	    	    	    state._fsp--;


            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:494:15: ( line_c )*
            	    	    	    loop66:
            	    	    	    do {
            	    	    	        int alt66=2;
            	    	    	        int LA66_0 = input.LA(1);

            	    	    	        if ( (LA66_0==CR) ) {
            	    	    	            int LA66_1 = input.LA(2);

            	    	    	            if ( (LA66_1==CHARC) ) {
            	    	    	                alt66=1;
            	    	    	            }


            	    	    	        }


            	    	    	        switch (alt66) {
            	    	    	    	case 1 :
            	    	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:494:16: line_c
            	    	    	    	    {
            	    	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1273);
            	    	    	    	    line_c();

            	    	    	    	    state._fsp--;


            	    	    	    	    }
            	    	    	    	    break;

            	    	    	    	default :
            	    	    	    	    break loop66;
            	    	    	        }
            	    	    	    } while (true);


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop67;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt68 >= 1 ) break loop68;
            	                EarlyExitException eee =
            	                    new EarlyExitException(68, input);
            	                throw eee;
            	        }
            	        cnt68++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt69 >= 1 ) break loop69;
                        EarlyExitException eee =
                            new EarlyExitException(69, input);
                        throw eee;
                }
                cnt69++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_ora"



    // $ANTLR start "body_p_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:499:1: body_p_oru : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ ;
    public final void body_p_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:499:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_oru1299);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:10: ( line_c )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==CR) ) {
                    int LA70_1 = input.LA(2);

                    if ( (LA70_1==CHARC) ) {
                        alt70=1;
                    }


                }


                switch (alt70) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_oru1302);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            int cnt74=0;
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==CR) ) {
                    int LA74_1 = input.LA(2);

                    if ( (LA74_1==CHARO) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:4: line_obr ( line_c )* ( line_obx ( line_c )* )+
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_oru1309);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:13: ( line_c )*
            	    loop71:
            	    do {
            	        int alt71=2;
            	        int LA71_0 = input.LA(1);

            	        if ( (LA71_0==CR) ) {
            	            int LA71_1 = input.LA(2);

            	            if ( (LA71_1==CHARC) ) {
            	                alt71=1;
            	            }


            	        }


            	        switch (alt71) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1312);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop71;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:4: ( line_obx ( line_c )* )+
            	    int cnt73=0;
            	    loop73:
            	    do {
            	        int alt73=2;
            	        int LA73_0 = input.LA(1);

            	        if ( (LA73_0==CR) ) {
            	            int LA73_1 = input.LA(2);

            	            if ( (LA73_1==CHARO) ) {
            	                int LA73_3 = input.LA(3);

            	                if ( (LA73_3==CHARB) ) {
            	                    int LA73_4 = input.LA(4);

            	                    if ( (LA73_4==CHARX) ) {
            	                        alt73=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt73) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_oru1320);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:14: ( line_c )*
            	    	    loop72:
            	    	    do {
            	    	        int alt72=2;
            	    	        int LA72_0 = input.LA(1);

            	    	        if ( (LA72_0==CR) ) {
            	    	            int LA72_1 = input.LA(2);

            	    	            if ( (LA72_1==CHARC) ) {
            	    	                alt72=1;
            	    	            }


            	    	        }


            	    	        switch (alt72) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1323);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop72;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt73 >= 1 ) break loop73;
            	                EarlyExitException eee =
            	                    new EarlyExitException(73, input);
            	                throw eee;
            	        }
            	        cnt73++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt74 >= 1 ) break loop74;
                        EarlyExitException eee =
                            new EarlyExitException(74, input);
                        throw eee;
                }
                cnt74++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_oru"



    // $ANTLR start "body_p_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:1: body_p_adm : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* ;
    public final void body_p_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_adm1343);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:10: ( line_c )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==CR) ) {
                    int LA75_1 = input.LA(2);

                    if ( (LA75_1==CHARC) ) {
                        alt75=1;
                    }


                }


                switch (alt75) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_adm1346);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:508:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==CR) ) {
                    int LA79_1 = input.LA(2);

                    if ( (LA79_1==CHARA) ) {
                        alt79=1;
                    }


                }


                switch (alt79) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:508:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_adm1353);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:508:12: ( line_c )*
            	    loop76:
            	    do {
            	        int alt76=2;
            	        int LA76_0 = input.LA(1);

            	        if ( (LA76_0==CR) ) {
            	            int LA76_1 = input.LA(2);

            	            if ( (LA76_1==CHARC) ) {
            	                alt76=1;
            	            }


            	        }


            	        switch (alt76) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:508:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1356);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop76;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:509:4: ( line_ac ( line_c )* )*
            	    loop78:
            	    do {
            	        int alt78=2;
            	        int LA78_0 = input.LA(1);

            	        if ( (LA78_0==CR) ) {
            	            int LA78_1 = input.LA(2);

            	            if ( (LA78_1==CHARA) ) {
            	                int LA78_3 = input.LA(3);

            	                if ( (LA78_3==CHARC) ) {
            	                    alt78=1;
            	                }


            	            }


            	        }


            	        switch (alt78) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:509:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_adm1364);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:509:13: ( line_c )*
            	    	    loop77:
            	    	    do {
            	    	        int alt77=2;
            	    	        int LA77_0 = input.LA(1);

            	    	        if ( (LA77_0==CR) ) {
            	    	            int LA77_1 = input.LA(2);

            	    	            if ( (LA77_1==CHARC) ) {
            	    	                alt77=1;
            	    	            }


            	    	        }


            	    	        switch (alt77) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:509:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1367);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop77;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop78;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_adm"



    // $ANTLR start "body_p_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:513:1: body_p_fac : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ ;
    public final void body_p_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:513:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:514:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_fac1387);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:514:10: ( line_c )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==CR) ) {
                    int LA80_1 = input.LA(2);

                    if ( (LA80_1==CHARC) ) {
                        alt80=1;
                    }


                }


                switch (alt80) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:514:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_fac1390);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:515:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==CR) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==CHARA) ) {
                    alt84=1;
                }
            }
            switch (alt84) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:515:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
                    {
                    pushFollow(FOLLOW_line_ap_in_body_p_fac1397);
                    line_ap();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:515:12: ( line_c )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==CR) ) {
                            int LA81_1 = input.LA(2);

                            if ( (LA81_1==CHARC) ) {
                                alt81=1;
                            }


                        }


                        switch (alt81) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:515:13: line_c
                    	    {
                    	    pushFollow(FOLLOW_line_c_in_body_p_fac1400);
                    	    line_c();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:4: ( line_ac ( line_c )* )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( (LA83_0==CR) ) {
                            int LA83_1 = input.LA(2);

                            if ( (LA83_1==CHARA) ) {
                                alt83=1;
                            }


                        }


                        switch (alt83) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:5: line_ac ( line_c )*
                    	    {
                    	    pushFollow(FOLLOW_line_ac_in_body_p_fac1408);
                    	    line_ac();

                    	    state._fsp--;


                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:13: ( line_c )*
                    	    loop82:
                    	    do {
                    	        int alt82=2;
                    	        int LA82_0 = input.LA(1);

                    	        if ( (LA82_0==CR) ) {
                    	            int LA82_1 = input.LA(2);

                    	            if ( (LA82_1==CHARC) ) {
                    	                alt82=1;
                    	            }


                    	        }


                    	        switch (alt82) {
                    	    	case 1 :
                    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:14: line_c
                    	    	    {
                    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1411);
                    	    	    line_c();

                    	    	    state._fsp--;


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop82;
                    	        }
                    	    } while (true);


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:518:3: ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            int cnt90=0;
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==CR) ) {
                    int LA90_1 = input.LA(2);

                    if ( (LA90_1==CHARF) ) {
                        alt90=1;
                    }


                }


                switch (alt90) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:518:4: line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_fac_in_body_p_fac1425);
            	    line_fac();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:518:13: ( line_c )*
            	    loop85:
            	    do {
            	        int alt85=2;
            	        int LA85_0 = input.LA(1);

            	        if ( (LA85_0==CR) ) {
            	            int LA85_1 = input.LA(2);

            	            if ( (LA85_1==CHARC) ) {
            	                alt85=1;
            	            }


            	        }


            	        switch (alt85) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:518:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1428);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop85;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:519:4: ( line_reg ( line_c )* )*
            	    loop87:
            	    do {
            	        int alt87=2;
            	        int LA87_0 = input.LA(1);

            	        if ( (LA87_0==CR) ) {
            	            int LA87_1 = input.LA(2);

            	            if ( (LA87_1==CHARR) ) {
            	                alt87=1;
            	            }


            	        }


            	        switch (alt87) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:519:5: line_reg ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_reg_in_body_p_fac1436);
            	    	    line_reg();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:519:14: ( line_c )*
            	    	    loop86:
            	    	    do {
            	    	        int alt86=2;
            	    	        int LA86_0 = input.LA(1);

            	    	        if ( (LA86_0==CR) ) {
            	    	            int LA86_1 = input.LA(2);

            	    	            if ( (LA86_1==CHARC) ) {
            	    	                alt86=1;
            	    	            }


            	    	        }


            	    	        switch (alt86) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:519:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1439);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop86;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop87;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:520:4: ( line_act ( line_c )* )*
            	    loop89:
            	    do {
            	        int alt89=2;
            	        int LA89_0 = input.LA(1);

            	        if ( (LA89_0==CR) ) {
            	            int LA89_1 = input.LA(2);

            	            if ( (LA89_1==CHARA) ) {
            	                alt89=1;
            	            }


            	        }


            	        switch (alt89) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:520:5: line_act ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_act_in_body_p_fac1449);
            	    	    line_act();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:520:14: ( line_c )*
            	    	    loop88:
            	    	    do {
            	    	        int alt88=2;
            	    	        int LA88_0 = input.LA(1);

            	    	        if ( (LA88_0==CR) ) {
            	    	            int LA88_1 = input.LA(2);

            	    	            if ( (LA88_1==CHARC) ) {
            	    	                alt88=1;
            	    	            }


            	    	        }


            	    	        switch (alt88) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:520:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1452);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop88;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop89;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt90 >= 1 ) break loop90;
                        EarlyExitException eee =
                            new EarlyExitException(90, input);
                        throw eee;
                }
                cnt90++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_fac"



    // $ANTLR start "body_p_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:524:1: body_p_reg : line_p ( line_c )* ( line_reg ( line_c )* )+ ;
    public final void body_p_reg() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:524:12: ( line_p ( line_c )* ( line_reg ( line_c )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:525:3: line_p ( line_c )* ( line_reg ( line_c )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_reg1472);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:525:10: ( line_c )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==CR) ) {
                    int LA91_1 = input.LA(2);

                    if ( (LA91_1==CHARC) ) {
                        alt91=1;
                    }


                }


                switch (alt91) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:525:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_reg1475);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:3: ( line_reg ( line_c )* )+
            int cnt93=0;
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==CR) ) {
                    int LA93_1 = input.LA(2);

                    if ( (LA93_1==CHARR) ) {
                        alt93=1;
                    }


                }


                switch (alt93) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:4: line_reg ( line_c )*
            	    {
            	    pushFollow(FOLLOW_line_reg_in_body_p_reg1482);
            	    line_reg();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:13: ( line_c )*
            	    loop92:
            	    do {
            	        int alt92=2;
            	        int LA92_0 = input.LA(1);

            	        if ( (LA92_0==CR) ) {
            	            int LA92_1 = input.LA(2);

            	            if ( (LA92_1==CHARC) ) {
            	                alt92=1;
            	            }


            	        }


            	        switch (alt92) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_reg1485);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop92;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt93 >= 1 ) break loop93;
                        EarlyExitException eee =
                            new EarlyExitException(93, input);
                        throw eee;
                }
                cnt93++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_reg"



    // $ANTLR start "start_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:531:1: start_line_h : delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] ;
    public final void start_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:531:14: ( delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:532:3: delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h1504);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1508); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1510);
            st_sized_optionnal("H.3", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1515); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1517);
            st_sized_optionnal("H.4", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1522); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1524);
            spec_sized_mult_lvl1_st_mandatory_2("H.5", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1529); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1531);
            spec_sized_mult_lvl1_st_optionnal_6("H.6", 100);

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h"



    // $ANTLR start "start_line_h_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:538:1: start_line_h_crapy : delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] ;
    public final void start_line_h_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:538:20: ( delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:539:3: delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h_crapy1544);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1548); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1550);
            crapy_repet("H.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1556); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1558);
            crapy_repet("H.4");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1563); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1565);
            crapy_repet("H.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h_crapy1570); 

            pushFollow(FOLLOW_crapy_repet_in_start_line_h_crapy1572);
            crapy_repet("H.6");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h_crapy"



    // $ANTLR start "midd_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:546:1: midd_line_h : DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] ;
    public final void midd_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:546:13: ( DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:547:3: DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"]
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1586); 

            pushFollow(FOLLOW_spec_sized_tn_in_midd_line_h1588);
            spec_sized_tn("H.8", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1593); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1595);
            st_sized_optionnal("H.9", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1600); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1602);
            spec_sized_mult_lvl1_st_mandatory_2("H.10", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1607); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1609);
            st_sized_optionnal("H.11", 80);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1614); 

            pushFollow(FOLLOW_spec_const_7_12_in_midd_line_h1616);
            spec_const_7_12("H.12");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h"



    // $ANTLR start "midd_line_h_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:553:1: midd_line_h_crapy : ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void midd_line_h_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:553:19: ( ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:554:3: ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:554:3: ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==DELIMITER1) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:554:4: DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1628); 

                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1630);
                    crapy_repet("H.8");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:555:4: ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==DELIMITER1) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:555:5: DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1637); 

                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1639);
                            crapy_repet("H.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:556:5: ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt99=2;
                            int LA99_0 = input.LA(1);

                            if ( (LA99_0==DELIMITER1) ) {
                                alt99=1;
                            }
                            switch (alt99) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:556:6: DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1647); 

                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1649);
                                    crapy_repet("H.10");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:557:6: ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt98=2;
                                    int LA98_0 = input.LA(1);

                                    if ( (LA98_0==DELIMITER1) ) {
                                        alt98=1;
                                    }
                                    switch (alt98) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:557:7: DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1658); 

                                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1660);
                                            crapy_repet("H.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:558:7: ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            int alt97=2;
                                            int LA97_0 = input.LA(1);

                                            if ( (LA97_0==DELIMITER1) ) {
                                                alt97=1;
                                            }
                                            switch (alt97) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:558:8: DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1670); 

                                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1672);
                                                    crapy_repet("H.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:559:8: ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    int alt96=2;
                                                    int LA96_0 = input.LA(1);

                                                    if ( (LA96_0==DELIMITER1) ) {
                                                        alt96=1;
                                                    }
                                                    switch (alt96) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:559:9: DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1683); 

                                                            pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1685);
                                                            crapy_repet("H.13");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:560:9: ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            int alt95=2;
                                                            int LA95_0 = input.LA(1);

                                                            if ( (LA95_0==DELIMITER1) ) {
                                                                alt95=1;
                                                            }
                                                            switch (alt95) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:560:10: DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1697); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_midd_line_h_crapy1699);
                                                                    crapy_repet("H.14");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:561:10: ( DELIMITER1 )?
                                                                    int alt94=2;
                                                                    int LA94_0 = input.LA(1);

                                                                    if ( (LA94_0==DELIMITER1) ) {
                                                                        alt94=1;
                                                                    }
                                                                    switch (alt94) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:561:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h_crapy1711); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h_crapy"



    // $ANTLR start "line_h2_2_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:568:1: line_h2_2_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:570:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:571:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_oru1749);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1753); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1755);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_oru1760);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1764); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1766);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1771); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1773);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:576:3: ( DELIMITER1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==DELIMITER1) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:576:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1778); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_oru"



    // $ANTLR start "line_h2_1_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:578:1: line_h2_1_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:580:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:581:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_oru1797);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1801); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1803);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_oru1808);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1812); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1814);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1819); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1821);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:586:3: ( DELIMITER1 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==DELIMITER1) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:586:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1826); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_oru"



    // $ANTLR start "line_h2_0_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:588:1: line_h2_0_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:590:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:591:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_oru1845);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1849); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1851);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_oru1856);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1860); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1862);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1867); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1869);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:596:3: ( DELIMITER1 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==DELIMITER1) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:596:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1874); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_oru"



    // $ANTLR start "line_h_crapy_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:598:1: line_h_crapy_oru : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:600:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:601:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_oru1893);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_oru1897); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h_crapy_oru1899);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_oru1904);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_oru"



    // $ANTLR start "line_h2_2_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:606:1: line_h2_2_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:608:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:609:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_orm1923);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1927); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1929);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_orm1934);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1938); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1940);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1945); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1947);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:614:3: ( DELIMITER1 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==DELIMITER1) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:614:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1952); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_orm"



    // $ANTLR start "line_h2_1_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:616:1: line_h2_1_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:618:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:619:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_orm1971);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1975); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1977);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_orm1982);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1986); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1988);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1993); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1995);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:624:3: ( DELIMITER1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==DELIMITER1) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:624:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm2000); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_orm"



    // $ANTLR start "line_h2_0_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:626:1: line_h2_0_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:628:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:629:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_orm2019);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm2023); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm2025);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_orm2030);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm2034); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm2036);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm2041); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_orm2043);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:634:3: ( DELIMITER1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==DELIMITER1) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:634:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm2048); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_orm"



    // $ANTLR start "line_h_crapy_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:636:1: line_h_crapy_orm : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:638:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:639:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_orm2067);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_orm2071); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h_crapy_orm2073);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_orm2078);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_orm"



    // $ANTLR start "line_h2_2_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:644:1: line_h2_2_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:646:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:647:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ora2097);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora2101); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora2103);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ora2108);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora2112); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora2114);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora2119); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ora2121);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:652:3: ( DELIMITER1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DELIMITER1) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:652:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora2126); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ora"



    // $ANTLR start "line_h2_1_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:654:1: line_h2_1_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:656:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:657:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ora2145);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora2149); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora2151);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ora2156);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora2160); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora2162);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora2167); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ora2169);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:662:3: ( DELIMITER1 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==DELIMITER1) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:662:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora2174); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ora"



    // $ANTLR start "line_h2_0_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:664:1: line_h2_0_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:666:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:667:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ora2193);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2197); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora2199);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ora2204);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2208); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora2210);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2215); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ora2217);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:672:3: ( DELIMITER1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==DELIMITER1) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:672:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora2222); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ora"



    // $ANTLR start "line_h_crapy_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:674:1: line_h_crapy_ora : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:676:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:677:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_ora2241);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_ora2245); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h_crapy_ora2247);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_ora2252);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_ora"



    // $ANTLR start "line_h2_2_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:682:1: line_h2_2_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:684:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:685:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_adm2271);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2275); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm2277);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_adm2282);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2286); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm2288);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2293); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2295);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:690:3: ( DELIMITER1 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==DELIMITER1) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:690:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2300); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_adm"



    // $ANTLR start "line_h2_1_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:692:1: line_h2_1_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:694:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:695:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_adm2319);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2323); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2325);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_adm2330);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2334); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2336);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2341); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2343);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:700:3: ( DELIMITER1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==DELIMITER1) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:700:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2348); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_adm"



    // $ANTLR start "line_h2_0_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:702:1: line_h2_0_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:704:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:705:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_adm2367);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2371); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2373);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_adm2378);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2382); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2384);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2389); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2391);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:710:3: ( DELIMITER1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==DELIMITER1) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:710:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2396); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_adm"



    // $ANTLR start "line_h_crapy_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:712:1: line_h_crapy_adm : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:714:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:715:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_adm2415);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_adm2419); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h_crapy_adm2421);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_adm2426);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_adm"



    // $ANTLR start "line_h2_2_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:720:1: line_h2_2_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:722:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:723:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_fac2445);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2449); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2451);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_fac2456);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2460); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2462);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2467); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2469);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:728:3: ( DELIMITER1 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==DELIMITER1) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:728:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2474); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_fac"



    // $ANTLR start "line_h2_1_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:730:1: line_h2_1_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:732:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:733:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_fac2493);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2497); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2499);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_fac2504);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2508); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2510);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2515); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2517);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:738:3: ( DELIMITER1 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==DELIMITER1) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:738:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2522); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_fac"



    // $ANTLR start "line_h2_0_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:740:1: line_h2_0_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:742:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:743:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_fac2541);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2545); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2547);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_fac2552);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2556); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2558);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2563); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2565);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:748:3: ( DELIMITER1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==DELIMITER1) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:748:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2570); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_fac"



    // $ANTLR start "line_h_crapy_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:750:1: line_h_crapy_fac : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:752:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:753:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_fac2589);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_fac2593); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h_crapy_fac2595);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_fac2600);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_fac"



    // $ANTLR start "line_h2_2_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:758:1: line_h2_2_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:760:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:761:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_reg2619);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2623); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2625);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_reg2630);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2634); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2636);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2641); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2643);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:766:3: ( DELIMITER1 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==DELIMITER1) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:766:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2648); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_reg"



    // $ANTLR start "line_h2_1_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:768:1: line_h2_1_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:770:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:771:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_reg2667);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2671); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2673);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_reg2678);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2682); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2684);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2689); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2691);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:776:3: ( DELIMITER1 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==DELIMITER1) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:776:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2696); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_reg"



    // $ANTLR start "line_h2_0_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:778:1: line_h2_0_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:780:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:781:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_reg2715);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2719); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2721);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_reg2726);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2730); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2732);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2737); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2739);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:786:3: ( DELIMITER1 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==DELIMITER1) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:786:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2744); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_reg"



    // $ANTLR start "line_h_crapy_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:788:1: line_h_crapy_reg : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:790:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:791:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_reg2763);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_reg2767); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h_crapy_reg2769);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_reg2774);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_reg"



    // $ANTLR start "line_h2_2_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:796:1: line_h2_2_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:798:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:799:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ns2793);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2797); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2799);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ns2804);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2808); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2810);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2815); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2817);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:804:3: ( DELIMITER1 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==DELIMITER1) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:804:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2822); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ns"



    // $ANTLR start "line_h2_1_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:806:1: line_h2_1_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:808:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:809:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ns2841);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2845); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2847);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ns2852);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2856); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2858);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2863); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2865);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:3: ( DELIMITER1 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==DELIMITER1) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2870); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ns"



    // $ANTLR start "line_h2_0_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:816:1: line_h2_0_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:818:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:819:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ns2889);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2893); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2895);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ns2900);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2904); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2906);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2911); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2913);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:3: ( DELIMITER1 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==DELIMITER1) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2918); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ns"



    // $ANTLR start "line_h_crapy_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:826:1: line_h_crapy_ns : start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy ;
    public final void line_h_crapy_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:828:23: ( start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:829:3: start_line_h_crapy DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h_crapy
            {
            pushFollow(FOLLOW_start_line_h_crapy_in_line_h_crapy_ns2937);
            start_line_h_crapy();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy_ns2941); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h_crapy_ns2943);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_crapy_in_line_h_crapy_ns2948);
            midd_line_h_crapy();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy_ns"



    // $ANTLR start "line_ap"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:834:1: line_ap : ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_ap() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:836:23: ( ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:837:3: ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:837:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:837:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap2968); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap2970); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap2972); 

            }


            startElement("AP.1");content("AP");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2979); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap2981);
            nm_integer_sized_mandatory("AP.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2986); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2988);
            st_sized_mandatory("AP.3", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2993); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2995);
            ts_sized_optionnal("AP.4", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3000); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap3002);
            ts_sized_optionnal("AP.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3007); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap3009);
            nm_integer_sized_mandatory("AP.6", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3014); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap3016);
            st_sized_mandatory("AP.7", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3021); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3023);
            nm_sized_mandatory("AP.8", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3028); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3030);
            nm_sized_mandatory("AP.9", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3035); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3037);
            nm_sized_mandatory("AP.10", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3042); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3044);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3049); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3051);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3056); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap3058);
            st_sized_mandatory("AP.12", 1);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3063); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap3065);
            st_sized_mandatory("AP.13", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3070); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap3072);
            spec_sized_mult_lvl1_st_mandatory_6("AP.14", 48);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3077); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ap3079);
            st_sized_optionnal("AP.15", 24);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3084); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap3086);
            nm_sized_mandatory("AP.16", 6);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:854:3: ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==DELIMITER1) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:854:4: DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3092); 

                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_ap3094);
                    nm_sized_optionnal("AP.17", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:855:4: ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==DELIMITER1) ) {
                        alt129=1;
                    }
                    switch (alt129) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:855:5: DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3101); 

                            pushFollow(FOLLOW_spec_on_optionnal_in_line_ap3103);
                            spec_on_optionnal("AP.18");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:856:5: ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            int alt128=2;
                            int LA128_0 = input.LA(1);

                            if ( (LA128_0==DELIMITER1) ) {
                                alt128=1;
                            }
                            switch (alt128) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:856:6: DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3111); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap3113);
                                    ts_sized_optionnal("AP.19", 8);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:6: ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    int alt127=2;
                                    int LA127_0 = input.LA(1);

                                    if ( (LA127_0==DELIMITER1) ) {
                                        alt127=1;
                                    }
                                    switch (alt127) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:7: DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3122); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap3124);
                                            ts_sized_optionnal("AP.20", 8);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:858:7: ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            int alt126=2;
                                            int LA126_0 = input.LA(1);

                                            if ( (LA126_0==DELIMITER1) ) {
                                                alt126=1;
                                            }
                                            switch (alt126) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:858:8: DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3134); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ap3136);
                                                    st_sized_optionnal("AP.21", 30);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:859:8: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    int alt125=2;
                                                    int LA125_0 = input.LA(1);

                                                    if ( (LA125_0==DELIMITER1) ) {
                                                        alt125=1;
                                                    }
                                                    switch (alt125) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:859:9: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3147); 

                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap3149);
                                                            spec_sized_mult_lvl1_st_optionnal_6("AP.22", 200);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:860:9: ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            int alt124=2;
                                                            int LA124_0 = input.LA(1);

                                                            if ( (LA124_0==DELIMITER1) ) {
                                                                alt124=1;
                                                            }
                                                            switch (alt124) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:860:10: DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3161); 

                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap3163);
                                                                    ts_sized_optionnal("AP.23", 15);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:861:10: ( DELIMITER1 )?
                                                                    int alt123=2;
                                                                    int LA123_0 = input.LA(1);

                                                                    if ( (LA123_0==DELIMITER1) ) {
                                                                        alt123=1;
                                                                    }
                                                                    switch (alt123) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:861:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap3175); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap"



    // $ANTLR start "line_ap_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:863:1: line_ap_crapy : ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ap_crapy() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:865:23: ( ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:866:3: ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:866:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:866:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap_crapy3209); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap_crapy3211); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap_crapy3213); 

            }


            startElement("AP.1");content("AP");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:867:3: ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==DELIMITER1) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:867:4: DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3221); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3223);
                    crapy_repet("AP.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:868:4: ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==DELIMITER1) ) {
                        alt153=1;
                    }
                    switch (alt153) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:868:5: DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3230); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3232);
                            crapy_repet("AP.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:869:5: ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt152=2;
                            int LA152_0 = input.LA(1);

                            if ( (LA152_0==DELIMITER1) ) {
                                alt152=1;
                            }
                            switch (alt152) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:869:6: DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3240); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3242);
                                    crapy_repet("AP.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:6: ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt151=2;
                                    int LA151_0 = input.LA(1);

                                    if ( (LA151_0==DELIMITER1) ) {
                                        alt151=1;
                                    }
                                    switch (alt151) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:7: DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3251); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3253);
                                            crapy_repet("AP.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:871:7: ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt150=2;
                                            int LA150_0 = input.LA(1);

                                            if ( (LA150_0==DELIMITER1) ) {
                                                alt150=1;
                                            }
                                            switch (alt150) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:871:8: DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3263); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3265);
                                                    crapy_repet("AP.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:872:8: ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt149=2;
                                                    int LA149_0 = input.LA(1);

                                                    if ( (LA149_0==DELIMITER1) ) {
                                                        alt149=1;
                                                    }
                                                    switch (alt149) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:872:9: DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3276); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3278);
                                                            crapy_repet("AP.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:9: ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt148=2;
                                                            int LA148_0 = input.LA(1);

                                                            if ( (LA148_0==DELIMITER1) ) {
                                                                alt148=1;
                                                            }
                                                            switch (alt148) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:10: DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3290); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3292);
                                                                    crapy_repet("AP.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:874:10: ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt147=2;
                                                                    int LA147_0 = input.LA(1);

                                                                    if ( (LA147_0==DELIMITER1) ) {
                                                                        alt147=1;
                                                                    }
                                                                    switch (alt147) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:874:11: DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3305); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3307);
                                                                            crapy_repet("AP.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:875:11: ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt146=2;
                                                                            int LA146_0 = input.LA(1);

                                                                            if ( (LA146_0==DELIMITER1) ) {
                                                                                alt146=1;
                                                                            }
                                                                            switch (alt146) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:875:12: DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3321); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3323);
                                                                                    crapy_repet("AP.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:876:12: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt145=2;
                                                                                    int LA145_0 = input.LA(1);

                                                                                    if ( (LA145_0==DELIMITER1) ) {
                                                                                        alt145=1;
                                                                                    }
                                                                                    switch (alt145) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:876:13: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3338); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3340);
                                                                                            crapy_repet("AP.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:877:13: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt144=2;
                                                                                            int LA144_0 = input.LA(1);

                                                                                            if ( (LA144_0==DELIMITER1) ) {
                                                                                                alt144=1;
                                                                                            }
                                                                                            switch (alt144) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:877:14: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3356); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3358);
                                                                                                    crapy_repet("AP.11");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:878:14: ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt143=2;
                                                                                                    int LA143_0 = input.LA(1);

                                                                                                    if ( (LA143_0==DELIMITER1) ) {
                                                                                                        alt143=1;
                                                                                                    }
                                                                                                    switch (alt143) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:878:15: DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3375); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3377);
                                                                                                            crapy_repet("AP.12");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:879:15: ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt142=2;
                                                                                                            int LA142_0 = input.LA(1);

                                                                                                            if ( (LA142_0==DELIMITER1) ) {
                                                                                                                alt142=1;
                                                                                                            }
                                                                                                            switch (alt142) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:879:16: DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3395); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3397);
                                                                                                                    crapy_repet("AP.13");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:880:16: ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt141=2;
                                                                                                                    int LA141_0 = input.LA(1);

                                                                                                                    if ( (LA141_0==DELIMITER1) ) {
                                                                                                                        alt141=1;
                                                                                                                    }
                                                                                                                    switch (alt141) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:880:17: DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3416); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3418);
                                                                                                                            crapy_repet("AP.14");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:881:17: ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt140=2;
                                                                                                                            int LA140_0 = input.LA(1);

                                                                                                                            if ( (LA140_0==DELIMITER1) ) {
                                                                                                                                alt140=1;
                                                                                                                            }
                                                                                                                            switch (alt140) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:881:18: DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3438); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3440);
                                                                                                                                    crapy_repet("AP.15");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:882:18: ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt139=2;
                                                                                                                                    int LA139_0 = input.LA(1);

                                                                                                                                    if ( (LA139_0==DELIMITER1) ) {
                                                                                                                                        alt139=1;
                                                                                                                                    }
                                                                                                                                    switch (alt139) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:882:19: DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3461); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3463);
                                                                                                                                            crapy_repet("AP.16");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:883:19: ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            int alt138=2;
                                                                                                                                            int LA138_0 = input.LA(1);

                                                                                                                                            if ( (LA138_0==DELIMITER1) ) {
                                                                                                                                                alt138=1;
                                                                                                                                            }
                                                                                                                                            switch (alt138) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:883:20: DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3485); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3487);
                                                                                                                                                    crapy_repet("AP.17");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:20: ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    int alt137=2;
                                                                                                                                                    int LA137_0 = input.LA(1);

                                                                                                                                                    if ( (LA137_0==DELIMITER1) ) {
                                                                                                                                                        alt137=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt137) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:21: DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3510); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3512);
                                                                                                                                                            crapy_repet("AP.18");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:885:21: ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            int alt136=2;
                                                                                                                                                            int LA136_0 = input.LA(1);

                                                                                                                                                            if ( (LA136_0==DELIMITER1) ) {
                                                                                                                                                                alt136=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt136) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:885:22: DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3536); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3538);
                                                                                                                                                                    crapy_repet("AP.19");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:886:22: ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    int alt135=2;
                                                                                                                                                                    int LA135_0 = input.LA(1);

                                                                                                                                                                    if ( (LA135_0==DELIMITER1) ) {
                                                                                                                                                                        alt135=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt135) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:886:23: DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3563); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3565);
                                                                                                                                                                            crapy_repet("AP.20");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:887:23: ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            int alt134=2;
                                                                                                                                                                            int LA134_0 = input.LA(1);

                                                                                                                                                                            if ( (LA134_0==DELIMITER1) ) {
                                                                                                                                                                                alt134=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt134) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:887:24: DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3591); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3593);
                                                                                                                                                                                    crapy_repet("AP.21");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:888:24: ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    int alt133=2;
                                                                                                                                                                                    int LA133_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA133_0==DELIMITER1) ) {
                                                                                                                                                                                        alt133=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt133) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:888:25: DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3620); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3622);
                                                                                                                                                                                            crapy_repet("AP.22");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:25: ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            int alt132=2;
                                                                                                                                                                                            int LA132_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA132_0==DELIMITER1) ) {
                                                                                                                                                                                                alt132=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt132) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:26: DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3650); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3652);
                                                                                                                                                                                                    crapy_repet("AP.23");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:26: ( DELIMITER1 )?
                                                                                                                                                                                                    int alt131=2;
                                                                                                                                                                                                    int LA131_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA131_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt131=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt131) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:26: DELIMITER1
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3680); 

                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap_crapy"



    // $ANTLR start "line_ac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:893:1: line_ac : ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? ;
    public final void line_ac() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:895:23: ( ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:3: ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac3747); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac3749); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac3751); 

            }


            startElement("AC.1");content("AC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3758); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ac3760);
            nm_integer_sized_mandatory("AC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3765); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3767);
            st_sized_mandatory("AC.3", 9);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3772); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3774);
            st_sized_mandatory("AC.4", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3779); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ac3781);
            ts_sized_optionnal("AC.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3786); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_ac3788);
            ts_sized_mandatory("AC.6", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3793); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3795);
            st_sized_optionnal("AC.7", 28);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3800); 

            pushFollow(FOLLOW_spec_ac_8_in_line_ac3802);
            spec_ac_8("AC.8", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:904:3: ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==DELIMITER1) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:904:4: DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3808); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3810);
                    st_sized_optionnal("AC.9", 40);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:905:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==DELIMITER1) ) {
                        alt156=1;
                    }
                    switch (alt156) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:905:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3817); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3819);
                            spec_sized_mult_lvl1_st_optionnal_6("AC.10", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:5: ( DELIMITER1 )?
                            int alt155=2;
                            int LA155_0 = input.LA(1);

                            if ( (LA155_0==DELIMITER1) ) {
                                alt155=1;
                            }
                            switch (alt155) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3826); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac"



    // $ANTLR start "line_ac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:908:1: line_ac_crapy : ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ac_crapy() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:910:23: ( ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:3: ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac_crapy3850); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac_crapy3852); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac_crapy3854); 

            }


            startElement("AC.1");content("AC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:3: ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==DELIMITER1) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:4: DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3862); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3864);
                    crapy_repet("AC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:4: ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==DELIMITER1) ) {
                        alt166=1;
                    }
                    switch (alt166) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:5: DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3871); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3873);
                            crapy_repet("AC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:914:5: ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            int alt165=2;
                            int LA165_0 = input.LA(1);

                            if ( (LA165_0==DELIMITER1) ) {
                                alt165=1;
                            }
                            switch (alt165) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:914:6: DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3881); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3883);
                                    crapy_repet("AC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:915:6: ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    int alt164=2;
                                    int LA164_0 = input.LA(1);

                                    if ( (LA164_0==DELIMITER1) ) {
                                        alt164=1;
                                    }
                                    switch (alt164) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:915:7: DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3892); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3894);
                                            crapy_repet("AC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:916:7: ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            int alt163=2;
                                            int LA163_0 = input.LA(1);

                                            if ( (LA163_0==DELIMITER1) ) {
                                                alt163=1;
                                            }
                                            switch (alt163) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:916:8: DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3904); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3906);
                                                    crapy_repet("AC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:917:8: ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    int alt162=2;
                                                    int LA162_0 = input.LA(1);

                                                    if ( (LA162_0==DELIMITER1) ) {
                                                        alt162=1;
                                                    }
                                                    switch (alt162) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:917:9: DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3917); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3919);
                                                            crapy_repet("AC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:918:9: ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            int alt161=2;
                                                            int LA161_0 = input.LA(1);

                                                            if ( (LA161_0==DELIMITER1) ) {
                                                                alt161=1;
                                                            }
                                                            switch (alt161) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:918:10: DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3931); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3933);
                                                                    crapy_repet("AC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:919:10: ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    int alt160=2;
                                                                    int LA160_0 = input.LA(1);

                                                                    if ( (LA160_0==DELIMITER1) ) {
                                                                        alt160=1;
                                                                    }
                                                                    switch (alt160) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:919:11: DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3946); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3948);
                                                                            crapy_repet("AC.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:11: ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            int alt159=2;
                                                                            int LA159_0 = input.LA(1);

                                                                            if ( (LA159_0==DELIMITER1) ) {
                                                                                alt159=1;
                                                                            }
                                                                            switch (alt159) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:12: DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3962); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3964);
                                                                                    crapy_repet("AC.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:12: ( DELIMITER1 )?
                                                                                    int alt158=2;
                                                                                    int LA158_0 = input.LA(1);

                                                                                    if ( (LA158_0==DELIMITER1) ) {
                                                                                        alt158=1;
                                                                                    }
                                                                                    switch (alt158) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:12: DELIMITER1
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3978); 

                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac_crapy"



    // $ANTLR start "line_act"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:924:1: line_act : ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? ;
    public final void line_act() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:926:23: ( ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:927:3: ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:927:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:927:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act4017); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act4019); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act4021); 

            match(input,CHART,FOLLOW_CHART_in_line_act4023); 

            }


            startElement("ACT.1");content("ACT");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4030); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_act4032);
            nm_integer_sized_mandatory("ACT.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4037); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_act4039);
            st_sized_mandatory("ACT.3", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4044); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act4046);
            nm_sized_mandatory("ACT.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4051); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act4053);
            nm_sized_mandatory("ACT.5", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4058); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act4060);
            nm_sized_mandatory("ACT.6", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4065); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act4067);
            st_sized_optionnal("ACT.7", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4072); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act4074);
            st_sized_optionnal("ACT.8", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4079); 

            pushFollow(FOLLOW_spec_fac_6_in_line_act4081);
            spec_fac_6("ACT.9", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4086); 

            pushFollow(FOLLOW_spec_act_10_in_line_act4088);
            spec_act_10("ACT.10", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4093); 

            pushFollow(FOLLOW_spec_act_11_in_line_act4095);
            spec_act_11("ACT.11");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:3: ( DELIMITER1 )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==DELIMITER1) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act4100); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act"



    // $ANTLR start "line_act_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:940:1: line_act_crapy : ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_act_crapy() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:942:23: ( ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:3: ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act_crapy4120); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act_crapy4122); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act_crapy4124); 

            match(input,CHART,FOLLOW_CHART_in_line_act_crapy4126); 

            }


            startElement("ACT.1");content("ACT");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:3: ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==DELIMITER1) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:4: DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4134); 

                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4136);
                    crapy_repet("ACT.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:4: ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==DELIMITER1) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:5: DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4143); 

                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4145);
                            crapy_repet("ACT.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:946:5: ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt177=2;
                            int LA177_0 = input.LA(1);

                            if ( (LA177_0==DELIMITER1) ) {
                                alt177=1;
                            }
                            switch (alt177) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:946:6: DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4153); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4155);
                                    crapy_repet("ACT.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:947:6: ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt176=2;
                                    int LA176_0 = input.LA(1);

                                    if ( (LA176_0==DELIMITER1) ) {
                                        alt176=1;
                                    }
                                    switch (alt176) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:947:7: DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4164); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4166);
                                            crapy_repet("ACT.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:7: ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt175=2;
                                            int LA175_0 = input.LA(1);

                                            if ( (LA175_0==DELIMITER1) ) {
                                                alt175=1;
                                            }
                                            switch (alt175) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:8: DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4176); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4178);
                                                    crapy_repet("ACT.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:8: ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt174=2;
                                                    int LA174_0 = input.LA(1);

                                                    if ( (LA174_0==DELIMITER1) ) {
                                                        alt174=1;
                                                    }
                                                    switch (alt174) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:9: DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4189); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4191);
                                                            crapy_repet("ACT.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:9: ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            int alt173=2;
                                                            int LA173_0 = input.LA(1);

                                                            if ( (LA173_0==DELIMITER1) ) {
                                                                alt173=1;
                                                            }
                                                            switch (alt173) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:10: DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4203); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4205);
                                                                    crapy_repet("ACT.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:951:10: ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    int alt172=2;
                                                                    int LA172_0 = input.LA(1);

                                                                    if ( (LA172_0==DELIMITER1) ) {
                                                                        alt172=1;
                                                                    }
                                                                    switch (alt172) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:951:11: DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4218); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4220);
                                                                            crapy_repet("ACT.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:11: ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            int alt171=2;
                                                                            int LA171_0 = input.LA(1);

                                                                            if ( (LA171_0==DELIMITER1) ) {
                                                                                alt171=1;
                                                                            }
                                                                            switch (alt171) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:12: DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4234); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4236);
                                                                                    crapy_repet("ACT.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:953:12: ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    int alt170=2;
                                                                                    int LA170_0 = input.LA(1);

                                                                                    if ( (LA170_0==DELIMITER1) ) {
                                                                                        alt170=1;
                                                                                    }
                                                                                    switch (alt170) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:953:13: DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4251); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy4253);
                                                                                            crapy_repet("ACT.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:13: ( DELIMITER1 )?
                                                                                            int alt169=2;
                                                                                            int LA169_0 = input.LA(1);

                                                                                            if ( (LA169_0==DELIMITER1) ) {
                                                                                                alt169=1;
                                                                                            }
                                                                                            switch (alt169) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:13: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy4268); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act_crapy"



    // $ANTLR start "line_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:957:1: line_fac : ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_fac() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:959:23: ( ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:3: ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac4309); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac4311); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac4313); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac4315); 

            }


            startElement("FAC.1");content("FAC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4322); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_fac4324);
            nm_integer_sized_mandatory("FAC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4329); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac4331);
            st_sized_mandatory("FAC.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4336); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac4338);
            st_sized_mandatory("FAC.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4343); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_fac4345);
            ts_sized_mandatory("FAC.5", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:3: ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==DELIMITER1) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:4: DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4351); 

                    pushFollow(FOLLOW_spec_fac_6_in_line_fac4353);
                    spec_fac_6("FAC.6", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:966:4: ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==DELIMITER1) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:966:5: DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4360); 

                            pushFollow(FOLLOW_spec_fac_6_in_line_fac4362);
                            spec_fac_6("FAC.7", 60);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:967:5: ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            int alt181=2;
                            int LA181_0 = input.LA(1);

                            if ( (LA181_0==DELIMITER1) ) {
                                alt181=1;
                            }
                            switch (alt181) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:967:6: DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4370); 

                                    pushFollow(FOLLOW_spec_on_optionnal_in_line_fac4372);
                                    spec_on_optionnal("FAC.8");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:968:6: ( DELIMITER1 )?
                                    int alt180=2;
                                    int LA180_0 = input.LA(1);

                                    if ( (LA180_0==DELIMITER1) ) {
                                        alt180=1;
                                    }
                                    switch (alt180) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:968:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac4380); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac"



    // $ANTLR start "line_fac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:970:1: line_fac_crapy : ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_fac_crapy() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:972:23: ( ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:973:3: ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:973:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:973:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac_crapy4408); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac_crapy4410); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac_crapy4412); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac_crapy4414); 

            }


            startElement("FAC.1");content("FAC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:974:3: ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==DELIMITER1) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:974:4: DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4422); 

                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4424);
                    crapy_repet("FAC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:975:4: ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==DELIMITER1) ) {
                        alt190=1;
                    }
                    switch (alt190) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:975:5: DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4431); 

                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4433);
                            crapy_repet("FAC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:976:5: ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt189=2;
                            int LA189_0 = input.LA(1);

                            if ( (LA189_0==DELIMITER1) ) {
                                alt189=1;
                            }
                            switch (alt189) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:976:6: DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4441); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4443);
                                    crapy_repet("FAC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:977:6: ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt188=2;
                                    int LA188_0 = input.LA(1);

                                    if ( (LA188_0==DELIMITER1) ) {
                                        alt188=1;
                                    }
                                    switch (alt188) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:977:7: DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4452); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4454);
                                            crapy_repet("FAC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:978:7: ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt187=2;
                                            int LA187_0 = input.LA(1);

                                            if ( (LA187_0==DELIMITER1) ) {
                                                alt187=1;
                                            }
                                            switch (alt187) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:978:8: DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4464); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4466);
                                                    crapy_repet("FAC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:979:8: ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    int alt186=2;
                                                    int LA186_0 = input.LA(1);

                                                    if ( (LA186_0==DELIMITER1) ) {
                                                        alt186=1;
                                                    }
                                                    switch (alt186) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:979:9: DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4477); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4479);
                                                            crapy_repet("FAC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:9: ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            int alt185=2;
                                                            int LA185_0 = input.LA(1);

                                                            if ( (LA185_0==DELIMITER1) ) {
                                                                alt185=1;
                                                            }
                                                            switch (alt185) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:10: DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4491); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4493);
                                                                    crapy_repet("FAC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:981:10: ( DELIMITER1 )?
                                                                    int alt184=2;
                                                                    int LA184_0 = input.LA(1);

                                                                    if ( (LA184_0==DELIMITER1) ) {
                                                                        alt184=1;
                                                                    }
                                                                    switch (alt184) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:981:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4505); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac_crapy"



    // $ANTLR start "line_p"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:984:1: line_p : ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:986:23: ( ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:3: ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p4540); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p4542); 

            }


            startElement("P.1");content("P");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4549); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_p4551);
            nm_integer_sized_mandatory("P.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4556); 

            pushFollow(FOLLOW_spec_sized_8_3_in_line_p4558);
            spec_sized_8_3("P.3", 36);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4563); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4565);
            st_sized_optionnal("P.4", 16);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:3: ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==DELIMITER1) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:4: DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4571); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4573);
                    st_sized_optionnal("P.5", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt225=2;
                    int LA225_0 = input.LA(1);

                    if ( (LA225_0==DELIMITER1) ) {
                        alt225=1;
                    }
                    switch (alt225) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4580); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4582);
                            spec_sized_mult_lvl1_st_optionnal_6("P.6", 48);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:5: ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt224=2;
                            int LA224_0 = input.LA(1);

                            if ( (LA224_0==DELIMITER1) ) {
                                alt224=1;
                            }
                            switch (alt224) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:6: DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4590); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4592);
                                    st_sized_optionnal("P.7", 24);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:994:6: ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt223=2;
                                    int LA223_0 = input.LA(1);

                                    if ( (LA223_0==DELIMITER1) ) {
                                        alt223=1;
                                    }
                                    switch (alt223) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:994:7: DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4601); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4603);
                                            ts_sized_optionnal("P.8", 26);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:995:7: ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt222=2;
                                            int LA222_0 = input.LA(1);

                                            if ( (LA222_0==DELIMITER1) ) {
                                                alt222=1;
                                            }
                                            switch (alt222) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:995:8: DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4613); 

                                                    pushFollow(FOLLOW_spec_const_sexe_in_line_p4615);
                                                    spec_const_sexe("P.9");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:996:8: ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt221=2;
                                                    int LA221_0 = input.LA(1);

                                                    if ( (LA221_0==DELIMITER1) ) {
                                                        alt221=1;
                                                    }
                                                    switch (alt221) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:996:9: DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4626); 

                                                            pushFollow(FOLLOW_spec_const_race_in_line_p4628);
                                                            spec_const_race("P.10");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:997:9: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt220=2;
                                                            int LA220_0 = input.LA(1);

                                                            if ( (LA220_0==DELIMITER1) ) {
                                                                alt220=1;
                                                            }
                                                            switch (alt220) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:997:10: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4640); 

                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4642);
                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.11", 200);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:998:10: ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt219=2;
                                                                    int LA219_0 = input.LA(1);

                                                                    if ( (LA219_0==DELIMITER1) ) {
                                                                        alt219=1;
                                                                    }
                                                                    switch (alt219) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:998:11: DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4655); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4657);
                                                                            st_sized_optionnal("P.12", 120);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:11: ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt218=2;
                                                                            int LA218_0 = input.LA(1);

                                                                            if ( (LA218_0==DELIMITER1) ) {
                                                                                alt218=1;
                                                                            }
                                                                            switch (alt218) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:12: DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4671); 

                                                                                    pushFollow(FOLLOW_spec_sized_tn_in_line_p4673);
                                                                                    spec_sized_tn("P.13", 40);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:12: ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt217=2;
                                                                                    int LA217_0 = input.LA(1);

                                                                                    if ( (LA217_0==DELIMITER1) ) {
                                                                                        alt217=1;
                                                                                    }
                                                                                    switch (alt217) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:13: DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4712); 

                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_p4714);
                                                                                            spec_sized_cna("P.14", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:51: ( REPETITEUR spec_sized_cna[\"P.14\", 60] )*
                                                                                            loop192:
                                                                                            do {
                                                                                                int alt192=2;
                                                                                                int LA192_0 = input.LA(1);

                                                                                                if ( (LA192_0==REPETITEUR) ) {
                                                                                                    alt192=1;
                                                                                                }


                                                                                                switch (alt192) {
                                                                                            	case 1 :
                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1002:52: REPETITEUR spec_sized_cna[\"P.14\", 60]
                                                                                            	    {
                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4718); 

                                                                                            	    pushFollow(FOLLOW_spec_sized_cna_in_line_p4720);
                                                                                            	    spec_sized_cna("P.14", 60);

                                                                                            	    state._fsp--;


                                                                                            	    }
                                                                                            	    break;

                                                                                            	default :
                                                                                            	    break loop192;
                                                                                                }
                                                                                            } while (true);


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:13: ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt216=2;
                                                                                            int LA216_0 = input.LA(1);

                                                                                            if ( (LA216_0==DELIMITER1) ) {
                                                                                                alt216=1;
                                                                                            }
                                                                                            switch (alt216) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:14: DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4738); 

                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4740);
                                                                                                    st_sized_optionnal("P.15", 60);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1004:14: ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt215=2;
                                                                                                    int LA215_0 = input.LA(1);

                                                                                                    if ( (LA215_0==DELIMITER1) ) {
                                                                                                        alt215=1;
                                                                                                    }
                                                                                                    switch (alt215) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1004:15: DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4757); 

                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4759);
                                                                                                            st_sized_optionnal("P.16", 60);

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1006:15: ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt214=2;
                                                                                                            int LA214_0 = input.LA(1);

                                                                                                            if ( (LA214_0==DELIMITER1) ) {
                                                                                                                alt214=1;
                                                                                                            }
                                                                                                            switch (alt214) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1006:16: DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4792); 

                                                                                                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4794);
                                                                                                                    nm_sized_optionnal("P.17", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1008:16: ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt213=2;
                                                                                                                    int LA213_0 = input.LA(1);

                                                                                                                    if ( (LA213_0==DELIMITER1) ) {
                                                                                                                        alt213=1;
                                                                                                                    }
                                                                                                                    switch (alt213) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1008:17: DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4829); 

                                                                                                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4831);
                                                                                                                            nm_sized_optionnal("P.18", 10);

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:17: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt212=2;
                                                                                                                            int LA212_0 = input.LA(1);

                                                                                                                            if ( (LA212_0==DELIMITER1) ) {
                                                                                                                                alt212=1;
                                                                                                                            }
                                                                                                                            switch (alt212) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:18: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4851); 

                                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4853);
                                                                                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:78: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )*
                                                                                                                                    loop193:
                                                                                                                                    do {
                                                                                                                                        int alt193=2;
                                                                                                                                        int LA193_0 = input.LA(1);

                                                                                                                                        if ( (LA193_0==REPETITEUR) ) {
                                                                                                                                            alt193=1;
                                                                                                                                        }


                                                                                                                                        switch (alt193) {
                                                                                                                                    	case 1 :
                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1009:79: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200]
                                                                                                                                    	    {
                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4857); 

                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4859);
                                                                                                                                    	    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    	    state._fsp--;


                                                                                                                                    	    }
                                                                                                                                    	    break;

                                                                                                                                    	default :
                                                                                                                                    	    break loop193;
                                                                                                                                        }
                                                                                                                                    } while (true);


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:18: ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt211=2;
                                                                                                                                    int LA211_0 = input.LA(1);

                                                                                                                                    if ( (LA211_0==DELIMITER1) ) {
                                                                                                                                        alt211=1;
                                                                                                                                    }
                                                                                                                                    switch (alt211) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:19: DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4882); 

                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4884);
                                                                                                                                            st_sized_optionnal("P.20", 200);

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:62: ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )*
                                                                                                                                            loop194:
                                                                                                                                            do {
                                                                                                                                                int alt194=2;
                                                                                                                                                int LA194_0 = input.LA(1);

                                                                                                                                                if ( (LA194_0==REPETITEUR) ) {
                                                                                                                                                    alt194=1;
                                                                                                                                                }


                                                                                                                                                switch (alt194) {
                                                                                                                                            	case 1 :
                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1010:63: REPETITEUR st_sized_optionnal[\"P.20\", 200]
                                                                                                                                            	    {
                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4888); 

                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4890);
                                                                                                                                            	    st_sized_optionnal("P.20", 200);

                                                                                                                                            	    state._fsp--;


                                                                                                                                            	    }
                                                                                                                                            	    break;

                                                                                                                                            	default :
                                                                                                                                            	    break loop194;
                                                                                                                                                }
                                                                                                                                            } while (true);


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1011:19: ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt210=2;
                                                                                                                                            int LA210_0 = input.LA(1);

                                                                                                                                            if ( (LA210_0==DELIMITER1) ) {
                                                                                                                                                alt210=1;
                                                                                                                                            }
                                                                                                                                            switch (alt210) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1011:20: DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4914); 

                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4916);
                                                                                                                                                    st_sized_optionnal("P.21", 200);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1012:20: ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt209=2;
                                                                                                                                                    int LA209_0 = input.LA(1);

                                                                                                                                                    if ( (LA209_0==DELIMITER1) ) {
                                                                                                                                                        alt209=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt209) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1012:21: DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4939); 

                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4941);
                                                                                                                                                            st_sized_optionnal("P.22", 60);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1013:21: ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt208=2;
                                                                                                                                                            int LA208_0 = input.LA(1);

                                                                                                                                                            if ( (LA208_0==DELIMITER1) ) {
                                                                                                                                                                alt208=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt208) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1013:22: DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4965); 

                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4967);
                                                                                                                                                                    st_sized_optionnal("P.23", 60);

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:22: ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt207=2;
                                                                                                                                                                    int LA207_0 = input.LA(1);

                                                                                                                                                                    if ( (LA207_0==DELIMITER1) ) {
                                                                                                                                                                        alt207=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt207) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:23: DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4992); 

                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4994);
                                                                                                                                                                            ts_sized_optionnal("P.24", 26);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:65: ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )?
                                                                                                                                                                            int alt195=2;
                                                                                                                                                                            int LA195_0 = input.LA(1);

                                                                                                                                                                            if ( (LA195_0==REPETITEUR) ) {
                                                                                                                                                                                alt195=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt195) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1014:66: REPETITEUR ts_sized_optionnal[\"P.24\", 26]
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4998); 

                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5000);
                                                                                                                                                                                    ts_sized_optionnal("P.24", 26);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1015:23: ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt206=2;
                                                                                                                                                                            int LA206_0 = input.LA(1);

                                                                                                                                                                            if ( (LA206_0==DELIMITER1) ) {
                                                                                                                                                                                alt206=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt206) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1015:24: DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5028); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_const_8_25_in_line_p5030);
                                                                                                                                                                                    spec_const_8_25("P.25");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1016:24: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt205=2;
                                                                                                                                                                                    int LA205_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA205_0==DELIMITER1) ) {
                                                                                                                                                                                        alt205=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt205) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1016:25: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5057); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p5059);
                                                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_8("P.26", 100);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1018:25: ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt204=2;
                                                                                                                                                                                            int LA204_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA204_0==DELIMITER1) ) {
                                                                                                                                                                                                alt204=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt204) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1018:26: DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5112); 

                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p5114);
                                                                                                                                                                                                    st_sized_optionnal("P.27", 100);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1019:26: ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt203=2;
                                                                                                                                                                                                    int LA203_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA203_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt203=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt203) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1019:27: DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5143); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_p5145);
                                                                                                                                                                                                            spec_const_race("P.28");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1021:27: ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt202=2;
                                                                                                                                                                                                            int LA202_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA202_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt202=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt202) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1021:28: DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5202); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p5204);
                                                                                                                                                                                                                    st_sized_optionnal("P.29", 2);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1023:28: ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt201=2;
                                                                                                                                                                                                                    int LA201_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA201_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt201=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt201) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1023:29: DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5263); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p5265);
                                                                                                                                                                                                                            st_sized_optionnal("P.30", 20);

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1024:29: ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            int alt200=2;
                                                                                                                                                                                                                            int LA200_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA200_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt200=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt200) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1024:30: DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5297); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p5299);
                                                                                                                                                                                                                                    st_sized_optionnal("P.31", 20);

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1026:30: ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    int alt199=2;
                                                                                                                                                                                                                                    int LA199_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA199_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt199=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt199) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1026:31: DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5362); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p5364);
                                                                                                                                                                                                                                            st_sized_optionnal("P.32", 20);

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:31: ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            int alt198=2;
                                                                                                                                                                                                                                            int LA198_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA198_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt198=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt198) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:32: DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5398); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5400);
                                                                                                                                                                                                                                                    ts_sized_optionnal("P.33", 26);

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:32: ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    int alt197=2;
                                                                                                                                                                                                                                                    int LA197_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA197_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt197=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt197) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:33: DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5435); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5437);
                                                                                                                                                                                                                                                            ts_sized_optionnal("P.34", 26);

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:33: ( DELIMITER1 )?
                                                                                                                                                                                                                                                            int alt196=2;
                                                                                                                                                                                                                                                            int LA196_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA196_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt196=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt196) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:33: DELIMITER1
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5472); 

                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p"



    // $ANTLR start "line_p_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:1: line_p_crapy : ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p_crapy() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1033:23: ( ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:3: ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1034:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p_crapy5552); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p_crapy5554); 

            }


            startElement("P.1");content("P");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:3: ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==DELIMITER1) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:4: DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5562); 

                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5564);
                    crapy_repet("P.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:4: ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt259=2;
                    int LA259_0 = input.LA(1);

                    if ( (LA259_0==DELIMITER1) ) {
                        alt259=1;
                    }
                    switch (alt259) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:5: DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5571); 

                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5573);
                            crapy_repet("P.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:5: ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt258=2;
                            int LA258_0 = input.LA(1);

                            if ( (LA258_0==DELIMITER1) ) {
                                alt258=1;
                            }
                            switch (alt258) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:6: DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5581); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5583);
                                    crapy_repet("P.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:6: ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt257=2;
                                    int LA257_0 = input.LA(1);

                                    if ( (LA257_0==DELIMITER1) ) {
                                        alt257=1;
                                    }
                                    switch (alt257) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:7: DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5592); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5594);
                                            crapy_repet("P.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:7: ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt256=2;
                                            int LA256_0 = input.LA(1);

                                            if ( (LA256_0==DELIMITER1) ) {
                                                alt256=1;
                                            }
                                            switch (alt256) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:8: DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5604); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5606);
                                                    crapy_repet("P.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:8: ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt255=2;
                                                    int LA255_0 = input.LA(1);

                                                    if ( (LA255_0==DELIMITER1) ) {
                                                        alt255=1;
                                                    }
                                                    switch (alt255) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:9: DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5617); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5619);
                                                            crapy_repet("P.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:9: ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt254=2;
                                                            int LA254_0 = input.LA(1);

                                                            if ( (LA254_0==DELIMITER1) ) {
                                                                alt254=1;
                                                            }
                                                            switch (alt254) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:10: DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5631); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5633);
                                                                    crapy_repet("P.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1042:10: ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt253=2;
                                                                    int LA253_0 = input.LA(1);

                                                                    if ( (LA253_0==DELIMITER1) ) {
                                                                        alt253=1;
                                                                    }
                                                                    switch (alt253) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1042:11: DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5646); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5648);
                                                                            crapy_repet("P.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1043:11: ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt252=2;
                                                                            int LA252_0 = input.LA(1);

                                                                            if ( (LA252_0==DELIMITER1) ) {
                                                                                alt252=1;
                                                                            }
                                                                            switch (alt252) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1043:12: DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5662); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5664);
                                                                                    crapy_repet("P.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1044:12: ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt251=2;
                                                                                    int LA251_0 = input.LA(1);

                                                                                    if ( (LA251_0==DELIMITER1) ) {
                                                                                        alt251=1;
                                                                                    }
                                                                                    switch (alt251) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1044:13: DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5679); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5681);
                                                                                            crapy_repet("P.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1045:13: ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt250=2;
                                                                                            int LA250_0 = input.LA(1);

                                                                                            if ( (LA250_0==DELIMITER1) ) {
                                                                                                alt250=1;
                                                                                            }
                                                                                            switch (alt250) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1045:14: DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5697); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5699);
                                                                                                    crapy_repet("P.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1046:14: ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt249=2;
                                                                                                    int LA249_0 = input.LA(1);

                                                                                                    if ( (LA249_0==DELIMITER1) ) {
                                                                                                        alt249=1;
                                                                                                    }
                                                                                                    switch (alt249) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1046:15: DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5716); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5718);
                                                                                                            crapy_repet("P.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1047:15: ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt248=2;
                                                                                                            int LA248_0 = input.LA(1);

                                                                                                            if ( (LA248_0==DELIMITER1) ) {
                                                                                                                alt248=1;
                                                                                                            }
                                                                                                            switch (alt248) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1047:16: DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5736); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5738);
                                                                                                                    crapy_repet("P.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:16: ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt247=2;
                                                                                                                    int LA247_0 = input.LA(1);

                                                                                                                    if ( (LA247_0==DELIMITER1) ) {
                                                                                                                        alt247=1;
                                                                                                                    }
                                                                                                                    switch (alt247) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:17: DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5757); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5759);
                                                                                                                            crapy_repet("P.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1049:17: ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt246=2;
                                                                                                                            int LA246_0 = input.LA(1);

                                                                                                                            if ( (LA246_0==DELIMITER1) ) {
                                                                                                                                alt246=1;
                                                                                                                            }
                                                                                                                            switch (alt246) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1049:18: DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5779); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5781);
                                                                                                                                    crapy_repet("P.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1050:18: ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt245=2;
                                                                                                                                    int LA245_0 = input.LA(1);

                                                                                                                                    if ( (LA245_0==DELIMITER1) ) {
                                                                                                                                        alt245=1;
                                                                                                                                    }
                                                                                                                                    switch (alt245) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1050:19: DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5802); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5804);
                                                                                                                                            crapy_repet("P.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1051:19: ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt244=2;
                                                                                                                                            int LA244_0 = input.LA(1);

                                                                                                                                            if ( (LA244_0==DELIMITER1) ) {
                                                                                                                                                alt244=1;
                                                                                                                                            }
                                                                                                                                            switch (alt244) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1051:20: DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5826); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5828);
                                                                                                                                                    crapy_repet("P.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:20: ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt243=2;
                                                                                                                                                    int LA243_0 = input.LA(1);

                                                                                                                                                    if ( (LA243_0==DELIMITER1) ) {
                                                                                                                                                        alt243=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt243) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:21: DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5851); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5853);
                                                                                                                                                            crapy_repet("P.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1053:21: ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt242=2;
                                                                                                                                                            int LA242_0 = input.LA(1);

                                                                                                                                                            if ( (LA242_0==DELIMITER1) ) {
                                                                                                                                                                alt242=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt242) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1053:22: DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5877); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5879);
                                                                                                                                                                    crapy_repet("P.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:22: ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt241=2;
                                                                                                                                                                    int LA241_0 = input.LA(1);

                                                                                                                                                                    if ( (LA241_0==DELIMITER1) ) {
                                                                                                                                                                        alt241=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt241) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:23: DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5904); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5906);
                                                                                                                                                                            crapy_repet("P.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1055:23: ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt240=2;
                                                                                                                                                                            int LA240_0 = input.LA(1);

                                                                                                                                                                            if ( (LA240_0==DELIMITER1) ) {
                                                                                                                                                                                alt240=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt240) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1055:24: DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5932); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5934);
                                                                                                                                                                                    crapy_repet("P.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1056:24: ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt239=2;
                                                                                                                                                                                    int LA239_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA239_0==DELIMITER1) ) {
                                                                                                                                                                                        alt239=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt239) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1056:25: DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5961); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5963);
                                                                                                                                                                                            crapy_repet("P.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1057:25: ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt238=2;
                                                                                                                                                                                            int LA238_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA238_0==DELIMITER1) ) {
                                                                                                                                                                                                alt238=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt238) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1057:26: DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5991); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5993);
                                                                                                                                                                                                    crapy_repet("P.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1058:26: ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt237=2;
                                                                                                                                                                                                    int LA237_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA237_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt237=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt237) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1058:27: DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6022); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6024);
                                                                                                                                                                                                            crapy_repet("P.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1059:27: ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt236=2;
                                                                                                                                                                                                            int LA236_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA236_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt236=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt236) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1059:28: DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6054); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6056);
                                                                                                                                                                                                                    crapy_repet("P.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1060:28: ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt235=2;
                                                                                                                                                                                                                    int LA235_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA235_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt235=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt235) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1060:29: DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6087); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6089);
                                                                                                                                                                                                                            crapy_repet("P.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1061:29: ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt234=2;
                                                                                                                                                                                                                            int LA234_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA234_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt234=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt234) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1061:30: DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6121); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6123);
                                                                                                                                                                                                                                    crapy_repet("P.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1062:30: ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt233=2;
                                                                                                                                                                                                                                    int LA233_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA233_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt233=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt233) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1062:31: DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6156); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6158);
                                                                                                                                                                                                                                            crapy_repet("P.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1063:31: ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt232=2;
                                                                                                                                                                                                                                            int LA232_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA232_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt232=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt232) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1063:32: DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6192); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6194);
                                                                                                                                                                                                                                                    crapy_repet("P.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:32: ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt231=2;
                                                                                                                                                                                                                                                    int LA231_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA231_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt231=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt231) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:33: DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6229); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6231);
                                                                                                                                                                                                                                                            crapy_repet("P.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:33: ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            int alt230=2;
                                                                                                                                                                                                                                                            int LA230_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA230_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt230=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt230) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:34: DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6267); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6269);
                                                                                                                                                                                                                                                                    crapy_repet("P.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:34: ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    int alt229=2;
                                                                                                                                                                                                                                                                    int LA229_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA229_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt229=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt229) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:35: DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6306); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6308);
                                                                                                                                                                                                                                                                            crapy_repet("P.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:35: ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            int alt228=2;
                                                                                                                                                                                                                                                                            int LA228_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA228_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt228=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt228) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:36: DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6346); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy6348);
                                                                                                                                                                                                                                                                                    crapy_repet("P.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:36: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    int alt227=2;
                                                                                                                                                                                                                                                                                    int LA227_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA227_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt227=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt227) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:36: DELIMITER1
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy6386); 

                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p_crapy"



    // $ANTLR start "line_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1071:1: line_reg : ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? ;
    public final void line_reg() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1073:23: ( ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:3: ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg6473); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg6475); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg6477); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg6479); 

            }


            startElement("REG.1");content("REG");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6486); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_reg6488);
            nm_integer_sized_mandatory("REG.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6493); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_reg6495);
            st_sized_mandatory("REG.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6500); 

            pushFollow(FOLLOW_spec_reg_4_in_line_reg6502);
            spec_reg_4("REG.4", 11);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6507); 

            pushFollow(FOLLOW_spec_p_or_m_in_line_reg6509);
            spec_p_or_m("REG.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6514); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_reg6516);
            ts_sized_mandatory("REG.6", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:3: ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==DELIMITER1) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:4: DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6525); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6527);
                    st_sized_optionnal("REG.7", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:4: ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    int alt262=2;
                    int LA262_0 = input.LA(1);

                    if ( (LA262_0==DELIMITER1) ) {
                        alt262=1;
                    }
                    switch (alt262) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:5: DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6534); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6536);
                            st_sized_optionnal("REG.8", 10);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1083:5: ( DELIMITER1 )?
                            int alt261=2;
                            int LA261_0 = input.LA(1);

                            if ( (LA261_0==DELIMITER1) ) {
                                alt261=1;
                            }
                            switch (alt261) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1083:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6543); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg"



    // $ANTLR start "line_reg_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1085:1: line_reg_crapy : ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_reg_crapy() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1087:23: ( ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:3: ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg_crapy6567); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg_crapy6569); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg_crapy6571); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg_crapy6573); 

            }


            startElement("REG.1");content("REG");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:3: ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==DELIMITER1) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:4: DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6581); 

                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6583);
                    crapy_repet("REG.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1090:4: ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==DELIMITER1) ) {
                        alt270=1;
                    }
                    switch (alt270) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1090:5: DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6590); 

                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6592);
                            crapy_repet("REG.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1091:5: ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt269=2;
                            int LA269_0 = input.LA(1);

                            if ( (LA269_0==DELIMITER1) ) {
                                alt269=1;
                            }
                            switch (alt269) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1091:6: DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6600); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6602);
                                    crapy_repet("REG.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:6: ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt268=2;
                                    int LA268_0 = input.LA(1);

                                    if ( (LA268_0==DELIMITER1) ) {
                                        alt268=1;
                                    }
                                    switch (alt268) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:7: DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6611); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6613);
                                            crapy_repet("REG.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1093:7: ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt267=2;
                                            int LA267_0 = input.LA(1);

                                            if ( (LA267_0==DELIMITER1) ) {
                                                alt267=1;
                                            }
                                            switch (alt267) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1093:8: DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6623); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6625);
                                                    crapy_repet("REG.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1094:8: ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    int alt266=2;
                                                    int LA266_0 = input.LA(1);

                                                    if ( (LA266_0==DELIMITER1) ) {
                                                        alt266=1;
                                                    }
                                                    switch (alt266) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1094:9: DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6636); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6638);
                                                            crapy_repet("REG.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:9: ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            int alt265=2;
                                                            int LA265_0 = input.LA(1);

                                                            if ( (LA265_0==DELIMITER1) ) {
                                                                alt265=1;
                                                            }
                                                            switch (alt265) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:10: DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6650); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6652);
                                                                    crapy_repet("REG.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:10: ( DELIMITER1 )?
                                                                    int alt264=2;
                                                                    int LA264_0 = input.LA(1);

                                                                    if ( (LA264_0==DELIMITER1) ) {
                                                                        alt264=1;
                                                                    }
                                                                    switch (alt264) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6664); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg_crapy"



    // $ANTLR start "line_obr"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1099:1: line_obr : ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1101:23: ( ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:3: ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr6699); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr6701); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr6703); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr6705); 

            }


            startElement("OBR.1");content("OBR");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6712); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obr6714);
            nm_integer_sized_mandatory("OBR.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6719); 

            pushFollow(FOLLOW_spec_sized_9_3_in_line_obr6721);
            spec_sized_9_3("OBR.3", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6726); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6728);
            spec_sized_mult_lvl1_st_optionnal_2("OBR.4", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6733); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6735);
            spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 640000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:67: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )*
            loop272:
            do {
                int alt272=2;
                int LA272_0 = input.LA(1);

                if ( (LA272_0==REPETITEUR) ) {
                    alt272=1;
                }


                switch (alt272) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:68: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6739); 

            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6741);
            	    spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop272;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6751); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6753);
            st_sized_optionnal("OBR.6", 2);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:45: ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==REPETITEUR) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:46: REPETITEUR st_sized_optionnal[\"OBR.6\", 2]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6757); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6759);
            	    st_sized_optionnal("OBR.6", 2);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6766); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6768);
            ts_sized_optionnal("OBR.7", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6773); 

            pushFollow(FOLLOW_spec_non_sized_9_8_in_line_obr6775);
            spec_non_sized_9_8("OBR.8");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6780); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6782);
            ts_sized_optionnal("OBR.9", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6790); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6792);
            st_sized_optionnal("OBR.10", 20);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6797); 

            pushFollow(FOLLOW_spec_sized_cna_in_line_obr6799);
            spec_sized_cna("OBR.11", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6807); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6809);
            st_sized_optionnal("OBR.12", 1);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:3: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==DELIMITER1) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:4: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6818); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6820);
                    spec_sized_mult_lvl1_st_optionnal_2("OBR.13", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:4: ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt300=2;
                    int LA300_0 = input.LA(1);

                    if ( (LA300_0==DELIMITER1) ) {
                        alt300=1;
                    }
                    switch (alt300) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:5: DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6827); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6829);
                            st_sized_optionnal("OBR.14", 300);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:5: ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt299=2;
                            int LA299_0 = input.LA(1);

                            if ( (LA299_0==DELIMITER1) ) {
                                alt299=1;
                            }
                            switch (alt299) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:6: DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6837); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6839);
                                    ts_sized_optionnal("OBR.15", 26);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:6: ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt298=2;
                                    int LA298_0 = input.LA(1);

                                    if ( (LA298_0==DELIMITER1) ) {
                                        alt298=1;
                                    }
                                    switch (alt298) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:7: DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6848); 

                                            pushFollow(FOLLOW_spec_sized_9_16_in_line_obr6850);
                                            spec_sized_9_16("OBR.16", 300);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:7: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt297=2;
                                            int LA297_0 = input.LA(1);

                                            if ( (LA297_0==DELIMITER1) ) {
                                                alt297=1;
                                            }
                                            switch (alt297) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:8: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6860); 

                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6862);
                                                    spec_sized_mult_lvl1_st_optionnal_6("OBR.17", 60);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:8: ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt296=2;
                                                    int LA296_0 = input.LA(1);

                                                    if ( (LA296_0==DELIMITER1) ) {
                                                        alt296=1;
                                                    }
                                                    switch (alt296) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:9: DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6873); 

                                                            pushFollow(FOLLOW_spec_sized_tn_in_line_obr6875);
                                                            spec_sized_tn("OBR.18", 40);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:9: ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt295=2;
                                                            int LA295_0 = input.LA(1);

                                                            if ( (LA295_0==DELIMITER1) ) {
                                                                alt295=1;
                                                            }
                                                            switch (alt295) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:10: DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6887); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6889);
                                                                    st_sized_optionnal("OBR.19", 60);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:10: ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt294=2;
                                                                    int LA294_0 = input.LA(1);

                                                                    if ( (LA294_0==DELIMITER1) ) {
                                                                        alt294=1;
                                                                    }
                                                                    switch (alt294) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:11: DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6902); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6904);
                                                                            st_sized_optionnal("OBR.20", 60);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:11: ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt293=2;
                                                                            int LA293_0 = input.LA(1);

                                                                            if ( (LA293_0==DELIMITER1) ) {
                                                                                alt293=1;
                                                                            }
                                                                            switch (alt293) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:12: DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6918); 

                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6920);
                                                                                    st_sized_optionnal("OBR.21", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1127:12: ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt292=2;
                                                                                    int LA292_0 = input.LA(1);

                                                                                    if ( (LA292_0==DELIMITER1) ) {
                                                                                        alt292=1;
                                                                                    }
                                                                                    switch (alt292) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1127:13: DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6935); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6937);
                                                                                            st_sized_optionnal("OBR.22", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:13: ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt291=2;
                                                                                            int LA291_0 = input.LA(1);

                                                                                            if ( (LA291_0==DELIMITER1) ) {
                                                                                                alt291=1;
                                                                                            }
                                                                                            switch (alt291) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:14: DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6953); 

                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6955);
                                                                                                    ts_sized_optionnal("OBR.23", 26);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:14: ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt290=2;
                                                                                                    int LA290_0 = input.LA(1);

                                                                                                    if ( (LA290_0==DELIMITER1) ) {
                                                                                                        alt290=1;
                                                                                                    }
                                                                                                    switch (alt290) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:15: DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6972); 

                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr6974);
                                                                                                            spec_const_race("OBR.24");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:15: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt289=2;
                                                                                                            int LA289_0 = input.LA(1);

                                                                                                            if ( (LA289_0==DELIMITER1) ) {
                                                                                                                alt289=1;
                                                                                                            }
                                                                                                            switch (alt289) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:16: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6992); 

                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6994);
                                                                                                                    spec_sized_mult_lvl1_st_optionnal_2("OBR.25", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:16: ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt288=2;
                                                                                                                    int LA288_0 = input.LA(1);

                                                                                                                    if ( (LA288_0==DELIMITER1) ) {
                                                                                                                        alt288=1;
                                                                                                                    }
                                                                                                                    switch (alt288) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:17: DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7013); 

                                                                                                                            pushFollow(FOLLOW_spec_const_9_26_in_line_obr7015);
                                                                                                                            spec_const_9_26("OBR.26");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:17: ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt287=2;
                                                                                                                            int LA287_0 = input.LA(1);

                                                                                                                            if ( (LA287_0==DELIMITER1) ) {
                                                                                                                                alt287=1;
                                                                                                                            }
                                                                                                                            switch (alt287) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:18: DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7035); 

                                                                                                                                    pushFollow(FOLLOW_spec_const_race_in_line_obr7037);
                                                                                                                                    spec_const_race("OBR.27");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:18: ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt286=2;
                                                                                                                                    int LA286_0 = input.LA(1);

                                                                                                                                    if ( (LA286_0==DELIMITER1) ) {
                                                                                                                                        alt286=1;
                                                                                                                                    }
                                                                                                                                    switch (alt286) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:19: DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7058); 

                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr7060);
                                                                                                                                            spec_const_race("OBR.28");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:19: ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt285=2;
                                                                                                                                            int LA285_0 = input.LA(1);

                                                                                                                                            if ( (LA285_0==DELIMITER1) ) {
                                                                                                                                                alt285=1;
                                                                                                                                            }
                                                                                                                                            switch (alt285) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:20: DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7082); 

                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7084);
                                                                                                                                                    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:61: ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )*
                                                                                                                                                    loop274:
                                                                                                                                                    do {
                                                                                                                                                        int alt274=2;
                                                                                                                                                        int LA274_0 = input.LA(1);

                                                                                                                                                        if ( (LA274_0==REPETITEUR) ) {
                                                                                                                                                            alt274=1;
                                                                                                                                                        }


                                                                                                                                                        switch (alt274) {
                                                                                                                                                    	case 1 :
                                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:62: REPETITEUR spec_sized_cna[\"OBR.29\", 150]
                                                                                                                                                    	    {
                                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr7088); 

                                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7090);
                                                                                                                                                    	    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    	    state._fsp--;


                                                                                                                                                    	    }
                                                                                                                                                    	    break;

                                                                                                                                                    	default :
                                                                                                                                                    	    break loop274;
                                                                                                                                                        }
                                                                                                                                                    } while (true);


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1135:20: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt284=2;
                                                                                                                                                    int LA284_0 = input.LA(1);

                                                                                                                                                    if ( (LA284_0==DELIMITER1) ) {
                                                                                                                                                        alt284=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt284) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1135:21: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7115); 

                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr7117);
                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_4("OBR.30", 150);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1136:21: ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt283=2;
                                                                                                                                                            int LA283_0 = input.LA(1);

                                                                                                                                                            if ( (LA283_0==DELIMITER1) ) {
                                                                                                                                                                alt283=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt283) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1136:22: DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7141); 

                                                                                                                                                                    pushFollow(FOLLOW_spec_const_9_31_in_line_obr7143);
                                                                                                                                                                    spec_const_9_31("OBR.31");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:22: ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    int alt282=2;
                                                                                                                                                                    int LA282_0 = input.LA(1);

                                                                                                                                                                    if ( (LA282_0==DELIMITER1) ) {
                                                                                                                                                                        alt282=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt282) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:23: DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7190); 

                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr7192);
                                                                                                                                                                            st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:68: ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )*
                                                                                                                                                                            loop275:
                                                                                                                                                                            do {
                                                                                                                                                                                int alt275=2;
                                                                                                                                                                                int LA275_0 = input.LA(1);

                                                                                                                                                                                if ( (LA275_0==REPETITEUR) ) {
                                                                                                                                                                                    alt275=1;
                                                                                                                                                                                }


                                                                                                                                                                                switch (alt275) {
                                                                                                                                                                            	case 1 :
                                                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:69: REPETITEUR st_sized_optionnal[\"OBR.32\", 300]
                                                                                                                                                                            	    {
                                                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr7196); 

                                                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr7198);
                                                                                                                                                                            	    st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            	    state._fsp--;


                                                                                                                                                                            	    }
                                                                                                                                                                            	    break;

                                                                                                                                                                            	default :
                                                                                                                                                                            	    break loop275;
                                                                                                                                                                                }
                                                                                                                                                                            } while (true);


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:23: ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            int alt281=2;
                                                                                                                                                                            int LA281_0 = input.LA(1);

                                                                                                                                                                            if ( (LA281_0==DELIMITER1) ) {
                                                                                                                                                                                alt281=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt281) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:24: DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7226); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7228);
                                                                                                                                                                                    spec_sized_cna("OBR.33", 60);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1140:24: ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    int alt280=2;
                                                                                                                                                                                    int LA280_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA280_0==DELIMITER1) ) {
                                                                                                                                                                                        alt280=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt280) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1140:25: DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7255); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr7257);
                                                                                                                                                                                            spec_sized_cna("OBR.34", 60);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:25: ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            int alt279=2;
                                                                                                                                                                                            int LA279_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA279_0==DELIMITER1) ) {
                                                                                                                                                                                                alt279=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt279) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:26: DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7285); 

                                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr7287);
                                                                                                                                                                                                    spec_sized_cna("OBR.35", 60);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1142:26: ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    int alt278=2;
                                                                                                                                                                                                    int LA278_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA278_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt278=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt278) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1142:27: DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7316); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr7318);
                                                                                                                                                                                                            spec_sized_cna("OBR.36", 60);

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1143:27: ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            int alt277=2;
                                                                                                                                                                                                            int LA277_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA277_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt277=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt277) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1143:28: DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7348); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr7350);
                                                                                                                                                                                                                    ts_sized_optionnal("OBR.37", 26);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:29: ( DELIMITER1 )?
                                                                                                                                                                                                                    int alt276=2;
                                                                                                                                                                                                                    int LA276_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA276_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt276=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt276) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:29: DELIMITER1
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr7381); 

                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr"



    // $ANTLR start "line_obr_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:1: line_obr_crapy : ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr_crapy() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1148:23: ( ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:3: ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr_crapy7451); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr_crapy7453); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr_crapy7455); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr_crapy7457); 

            }


            startElement("OBR.1");content("OBR");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:3: ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==DELIMITER1) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:4: DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7465); 

                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7467);
                    crapy_repet("OBR.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:4: ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt337=2;
                    int LA337_0 = input.LA(1);

                    if ( (LA337_0==DELIMITER1) ) {
                        alt337=1;
                    }
                    switch (alt337) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:5: DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7474); 

                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7476);
                            crapy_repet("OBR.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:5: ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt336=2;
                            int LA336_0 = input.LA(1);

                            if ( (LA336_0==DELIMITER1) ) {
                                alt336=1;
                            }
                            switch (alt336) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:6: DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7484); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7486);
                                    crapy_repet("OBR.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:6: ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt335=2;
                                    int LA335_0 = input.LA(1);

                                    if ( (LA335_0==DELIMITER1) ) {
                                        alt335=1;
                                    }
                                    switch (alt335) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:7: DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7495); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7497);
                                            crapy_repet("OBR.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:7: ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt334=2;
                                            int LA334_0 = input.LA(1);

                                            if ( (LA334_0==DELIMITER1) ) {
                                                alt334=1;
                                            }
                                            switch (alt334) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:8: DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7507); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7509);
                                                    crapy_repet("OBR.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:8: ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt333=2;
                                                    int LA333_0 = input.LA(1);

                                                    if ( (LA333_0==DELIMITER1) ) {
                                                        alt333=1;
                                                    }
                                                    switch (alt333) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:9: DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7520); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7522);
                                                            crapy_repet("OBR.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:9: ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt332=2;
                                                            int LA332_0 = input.LA(1);

                                                            if ( (LA332_0==DELIMITER1) ) {
                                                                alt332=1;
                                                            }
                                                            switch (alt332) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:10: DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7534); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7536);
                                                                    crapy_repet("OBR.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:10: ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt331=2;
                                                                    int LA331_0 = input.LA(1);

                                                                    if ( (LA331_0==DELIMITER1) ) {
                                                                        alt331=1;
                                                                    }
                                                                    switch (alt331) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:11: DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7549); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7551);
                                                                            crapy_repet("OBR.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:11: ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt330=2;
                                                                            int LA330_0 = input.LA(1);

                                                                            if ( (LA330_0==DELIMITER1) ) {
                                                                                alt330=1;
                                                                            }
                                                                            switch (alt330) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:12: DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7565); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7567);
                                                                                    crapy_repet("OBR.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:12: ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt329=2;
                                                                                    int LA329_0 = input.LA(1);

                                                                                    if ( (LA329_0==DELIMITER1) ) {
                                                                                        alt329=1;
                                                                                    }
                                                                                    switch (alt329) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:13: DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7582); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7584);
                                                                                            crapy_repet("OBR.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:13: ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt328=2;
                                                                                            int LA328_0 = input.LA(1);

                                                                                            if ( (LA328_0==DELIMITER1) ) {
                                                                                                alt328=1;
                                                                                            }
                                                                                            switch (alt328) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:14: DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7600); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7602);
                                                                                                    crapy_repet("OBR.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:14: ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt327=2;
                                                                                                    int LA327_0 = input.LA(1);

                                                                                                    if ( (LA327_0==DELIMITER1) ) {
                                                                                                        alt327=1;
                                                                                                    }
                                                                                                    switch (alt327) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:15: DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7619); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7621);
                                                                                                            crapy_repet("OBR.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1162:15: ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt326=2;
                                                                                                            int LA326_0 = input.LA(1);

                                                                                                            if ( (LA326_0==DELIMITER1) ) {
                                                                                                                alt326=1;
                                                                                                            }
                                                                                                            switch (alt326) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1162:16: DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7639); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7641);
                                                                                                                    crapy_repet("OBR.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1163:16: ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt325=2;
                                                                                                                    int LA325_0 = input.LA(1);

                                                                                                                    if ( (LA325_0==DELIMITER1) ) {
                                                                                                                        alt325=1;
                                                                                                                    }
                                                                                                                    switch (alt325) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1163:17: DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7660); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7662);
                                                                                                                            crapy_repet("OBR.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:17: ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt324=2;
                                                                                                                            int LA324_0 = input.LA(1);

                                                                                                                            if ( (LA324_0==DELIMITER1) ) {
                                                                                                                                alt324=1;
                                                                                                                            }
                                                                                                                            switch (alt324) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:18: DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7682); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7684);
                                                                                                                                    crapy_repet("OBR.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1165:18: ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt323=2;
                                                                                                                                    int LA323_0 = input.LA(1);

                                                                                                                                    if ( (LA323_0==DELIMITER1) ) {
                                                                                                                                        alt323=1;
                                                                                                                                    }
                                                                                                                                    switch (alt323) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1165:19: DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7705); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7707);
                                                                                                                                            crapy_repet("OBR.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:19: ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt322=2;
                                                                                                                                            int LA322_0 = input.LA(1);

                                                                                                                                            if ( (LA322_0==DELIMITER1) ) {
                                                                                                                                                alt322=1;
                                                                                                                                            }
                                                                                                                                            switch (alt322) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:20: DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7729); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7731);
                                                                                                                                                    crapy_repet("OBR.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1167:20: ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt321=2;
                                                                                                                                                    int LA321_0 = input.LA(1);

                                                                                                                                                    if ( (LA321_0==DELIMITER1) ) {
                                                                                                                                                        alt321=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt321) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1167:21: DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7754); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7756);
                                                                                                                                                            crapy_repet("OBR.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1168:21: ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt320=2;
                                                                                                                                                            int LA320_0 = input.LA(1);

                                                                                                                                                            if ( (LA320_0==DELIMITER1) ) {
                                                                                                                                                                alt320=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt320) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1168:22: DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7780); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7782);
                                                                                                                                                                    crapy_repet("OBR.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1169:22: ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt319=2;
                                                                                                                                                                    int LA319_0 = input.LA(1);

                                                                                                                                                                    if ( (LA319_0==DELIMITER1) ) {
                                                                                                                                                                        alt319=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt319) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1169:23: DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7807); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7809);
                                                                                                                                                                            crapy_repet("OBR.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:23: ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt318=2;
                                                                                                                                                                            int LA318_0 = input.LA(1);

                                                                                                                                                                            if ( (LA318_0==DELIMITER1) ) {
                                                                                                                                                                                alt318=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt318) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:24: DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7835); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7837);
                                                                                                                                                                                    crapy_repet("OBR.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:24: ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt317=2;
                                                                                                                                                                                    int LA317_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA317_0==DELIMITER1) ) {
                                                                                                                                                                                        alt317=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt317) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:25: DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7864); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7866);
                                                                                                                                                                                            crapy_repet("OBR.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1172:25: ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt316=2;
                                                                                                                                                                                            int LA316_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA316_0==DELIMITER1) ) {
                                                                                                                                                                                                alt316=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt316) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1172:26: DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7894); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7896);
                                                                                                                                                                                                    crapy_repet("OBR.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1173:26: ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt315=2;
                                                                                                                                                                                                    int LA315_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA315_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt315=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt315) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1173:27: DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7925); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7927);
                                                                                                                                                                                                            crapy_repet("OBR.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:27: ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt314=2;
                                                                                                                                                                                                            int LA314_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA314_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt314=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt314) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1174:28: DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7957); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7959);
                                                                                                                                                                                                                    crapy_repet("OBR.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1175:28: ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt313=2;
                                                                                                                                                                                                                    int LA313_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA313_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt313=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt313) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1175:29: DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7990); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7992);
                                                                                                                                                                                                                            crapy_repet("OBR.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1176:29: ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt312=2;
                                                                                                                                                                                                                            int LA312_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA312_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt312=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt312) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1176:30: DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8024); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8026);
                                                                                                                                                                                                                                    crapy_repet("OBR.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:30: ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt311=2;
                                                                                                                                                                                                                                    int LA311_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA311_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt311=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt311) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:31: DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8059); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8061);
                                                                                                                                                                                                                                            crapy_repet("OBR.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:31: ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt310=2;
                                                                                                                                                                                                                                            int LA310_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA310_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt310=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt310) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:32: DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8095); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8097);
                                                                                                                                                                                                                                                    crapy_repet("OBR.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:32: ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt309=2;
                                                                                                                                                                                                                                                    int LA309_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA309_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt309=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt309) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:33: DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8132); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8134);
                                                                                                                                                                                                                                                            crapy_repet("OBR.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:33: ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            int alt308=2;
                                                                                                                                                                                                                                                            int LA308_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA308_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt308=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt308) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:34: DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8170); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8172);
                                                                                                                                                                                                                                                                    crapy_repet("OBR.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1181:34: ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    int alt307=2;
                                                                                                                                                                                                                                                                    int LA307_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA307_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt307=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt307) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1181:35: DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8209); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8211);
                                                                                                                                                                                                                                                                            crapy_repet("OBR.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:35: ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            int alt306=2;
                                                                                                                                                                                                                                                                            int LA306_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA306_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt306=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt306) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1182:36: DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8249); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8251);
                                                                                                                                                                                                                                                                                    crapy_repet("OBR.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1183:36: ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    int alt305=2;
                                                                                                                                                                                                                                                                                    int LA305_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA305_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt305=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt305) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1183:37: DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8290); 

                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8292);
                                                                                                                                                                                                                                                                                            crapy_repet("OBR.35");

                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1184:37: ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            int alt304=2;
                                                                                                                                                                                                                                                                                            int LA304_0 = input.LA(1);

                                                                                                                                                                                                                                                                                            if ( (LA304_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                alt304=1;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            switch (alt304) {
                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1184:38: DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8332); 

                                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8334);
                                                                                                                                                                                                                                                                                                    crapy_repet("OBR.36");

                                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1185:38: ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    int alt303=2;
                                                                                                                                                                                                                                                                                                    int LA303_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                    if ( (LA303_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                        alt303=1;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    switch (alt303) {
                                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1185:39: DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8375); 

                                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy8377);
                                                                                                                                                                                                                                                                                                            crapy_repet("OBR.37");

                                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1186:40: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            int alt302=2;
                                                                                                                                                                                                                                                                                                            int LA302_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                            if ( (LA302_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                                alt302=1;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            switch (alt302) {
                                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1186:40: DELIMITER1
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8419); 

                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr_crapy"



    // $ANTLR start "line_obx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1189:1: line_obx : ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) ;
    public final void line_obx() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1191:23: ( ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1192:3: ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1192:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1192:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx8512); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx8514); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx8516); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx8518); 

            }


            startElement("OBX.1");content("OBX");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8525); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obx8527);
            nm_integer_sized_mandatory("OBX.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8532); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1195:5: ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            int alt373=7;
            switch ( input.LA(1) ) {
            case CHARN:
                {
                alt373=1;
                }
                break;
            case CHARC:
                {
                int LA373_2 = input.LA(2);

                if ( (LA373_2==CHARE) ) {
                    alt373=2;
                }
                else if ( (LA373_2==CHARK||LA373_2==CHARN) ) {
                    alt373=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 373, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARF:
                {
                alt373=3;
                }
                break;
            case CHARS:
                {
                alt373=4;
                }
                break;
            case CHARG:
                {
                int LA373_5 = input.LA(2);

                if ( (LA373_5==CHARC) ) {
                    alt373=5;
                }
                else if ( (LA373_5==CHARB||LA373_5==CHARN) ) {
                    alt373=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 373, 5, input);

                    throw nvae;

                }
                }
                break;
            case CHART:
                {
                int LA373_6 = input.LA(2);

                if ( (LA373_6==CHARX) ) {
                    alt373=6;
                }
                else if ( (LA373_6==CHARN) ) {
                    alt373=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 373, 6, input);

                    throw nvae;

                }
                }
                break;
            case CHARA:
            case CHARD:
            case CHARP:
                {
                alt373=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;

            }

            switch (alt373) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1195:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1195:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1195:7: spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_nm_in_line_obx8540);
                    spec_const_10_3_nm("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1196:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt343=2;
                    int LA343_0 = input.LA(1);

                    if ( (LA343_0==DELIMITER1) ) {
                        alt343=1;
                    }
                    switch (alt343) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1196:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8549); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8551);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt342=2;
                            int LA342_0 = input.LA(1);

                            if ( (LA342_0==DELIMITER1) ) {
                                alt342=1;
                            }
                            switch (alt342) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8561); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8563);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt341=2;
                                    int LA341_0 = input.LA(1);

                                    if ( (LA341_0==DELIMITER1) ) {
                                        alt341=1;
                                    }
                                    switch (alt341) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:9: DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8574); 

                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8576);
                                            nm_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:55: ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop339:
                                            do {
                                                int alt339=2;
                                                int LA339_0 = input.LA(1);

                                                if ( (LA339_0==REPETITEUR) ) {
                                                    alt339=1;
                                                }


                                                switch (alt339) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:56: REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8580); 

                                            	    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8582);
                                            	    nm_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop339;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1199:9: ( line_obx2_1_post10_6 )?
                                            int alt340=2;
                                            int LA340_0 = input.LA(1);

                                            if ( (LA340_0==DELIMITER1) ) {
                                                alt340=1;
                                            }
                                            switch (alt340) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1199:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8595);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1200:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1200:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1200:8: spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_ce_in_line_obx8612);
                    spec_const_10_3_ce("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1201:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt348=2;
                    int LA348_0 = input.LA(1);

                    if ( (LA348_0==DELIMITER1) ) {
                        alt348=1;
                    }
                    switch (alt348) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1201:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8621); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8623);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1202:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt347=2;
                            int LA347_0 = input.LA(1);

                            if ( (LA347_0==DELIMITER1) ) {
                                alt347=1;
                            }
                            switch (alt347) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1202:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8633); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8635);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt346=2;
                                    int LA346_0 = input.LA(1);

                                    if ( (LA346_0==DELIMITER1) ) {
                                        alt346=1;
                                    }
                                    switch (alt346) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8646); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8648);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop344:
                                            do {
                                                int alt344=2;
                                                int LA344_0 = input.LA(1);

                                                if ( (LA344_0==REPETITEUR) ) {
                                                    alt344=1;
                                                }


                                                switch (alt344) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1203:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8652); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8654);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop344;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1204:9: ( line_obx2_1_post10_6 )?
                                            int alt345=2;
                                            int LA345_0 = input.LA(1);

                                            if ( (LA345_0==DELIMITER1) ) {
                                                alt345=1;
                                            }
                                            switch (alt345) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1204:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8667);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1205:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1205:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1205:8: spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_fic_in_line_obx8684);
                    spec_const_10_3_fic("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt353=2;
                    int LA353_0 = input.LA(1);

                    if ( (LA353_0==DELIMITER1) ) {
                        alt353=1;
                    }
                    switch (alt353) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8693); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8695);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt352=2;
                            int LA352_0 = input.LA(1);

                            if ( (LA352_0==DELIMITER1) ) {
                                alt352=1;
                            }
                            switch (alt352) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8705); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8707);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1208:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt351=2;
                                    int LA351_0 = input.LA(1);

                                    if ( (LA351_0==DELIMITER1) ) {
                                        alt351=1;
                                    }
                                    switch (alt351) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1208:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8718); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8720);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1208:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop349:
                                            do {
                                                int alt349=2;
                                                int LA349_0 = input.LA(1);

                                                if ( (LA349_0==REPETITEUR) ) {
                                                    alt349=1;
                                                }


                                                switch (alt349) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1208:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8724); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8726);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop349;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1209:9: ( line_obx2_1_post10_6 )?
                                            int alt350=2;
                                            int LA350_0 = input.LA(1);

                                            if ( (LA350_0==DELIMITER1) ) {
                                                alt350=1;
                                            }
                                            switch (alt350) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1209:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8739);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1210:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1210:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1210:8: spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_st_in_line_obx8756);
                    spec_const_10_3_st("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1211:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt358=2;
                    int LA358_0 = input.LA(1);

                    if ( (LA358_0==DELIMITER1) ) {
                        alt358=1;
                    }
                    switch (alt358) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1211:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8765); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8767);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt357=2;
                            int LA357_0 = input.LA(1);

                            if ( (LA357_0==DELIMITER1) ) {
                                alt357=1;
                            }
                            switch (alt357) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8777); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8779);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:8: ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt356=2;
                                    int LA356_0 = input.LA(1);

                                    if ( (LA356_0==DELIMITER1) ) {
                                        alt356=1;
                                    }
                                    switch (alt356) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:9: DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8790); 

                                            pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8792);
                                            st_sized_mandatory("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:55: ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )*
                                            loop354:
                                            do {
                                                int alt354=2;
                                                int LA354_0 = input.LA(1);

                                                if ( (LA354_0==REPETITEUR) ) {
                                                    alt354=1;
                                                }


                                                switch (alt354) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:56: REPETITEUR st_sized_mandatory[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8796); 

                                            	    pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8798);
                                            	    st_sized_mandatory("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop354;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1214:9: ( line_obx2_1_post10_6 )?
                                            int alt355=2;
                                            int LA355_0 = input.LA(1);

                                            if ( (LA355_0==DELIMITER1) ) {
                                                alt355=1;
                                            }
                                            switch (alt355) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1214:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8811);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1215:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1215:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1215:8: spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_gc_in_line_obx8828);
                    spec_const_10_3_gc("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1216:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt363=2;
                    int LA363_0 = input.LA(1);

                    if ( (LA363_0==DELIMITER1) ) {
                        alt363=1;
                    }
                    switch (alt363) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1216:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8837); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8839);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt362=2;
                            int LA362_0 = input.LA(1);

                            if ( (LA362_0==DELIMITER1) ) {
                                alt362=1;
                            }
                            switch (alt362) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8849); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8851);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:8: ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt361=2;
                                    int LA361_0 = input.LA(1);

                                    if ( (LA361_0==DELIMITER1) ) {
                                        alt361=1;
                                    }
                                    switch (alt361) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:9: DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8862); 

                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8864);
                                            spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:72: ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )*
                                            loop359:
                                            do {
                                                int alt359=2;
                                                int LA359_0 = input.LA(1);

                                                if ( (LA359_0==REPETITEUR) ) {
                                                    alt359=1;
                                                }


                                                switch (alt359) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:73: REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8868); 

                                            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8870);
                                            	    spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop359;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1219:9: ( line_obx2_1_post10_6 )?
                                            int alt360=2;
                                            int LA360_0 = input.LA(1);

                                            if ( (LA360_0==DELIMITER1) ) {
                                                alt360=1;
                                            }
                                            switch (alt360) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1219:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8883);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1220:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1220:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1220:8: spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_tx_in_line_obx8900);
                    spec_const_10_3_tx("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1221:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    int alt367=2;
                    int LA367_0 = input.LA(1);

                    if ( (LA367_0==DELIMITER1) ) {
                        alt367=1;
                    }
                    switch (alt367) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1221:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8909); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8911);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1222:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            int alt366=2;
                            int LA366_0 = input.LA(1);

                            if ( (LA366_0==DELIMITER1) ) {
                                alt366=1;
                            }
                            switch (alt366) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1222:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8921); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8923);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1223:8: ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    int alt365=2;
                                    int LA365_0 = input.LA(1);

                                    if ( (LA365_0==DELIMITER1) ) {
                                        alt365=1;
                                    }
                                    switch (alt365) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1223:9: DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8934); 

                                            pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx8936);
                                            spec_sized_10_6_tx("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:9: ( line_obx2_1_post10_6 )?
                                            int alt364=2;
                                            int LA364_0 = input.LA(1);

                                            if ( (LA364_0==DELIMITER1) ) {
                                                alt364=1;
                                            }
                                            switch (alt364) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8947);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:8: spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_std_in_line_obx8964);
                    spec_const_10_3_std("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1226:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt372=2;
                    int LA372_0 = input.LA(1);

                    if ( (LA372_0==DELIMITER1) ) {
                        alt372=1;
                    }
                    switch (alt372) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1226:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8973); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8975);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1227:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt371=2;
                            int LA371_0 = input.LA(1);

                            if ( (LA371_0==DELIMITER1) ) {
                                alt371=1;
                            }
                            switch (alt371) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1227:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8985); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8987);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1228:8: ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt370=2;
                                    int LA370_0 = input.LA(1);

                                    if ( (LA370_0==DELIMITER1) ) {
                                        alt370=1;
                                    }
                                    switch (alt370) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1228:9: DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8998); 

                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx9000);
                                            st_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1228:55: ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop368:
                                            do {
                                                int alt368=2;
                                                int LA368_0 = input.LA(1);

                                                if ( (LA368_0==REPETITEUR) ) {
                                                    alt368=1;
                                                }


                                                switch (alt368) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1228:56: REPETITEUR st_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx9004); 

                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx9006);
                                            	    st_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop368;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:9: ( line_obx2_1_post10_6 )?
                                            int alt369=2;
                                            int LA369_0 = input.LA(1);

                                            if ( (LA369_0==DELIMITER1) ) {
                                                alt369=1;
                                            }
                                            switch (alt369) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx9019);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx"



    // $ANTLR start "line_obx2_1_post10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1231:1: line_obx2_1_post10_6 : ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) ;
    public final void line_obx2_1_post10_6() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1231:21: ( ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1232:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1232:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1232:6: DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69040); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69042);
            st_sized_optionnal("OBX.7", 20);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1233:6: ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( (LA387_0==DELIMITER1) ) {
                alt387=1;
            }
            switch (alt387) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1233:7: DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69051); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69053);
                    st_sized_optionnal("OBX.8", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1233:50: ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )*
                    loop374:
                    do {
                        int alt374=2;
                        int LA374_0 = input.LA(1);

                        if ( (LA374_0==REPETITEUR) ) {
                            alt374=1;
                        }


                        switch (alt374) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1233:51: REPETITEUR st_sized_optionnal[\"OBX.8\", 60]
                    	    {
                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_69057); 

                    	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69059);
                    	    st_sized_optionnal("OBX.8", 60);

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop374;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:7: ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt386=2;
                    int LA386_0 = input.LA(1);

                    if ( (LA386_0==DELIMITER1) ) {
                        alt386=1;
                    }
                    switch (alt386) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:8: DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69071); 

                            pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_69073);
                            spec_const_10_9("OBX.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:44: ( REPETITEUR spec_const_10_9[\"OBX.9\"] )*
                            loop375:
                            do {
                                int alt375=2;
                                int LA375_0 = input.LA(1);

                                if ( (LA375_0==REPETITEUR) ) {
                                    alt375=1;
                                }


                                switch (alt375) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1234:45: REPETITEUR spec_const_10_9[\"OBX.9\"]
                            	    {
                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_69077); 

                            	    pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_69079);
                            	    spec_const_10_9("OBX.9");

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop375;
                                }
                            } while (true);


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1235:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt385=2;
                            int LA385_0 = input.LA(1);

                            if ( (LA385_0==DELIMITER1) ) {
                                alt385=1;
                            }
                            switch (alt385) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1235:9: DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69092); 

                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_69094);
                                    nm_sized_optionnal("OBX.10", 5);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:9: ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt384=2;
                                    int LA384_0 = input.LA(1);

                                    if ( (LA384_0==DELIMITER1) ) {
                                        alt384=1;
                                    }
                                    switch (alt384) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:10: DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69106); 

                                            pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_69108);
                                            spec_const_10_11("OBX.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:48: ( REPETITEUR spec_const_10_11[\"OBX.11\"] )*
                                            loop376:
                                            do {
                                                int alt376=2;
                                                int LA376_0 = input.LA(1);

                                                if ( (LA376_0==REPETITEUR) ) {
                                                    alt376=1;
                                                }


                                                switch (alt376) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:49: REPETITEUR spec_const_10_11[\"OBX.11\"]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_69112); 

                                            	    pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_69114);
                                            	    spec_const_10_11("OBX.11");

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop376;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1237:10: ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt383=2;
                                            int LA383_0 = input.LA(1);

                                            if ( (LA383_0==DELIMITER1) ) {
                                                alt383=1;
                                            }
                                            switch (alt383) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1237:11: DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69129); 

                                                    pushFollow(FOLLOW_spec_const_10_12_in_line_obx2_1_post10_69131);
                                                    spec_const_10_12("OBX.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1238:11: ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt382=2;
                                                    int LA382_0 = input.LA(1);

                                                    if ( (LA382_0==DELIMITER1) ) {
                                                        alt382=1;
                                                    }
                                                    switch (alt382) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1238:12: DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69146); 

                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_69148);
                                                            ts_sized_optionnal("OBX.13", 26);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1239:12: ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            int alt381=2;
                                                            int LA381_0 = input.LA(1);

                                                            if ( (LA381_0==DELIMITER1) ) {
                                                                alt381=1;
                                                            }
                                                            switch (alt381) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1239:13: DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69164); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69166);
                                                                    st_sized_optionnal("OBX.14", 20);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1240:13: ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    int alt380=2;
                                                                    int LA380_0 = input.LA(1);

                                                                    if ( (LA380_0==DELIMITER1) ) {
                                                                        alt380=1;
                                                                    }
                                                                    switch (alt380) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1240:14: DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69182); 

                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_69184);
                                                                            ts_sized_optionnal("OBX.15", 26);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1241:14: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            int alt379=2;
                                                                            int LA379_0 = input.LA(1);

                                                                            if ( (LA379_0==DELIMITER1) ) {
                                                                                alt379=1;
                                                                            }
                                                                            switch (alt379) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1241:15: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69201); 

                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_69203);
                                                                                    spec_sized_mult_lvl1_st_optionnal_6("OBX.16", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1242:15: ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    int alt378=2;
                                                                                    int LA378_0 = input.LA(1);

                                                                                    if ( (LA378_0==DELIMITER1) ) {
                                                                                        alt378=1;
                                                                                    }
                                                                                    switch (alt378) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1242:16: DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69221); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69223);
                                                                                            st_sized_optionnal("OBX.17", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1242:60: ( DELIMITER1 )?
                                                                                            int alt377=2;
                                                                                            int LA377_0 = input.LA(1);

                                                                                            if ( (LA377_0==DELIMITER1) ) {
                                                                                                alt377=1;
                                                                                            }
                                                                                            switch (alt377) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1242:60: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_69226); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx2_1_post10_6"



    // $ANTLR start "line_obx_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1244:1: line_obx_crapy : ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obx_crapy() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1246:23: ( ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1247:3: ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1247:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1247:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx_crapy9267); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx_crapy9269); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx_crapy9271); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx_crapy9273); 

            }


            startElement("OBX.1");content("OBX");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1248:3: ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==DELIMITER1) ) {
                alt404=1;
            }
            switch (alt404) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1248:4: DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9281); 

                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9283);
                    crapy_repet("OBX.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1249:4: ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt403=2;
                    int LA403_0 = input.LA(1);

                    if ( (LA403_0==DELIMITER1) ) {
                        alt403=1;
                    }
                    switch (alt403) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1249:5: DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9290); 

                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9292);
                            crapy_repet("OBX.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1250:5: ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt402=2;
                            int LA402_0 = input.LA(1);

                            if ( (LA402_0==DELIMITER1) ) {
                                alt402=1;
                            }
                            switch (alt402) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1250:6: DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9300); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9302);
                                    crapy_repet("OBX.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1251:6: ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt401=2;
                                    int LA401_0 = input.LA(1);

                                    if ( (LA401_0==DELIMITER1) ) {
                                        alt401=1;
                                    }
                                    switch (alt401) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1251:7: DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9311); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9313);
                                            crapy_repet("OBX.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1252:7: ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt400=2;
                                            int LA400_0 = input.LA(1);

                                            if ( (LA400_0==DELIMITER1) ) {
                                                alt400=1;
                                            }
                                            switch (alt400) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1252:8: DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9323); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9325);
                                                    crapy_repet("OBX.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:8: ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt399=2;
                                                    int LA399_0 = input.LA(1);

                                                    if ( (LA399_0==DELIMITER1) ) {
                                                        alt399=1;
                                                    }
                                                    switch (alt399) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:9: DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9336); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9338);
                                                            crapy_repet("OBX.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1254:9: ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt398=2;
                                                            int LA398_0 = input.LA(1);

                                                            if ( (LA398_0==DELIMITER1) ) {
                                                                alt398=1;
                                                            }
                                                            switch (alt398) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1254:10: DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9350); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9352);
                                                                    crapy_repet("OBX.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1255:10: ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                    int alt397=2;
                                                                    int LA397_0 = input.LA(1);

                                                                    if ( (LA397_0==DELIMITER1) ) {
                                                                        alt397=1;
                                                                    }
                                                                    switch (alt397) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1255:11: DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9365); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9367);
                                                                            crapy_repet("OBX.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1256:11: ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                            int alt396=2;
                                                                            int LA396_0 = input.LA(1);

                                                                            if ( (LA396_0==DELIMITER1) ) {
                                                                                alt396=1;
                                                                            }
                                                                            switch (alt396) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1256:12: DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9381); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9383);
                                                                                    crapy_repet("OBX.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1257:12: ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                    int alt395=2;
                                                                                    int LA395_0 = input.LA(1);

                                                                                    if ( (LA395_0==DELIMITER1) ) {
                                                                                        alt395=1;
                                                                                    }
                                                                                    switch (alt395) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1257:13: DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9398); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9400);
                                                                                            crapy_repet("OBX.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1258:13: ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                            int alt394=2;
                                                                                            int LA394_0 = input.LA(1);

                                                                                            if ( (LA394_0==DELIMITER1) ) {
                                                                                                alt394=1;
                                                                                            }
                                                                                            switch (alt394) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1258:14: DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9416); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9418);
                                                                                                    crapy_repet("OBX.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1259:14: ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                    int alt393=2;
                                                                                                    int LA393_0 = input.LA(1);

                                                                                                    if ( (LA393_0==DELIMITER1) ) {
                                                                                                        alt393=1;
                                                                                                    }
                                                                                                    switch (alt393) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1259:15: DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9436); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9438);
                                                                                                            crapy_repet("OBX.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1260:15: ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                            int alt392=2;
                                                                                                            int LA392_0 = input.LA(1);

                                                                                                            if ( (LA392_0==DELIMITER1) ) {
                                                                                                                alt392=1;
                                                                                                            }
                                                                                                            switch (alt392) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1260:16: DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9457); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9459);
                                                                                                                    crapy_repet("OBX.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1261:16: ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )?
                                                                                                                    int alt391=2;
                                                                                                                    int LA391_0 = input.LA(1);

                                                                                                                    if ( (LA391_0==DELIMITER1) ) {
                                                                                                                        alt391=1;
                                                                                                                    }
                                                                                                                    switch (alt391) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1261:17: DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9478); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9480);
                                                                                                                            crapy_repet("OBX.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1262:17: ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )?
                                                                                                                            int alt390=2;
                                                                                                                            int LA390_0 = input.LA(1);

                                                                                                                            if ( (LA390_0==DELIMITER1) ) {
                                                                                                                                alt390=1;
                                                                                                                            }
                                                                                                                            switch (alt390) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1262:18: DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9500); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9502);
                                                                                                                                    crapy_repet("OBX.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1263:18: ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )?
                                                                                                                                    int alt389=2;
                                                                                                                                    int LA389_0 = input.LA(1);

                                                                                                                                    if ( (LA389_0==DELIMITER1) ) {
                                                                                                                                        alt389=1;
                                                                                                                                    }
                                                                                                                                    switch (alt389) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1263:19: DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9523); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9525);
                                                                                                                                            crapy_repet("OBX.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1264:19: ( DELIMITER1 )?
                                                                                                                                            int alt388=2;
                                                                                                                                            int LA388_0 = input.LA(1);

                                                                                                                                            if ( (LA388_0==DELIMITER1) ) {
                                                                                                                                                alt388=1;
                                                                                                                                            }
                                                                                                                                            switch (alt388) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1264:19: DELIMITER1
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9546); 

                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx_crapy"



    // $ANTLR start "line_c"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1267:1: line_c : CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? ;
    public final void line_c() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1269:22: ( CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1270:3: CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )?
            {
            match(input,CR,FOLLOW_CR_in_line_c9597); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c9599); 

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9603); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_c9605);
            nm_integer_sized_mandatory("C.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9610); 

            pushFollow(FOLLOW_spec_const_12_3_in_line_c9612);
            spec_const_12_3("C.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9617); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_c9619);
            st_sized_optionnal("C.4", 64000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1273:47: ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )*
            loop405:
            do {
                int alt405=2;
                int LA405_0 = input.LA(1);

                if ( (LA405_0==REPETITEUR) ) {
                    alt405=1;
                }


                switch (alt405) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1273:48: REPETITEUR st_sized_optionnal[\"C.4\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_c9623); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_c9625);
            	    st_sized_optionnal("C.4", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop405;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1274:3: ( DELIMITER1 )?
            int alt406=2;
            int LA406_0 = input.LA(1);

            if ( (LA406_0==DELIMITER1) ) {
                alt406=1;
            }
            switch (alt406) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1274:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9634); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c"



    // $ANTLR start "line_c_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1276:1: line_c_crapy : CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_c_crapy() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1278:22: ( CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1279:3: CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_c_crapy9652); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c_crapy9654); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1280:3: ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )?
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( (LA410_0==DELIMITER1) ) {
                alt410=1;
            }
            switch (alt410) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1280:4: DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9659); 

                    pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9661);
                    crapy_repet("C.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1281:4: ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )?
                    int alt409=2;
                    int LA409_0 = input.LA(1);

                    if ( (LA409_0==DELIMITER1) ) {
                        alt409=1;
                    }
                    switch (alt409) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1281:5: DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9668); 

                            pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9670);
                            crapy_repet("C.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:5: ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )?
                            int alt408=2;
                            int LA408_0 = input.LA(1);

                            if ( (LA408_0==DELIMITER1) ) {
                                alt408=1;
                            }
                            switch (alt408) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:6: DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9678); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9680);
                                    crapy_repet("C.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1283:6: ( DELIMITER1 )?
                                    int alt407=2;
                                    int LA407_0 = input.LA(1);

                                    if ( (LA407_0==DELIMITER1) ) {
                                        alt407=1;
                                    }
                                    switch (alt407) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1283:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9690); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c_crapy"



    // $ANTLR start "line_l"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1286:1: line_l : CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1288:22: ( CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1289:3: CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l9715); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l9717); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1290:3: ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==DELIMITER1) ) {
                alt416=1;
            }
            switch (alt416) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1290:4: DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9722); 

                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9724);
                    nm_integer_sized_optionnal("L.2", 1);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1291:4: ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    int alt415=2;
                    int LA415_0 = input.LA(1);

                    if ( (LA415_0==DELIMITER1) ) {
                        alt415=1;
                    }
                    switch (alt415) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1291:5: DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9731); 

                            pushFollow(FOLLOW_spec_const_race_in_line_l9733);
                            spec_const_race("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1292:5: ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            int alt414=2;
                            int LA414_0 = input.LA(1);

                            if ( (LA414_0==DELIMITER1) ) {
                                alt414=1;
                            }
                            switch (alt414) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1292:6: DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9741); 

                                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9743);
                                    nm_integer_sized_optionnal("L.4", 4);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1293:6: ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    int alt413=2;
                                    int LA413_0 = input.LA(1);

                                    if ( (LA413_0==DELIMITER1) ) {
                                        alt413=1;
                                    }
                                    switch (alt413) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1293:7: DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9752); 

                                            pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9754);
                                            nm_integer_sized_optionnal("L.5", 10);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:7: ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            int alt412=2;
                                            int LA412_0 = input.LA(1);

                                            if ( (LA412_0==DELIMITER1) ) {
                                                alt412=1;
                                            }
                                            switch (alt412) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:8: DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9764); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_l9766);
                                                    st_sized_optionnal("L.6", 12);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:49: ( DELIMITER1 )?
                                                    int alt411=2;
                                                    int LA411_0 = input.LA(1);

                                                    if ( (LA411_0==DELIMITER1) ) {
                                                        alt411=1;
                                                    }
                                                    switch (alt411) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:49: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9769); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l"



    // $ANTLR start "line_l_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1296:1: line_l_crapy : CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l_crapy() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1298:22: ( CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1299:3: CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l_crapy9797); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l_crapy9799); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1300:3: ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )?
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==DELIMITER1) ) {
                alt422=1;
            }
            switch (alt422) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1300:4: DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9804); 

                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9806);
                    crapy_repet("L.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1301:4: ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )?
                    int alt421=2;
                    int LA421_0 = input.LA(1);

                    if ( (LA421_0==DELIMITER1) ) {
                        alt421=1;
                    }
                    switch (alt421) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1301:5: DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9813); 

                            pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9815);
                            crapy_repet("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1302:5: ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )?
                            int alt420=2;
                            int LA420_0 = input.LA(1);

                            if ( (LA420_0==DELIMITER1) ) {
                                alt420=1;
                            }
                            switch (alt420) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1302:6: DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9823); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9825);
                                    crapy_repet("L.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1303:6: ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )?
                                    int alt419=2;
                                    int LA419_0 = input.LA(1);

                                    if ( (LA419_0==DELIMITER1) ) {
                                        alt419=1;
                                    }
                                    switch (alt419) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1303:7: DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9834); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9836);
                                            crapy_repet("L.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1304:7: ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )?
                                            int alt418=2;
                                            int LA418_0 = input.LA(1);

                                            if ( (LA418_0==DELIMITER1) ) {
                                                alt418=1;
                                            }
                                            switch (alt418) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1304:8: DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9846); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9848);
                                                    crapy_repet("L.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1305:8: ( DELIMITER1 )?
                                                    int alt417=2;
                                                    int LA417_0 = input.LA(1);

                                                    if ( (LA417_0==DELIMITER1) ) {
                                                        alt417=1;
                                                    }
                                                    switch (alt417) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1305:8: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9858); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l_crapy"



    // $ANTLR start "crapy_repet"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1309:1: crapy_repet[String nameElement] : crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? ;
    public final void crapy_repet(String nameElement) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1309:33: ( crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1310:3: crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )?
            {
            pushFollow(FOLLOW_crapy_champ_full_in_crapy_repet9882);
            crapy_champ_full(nameElement);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1310:34: ( REPETITEUR crapy_repet[$nameElement] )?
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==REPETITEUR) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1310:35: REPETITEUR crapy_repet[$nameElement]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_crapy_repet9886); 

                    pushFollow(FOLLOW_crapy_repet_in_crapy_repet9888);
                    crapy_repet(nameElement);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_repet"



    // $ANTLR start "crapy_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1312:1: crapy_champ_full[String nameElement] : ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1314:22: ( ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1315:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1315:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            int alt424=3;
            alt424 = dfa424.predict(input);
            switch (alt424) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1315:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_champ_full9910);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1316:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1316:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1316:5: crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9918);
                    crapy_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_full9925);
                    crapy_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_full"



    // $ANTLR start "crapy_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1320:1: crapy_champ_ordered[String nameElement, int order] : DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1320:52: ( DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1321:3: DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_crapy_champ_ordered9943); 

            pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9945);
            crapy_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1322:3: ( crapy_champ_ordered[$nameElement, $order + 1] )?
            int alt425=2;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==DELIMITER2) ) {
                alt425=1;
            }
            switch (alt425) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1322:3: crapy_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9950);
                    crapy_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_ordered"



    // $ANTLR start "crapy_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1324:1: crapy_sous_champ_full[String nameElement] : ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1326:22: ( ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1327:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1327:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            int alt426=3;
            alt426 = dfa426.predict(input);
            switch (alt426) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1327:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_sous_champ_full9973);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1328:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1328:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1328:5: crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9981);
                    crapy_sous_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9987);
                    crapy_sous_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_full"



    // $ANTLR start "crapy_sous_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1332:1: crapy_sous_champ_ordered[String nameElement, int order] : DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_sous_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1332:57: ( DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1333:3: DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered10005); 

            pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered10007);
            crapy_sous_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1334:5: ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            int alt427=2;
            int LA427_0 = input.LA(1);

            if ( (LA427_0==DELIMITER3) ) {
                alt427=1;
            }
            switch (alt427) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1334:5: crapy_sous_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered10014);
                    crapy_sous_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_ordered"



    // $ANTLR start "crapy_sous_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1336:1: crapy_sous_sous_champ_full[String nameElement] : final_st ;
    public final void crapy_sous_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1338:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1339:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_crapy_sous_sous_champ_full10034);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_sous_champ_full"



    // $ANTLR start "spec_act_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1348:1: spec_act_11[String nameElement] : ( final_HR | final_RX | final_charR );
    public final void spec_act_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1350:22: ( final_HR | final_RX | final_charR )
            int alt428=3;
            int LA428_0 = input.LA(1);

            if ( (LA428_0==CHARH) ) {
                alt428=1;
            }
            else if ( (LA428_0==CHARR) ) {
                int LA428_2 = input.LA(2);

                if ( (LA428_2==CHARX) ) {
                    alt428=2;
                }
                else if ( ((LA428_2 >= CR && LA428_2 <= DELIMITER1)) ) {
                    alt428=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 428, 2, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 428, 0, input);

                throw nvae;

            }
            switch (alt428) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1351:3: final_HR
                    {
                    pushFollow(FOLLOW_final_HR_in_spec_act_1110061);
                    final_HR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1351:14: final_RX
                    {
                    pushFollow(FOLLOW_final_RX_in_spec_act_1110065);
                    final_RX();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1351:25: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_act_1110069);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_act_11"



    // $ANTLR start "spec_p_or_m"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1353:1: spec_p_or_m[String nameElement] : ( final_symbol_plus | final_symbol_moins );
    public final void spec_p_or_m(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1355:22: ( final_symbol_plus | final_symbol_moins )
            int alt429=2;
            int LA429_0 = input.LA(1);

            if ( (LA429_0==PLUS) ) {
                alt429=1;
            }
            else if ( (LA429_0==MOINS) ) {
                alt429=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 429, 0, input);

                throw nvae;

            }
            switch (alt429) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1356:3: final_symbol_plus
                    {
                    pushFollow(FOLLOW_final_symbol_plus_in_spec_p_or_m10087);
                    final_symbol_plus();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1356:23: final_symbol_moins
                    {
                    pushFollow(FOLLOW_final_symbol_moins_in_spec_p_or_m10091);
                    final_symbol_moins();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_p_or_m"


    public static class spec_ac_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_ac_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1358:1: spec_ac_8[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] ;
    public final HPRIMSParser.spec_ac_8_return spec_ac_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_ac_8_return retval = new HPRIMSParser.spec_ac_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1360:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1361:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_810111);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_810116); 

            pushFollow(FOLLOW_spec_ac_8_2_in_spec_ac_810118);
            spec_ac_8_2(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_810123); 

            pushFollow(FOLLOW_spec_ac_8_3_in_spec_ac_810125);
            spec_ac_8_3(nameElement + ".3");

            state._fsp--;


            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_810130);
            nm_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_ac_8"



    // $ANTLR start "spec_ac_8_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:1: spec_ac_8_2[String nameElement] : ( final_TM | final_TR | final_FR );
    public final void spec_ac_8_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1369:22: ( final_TM | final_TR | final_FR )
            int alt430=3;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==CHART) ) {
                int LA430_1 = input.LA(2);

                if ( (LA430_1==CHARM) ) {
                    alt430=1;
                }
                else if ( (LA430_1==CHARR) ) {
                    alt430=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 430, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA430_0==CHARF) ) {
                alt430=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 430, 0, input);

                throw nvae;

            }
            switch (alt430) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1370:3: final_TM
                    {
                    pushFollow(FOLLOW_final_TM_in_spec_ac_8_210153);
                    final_TM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1370:14: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_210157);
                    final_TR();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1370:25: final_FR
                    {
                    pushFollow(FOLLOW_final_FR_in_spec_ac_8_210161);
                    final_FR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_2"



    // $ANTLR start "spec_ac_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1372:1: spec_ac_8_3[String nameElement] : ( final_PF | final_SS | final_TR );
    public final void spec_ac_8_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1374:22: ( final_PF | final_SS | final_TR )
            int alt431=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt431=1;
                }
                break;
            case CHARS:
                {
                alt431=2;
                }
                break;
            case CHART:
                {
                alt431=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 431, 0, input);

                throw nvae;

            }

            switch (alt431) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1375:3: final_PF
                    {
                    pushFollow(FOLLOW_final_PF_in_spec_ac_8_310181);
                    final_PF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1375:14: final_SS
                    {
                    pushFollow(FOLLOW_final_SS_in_spec_ac_8_310185);
                    final_SS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1375:25: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_310189);
                    final_TR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_3"



    // $ANTLR start "spec_on_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1377:1: spec_on_optionnal[String nameElement] : ( final_charO | final_charN )? ;
    public final void spec_on_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1379:22: ( ( final_charO | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:3: ( final_charO | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:3: ( final_charO | final_charN )?
            int alt432=3;
            int LA432_0 = input.LA(1);

            if ( (LA432_0==CHARO) ) {
                alt432=1;
            }
            else if ( (LA432_0==CHARN) ) {
                alt432=2;
            }
            switch (alt432) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:4: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_on_optionnal10208);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:18: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_on_optionnal10212);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_on_optionnal"



    // $ANTLR start "spec_const_sexe"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1382:1: spec_const_sexe[String nameElement] : ( final_charM | final_charF | final_charU )? ;
    public final void spec_const_sexe(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1384:22: ( ( final_charM | final_charF | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:3: ( final_charM | final_charF | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:3: ( final_charM | final_charF | final_charU )?
            int alt433=4;
            switch ( input.LA(1) ) {
                case CHARM:
                    {
                    alt433=1;
                    }
                    break;
                case CHARF:
                    {
                    alt433=2;
                    }
                    break;
                case CHARU:
                    {
                    alt433=3;
                    }
                    break;
            }

            switch (alt433) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:4: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_sexe10233);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:18: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_sexe10237);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:32: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_sexe10241);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_sexe"



    // $ANTLR start "spec_const_race"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1387:1: spec_const_race[String nameElement] :;
    public final void spec_const_race(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1389:22: ()
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1390:3: 
            {
            }

            endElement();
        }
        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_race"



    // $ANTLR start "spec_const_7_13_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1392:1: spec_const_7_13_version_2_0[String nameElement] : spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1394:22: ( spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1395:3: spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_010278);
            spec_const_7_13_1_version_2_0(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_010281); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_010283);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_0"



    // $ANTLR start "spec_const_7_13_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1397:1: spec_const_7_13_version_2_1[String nameElement] : spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:22: ( spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:3: spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_110304);
            spec_const_7_13_1_version_2_1(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_110307); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_110309);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_1"



    // $ANTLR start "spec_const_7_13_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1402:1: spec_const_7_13_version_2_2[String nameElement] : spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1404:22: ( spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:3: spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_210328);
            spec_const_7_13_1_version_2_2(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_210331); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_210333);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_2"



    // $ANTLR start "spec_const_7_13_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1407:1: spec_const_7_13_2[String nameElement] : ( final_charC | final_charL | final_charR );
    public final void spec_const_7_13_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1409:22: ( final_charC | final_charL | final_charR )
            int alt434=3;
            switch ( input.LA(1) ) {
            case CHARC:
                {
                alt434=1;
                }
                break;
            case CHARL:
                {
                alt434=2;
                }
                break;
            case CHARR:
                {
                alt434=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 434, 0, input);

                throw nvae;

            }

            switch (alt434) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1410:3: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_7_13_210352);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1410:17: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_7_13_210356);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1410:31: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_7_13_210360);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_2"



    // $ANTLR start "spec_const_7_7_contexte_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1412:1: spec_const_7_7_contexte_ORU[String nameElement] : final_ORU ;
    public final void spec_const_7_7_contexte_ORU(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1414:22: ( final_ORU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1415:3: final_ORU
            {
            pushFollow(FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU10378);
            final_ORU();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORU"



    // $ANTLR start "spec_const_7_7_contexte_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1417:1: spec_const_7_7_contexte_ORM[String nameElement] : final_ORM ;
    public final void spec_const_7_7_contexte_ORM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1419:22: ( final_ORM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1420:3: final_ORM
            {
            pushFollow(FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM10396);
            final_ORM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORM"



    // $ANTLR start "spec_const_7_7_contexte_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1422:1: spec_const_7_7_contexte_ORA[String nameElement] : final_ORA ;
    public final void spec_const_7_7_contexte_ORA(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1424:22: ( final_ORA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1425:3: final_ORA
            {
            pushFollow(FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA10414);
            final_ORA();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORA"



    // $ANTLR start "spec_const_7_7_contexte_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1427:1: spec_const_7_7_contexte_ADM[String nameElement] : final_ADM ;
    public final void spec_const_7_7_contexte_ADM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1429:22: ( final_ADM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1430:3: final_ADM
            {
            pushFollow(FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM10432);
            final_ADM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ADM"



    // $ANTLR start "spec_const_7_7_contexte_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1432:1: spec_const_7_7_contexte_FAC[String nameElement] : final_FAC ;
    public final void spec_const_7_7_contexte_FAC(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1434:22: ( final_FAC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1435:3: final_FAC
            {
            pushFollow(FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC10452);
            final_FAC();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_FAC"



    // $ANTLR start "spec_const_7_7_contexte_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:1: spec_const_7_7_contexte_REG[String nameElement] : final_REG ;
    public final void spec_const_7_7_contexte_REG(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:22: ( final_REG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1440:3: final_REG
            {
            pushFollow(FOLLOW_final_REG_in_spec_const_7_7_contexte_REG10470);
            final_REG();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_REG"



    // $ANTLR start "spec_const_7_7_contexte_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1442:1: spec_const_7_7_contexte_NS[String nameElement] : final_NS ;
    public final void spec_const_7_7_contexte_NS(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:22: ( final_NS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1445:3: final_NS
            {
            pushFollow(FOLLOW_final_NS_in_spec_const_7_7_contexte_NS10488);
            final_NS();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_NS"



    // $ANTLR start "spec_const_7_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1447:1: spec_const_7_12[String nameElement] : ( final_charP | final_charD | final_charT ) ;
    public final void spec_const_7_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:22: ( ( final_charP | final_charD | final_charT ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:3: ( final_charP | final_charD | final_charT )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:3: ( final_charP | final_charD | final_charT )
            int alt435=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt435=1;
                }
                break;
            case CHARD:
                {
                alt435=2;
                }
                break;
            case CHART:
                {
                alt435=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 435, 0, input);

                throw nvae;

            }

            switch (alt435) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_7_1210507);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:18: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_7_1210511);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:32: final_charT
                    {
                    pushFollow(FOLLOW_final_charT_in_spec_const_7_1210515);
                    final_charT();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_12"



    // $ANTLR start "spec_const_9_31"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1452:1: spec_const_9_31[String nameElement] : ( final_PORT | final_CART | final_WHLC | final_WALK )? ;
    public final void spec_const_9_31(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:22: ( ( final_PORT | final_CART | final_WHLC | final_WALK )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            int alt436=5;
            switch ( input.LA(1) ) {
                case CHARP:
                    {
                    alt436=1;
                    }
                    break;
                case CHARC:
                    {
                    alt436=2;
                    }
                    break;
                case CHARW:
                    {
                    int LA436_3 = input.LA(2);

                    if ( (LA436_3==CHARH) ) {
                        alt436=3;
                    }
                    else if ( (LA436_3==CHARA) ) {
                        alt436=4;
                    }
                    }
                    break;
            }

            switch (alt436) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:4: final_PORT
                    {
                    pushFollow(FOLLOW_final_PORT_in_spec_const_9_3110535);
                    final_PORT();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:17: final_CART
                    {
                    pushFollow(FOLLOW_final_CART_in_spec_const_9_3110539);
                    final_CART();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:30: final_WHLC
                    {
                    pushFollow(FOLLOW_final_WHLC_in_spec_const_9_3110543);
                    final_WHLC();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:43: final_WALK
                    {
                    pushFollow(FOLLOW_final_WALK_in_spec_const_9_3110547);
                    final_WALK();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_31"



    // $ANTLR start "spec_const_8_25"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1457:1: spec_const_8_25[String nameElement] : ( final_OP | final_IP | final_ER | final_PA | final_MP )? ;
    public final void spec_const_8_25(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1459:22: ( ( final_OP | final_IP | final_ER | final_PA | final_MP )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            int alt437=6;
            switch ( input.LA(1) ) {
                case CHARO:
                    {
                    alt437=1;
                    }
                    break;
                case CHARI:
                    {
                    alt437=2;
                    }
                    break;
                case CHARE:
                    {
                    alt437=3;
                    }
                    break;
                case CHARP:
                    {
                    alt437=4;
                    }
                    break;
                case CHARM:
                    {
                    alt437=5;
                    }
                    break;
            }

            switch (alt437) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:4: final_OP
                    {
                    pushFollow(FOLLOW_final_OP_in_spec_const_8_2510568);
                    final_OP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:15: final_IP
                    {
                    pushFollow(FOLLOW_final_IP_in_spec_const_8_2510572);
                    final_IP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:26: final_ER
                    {
                    pushFollow(FOLLOW_final_ER_in_spec_const_8_2510576);
                    final_ER();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:37: final_PA
                    {
                    pushFollow(FOLLOW_final_PA_in_spec_const_8_2510580);
                    final_PA();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:48: final_MP
                    {
                    pushFollow(FOLLOW_final_MP_in_spec_const_8_2510584);
                    final_MP();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_8_25"



    // $ANTLR start "spec_const_9_26"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1462:1: spec_const_9_26[String nameElement] : ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? ;
    public final void spec_const_9_26(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1464:22: ( ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            int alt438=10;
            switch ( input.LA(1) ) {
                case CHARF:
                    {
                    alt438=1;
                    }
                    break;
                case CHARP:
                    {
                    alt438=2;
                    }
                    break;
                case CHARM:
                    {
                    alt438=3;
                    }
                    break;
                case CHARI:
                    {
                    alt438=4;
                    }
                    break;
                case CHARR:
                    {
                    alt438=5;
                    }
                    break;
                case CHARC:
                    {
                    alt438=6;
                    }
                    break;
                case CHARO:
                    {
                    alt438=7;
                    }
                    break;
                case CHARD:
                    {
                    alt438=8;
                    }
                    break;
                case CHARX:
                    {
                    alt438=9;
                    }
                    break;
            }

            switch (alt438) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:4: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_9_2610605);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_9_2610609);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:32: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_9_2610613);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:46: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_9_2610617);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:60: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_9_2610621);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:74: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_9_2610625);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1465:88: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_const_9_2610629);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1466:3: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_9_2610635);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1466:17: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_9_2610639);
                    final_charX();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_26"


    public static class spec_const_10_3_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1468:1: spec_const_10_3_nm[String nameElement] : CHARN CHARM ;
    public final HPRIMSParser.spec_const_10_3_nm_return spec_const_10_3_nm(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_nm_return retval = new HPRIMSParser.spec_const_10_3_nm_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1470:22: ( CHARN CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1471:3: CHARN CHARM
            {
            match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_nm10660); 

            match(input,CHARM,FOLLOW_CHARM_in_spec_const_10_3_nm10662); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_nm"


    public static class spec_const_10_3_ce_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_ce"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1473:1: spec_const_10_3_ce[String nameElement] : CHARC CHARE ;
    public final HPRIMSParser.spec_const_10_3_ce_return spec_const_10_3_ce(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_ce_return retval = new HPRIMSParser.spec_const_10_3_ce_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1475:22: ( CHARC CHARE )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1476:3: CHARC CHARE
            {
            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_ce10683); 

            match(input,CHARE,FOLLOW_CHARE_in_spec_const_10_3_ce10685); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_ce"


    public static class spec_const_10_3_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1478:1: spec_const_10_3_st[String nameElement] : CHARS CHART ;
    public final HPRIMSParser.spec_const_10_3_st_return spec_const_10_3_st(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_st_return retval = new HPRIMSParser.spec_const_10_3_st_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1480:22: ( CHARS CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1481:3: CHARS CHART
            {
            match(input,CHARS,FOLLOW_CHARS_in_spec_const_10_3_st10706); 

            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_st10708); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_st"


    public static class spec_const_10_3_gc_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_gc"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1483:1: spec_const_10_3_gc[String nameElement] : CHARG CHARC ;
    public final HPRIMSParser.spec_const_10_3_gc_return spec_const_10_3_gc(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_gc_return retval = new HPRIMSParser.spec_const_10_3_gc_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1485:22: ( CHARG CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1486:3: CHARG CHARC
            {
            match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_gc10729); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_gc10731); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_gc"


    public static class spec_const_10_3_tx_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1488:1: spec_const_10_3_tx[String nameElement] : CHART CHARX ;
    public final HPRIMSParser.spec_const_10_3_tx_return spec_const_10_3_tx(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_tx_return retval = new HPRIMSParser.spec_const_10_3_tx_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1490:22: ( CHART CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1491:3: CHART CHARX
            {
            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_tx10753); 

            match(input,CHARX,FOLLOW_CHARX_in_spec_const_10_3_tx10755); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_tx"


    public static class spec_const_10_3_fic_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_fic"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1493:1: spec_const_10_3_fic[String nameElement] : ( CHARF CHARI CHARC ) ;
    public final HPRIMSParser.spec_const_10_3_fic_return spec_const_10_3_fic(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_fic_return retval = new HPRIMSParser.spec_const_10_3_fic_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1495:22: ( ( CHARF CHARI CHARC ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1496:3: ( CHARF CHARI CHARC )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1496:3: ( CHARF CHARI CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1496:4: CHARF CHARI CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_spec_const_10_3_fic10776); 

            match(input,CHARI,FOLLOW_CHARI_in_spec_const_10_3_fic10778); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_fic10780); 

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_fic"


    public static class spec_const_10_3_std_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_std"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1498:1: spec_const_10_3_std[String nameElement] : ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) );
    public final HPRIMSParser.spec_const_10_3_std_return spec_const_10_3_std(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_std_return retval = new HPRIMSParser.spec_const_10_3_std_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1500:22: ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) )
            int alt439=8;
            switch ( input.LA(1) ) {
            case CHARA:
                {
                alt439=1;
                }
                break;
            case CHARC:
                {
                int LA439_2 = input.LA(2);

                if ( (LA439_2==CHARK) ) {
                    alt439=2;
                }
                else if ( (LA439_2==CHARN) ) {
                    alt439=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 439, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARD:
                {
                alt439=4;
                }
                break;
            case CHARP:
                {
                alt439=5;
                }
                break;
            case CHART:
                {
                alt439=6;
                }
                break;
            case CHARG:
                {
                int LA439_6 = input.LA(2);

                if ( (LA439_6==CHARB) ) {
                    alt439=7;
                }
                else if ( (LA439_6==CHARN) ) {
                    alt439=8;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 439, 6, input);

                    throw nvae;

                }
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 439, 0, input);

                throw nvae;

            }

            switch (alt439) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:3: ( CHARA CHARD )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:3: ( CHARA CHARD )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:4: CHARA CHARD
                    {
                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10802); 

                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10804); 

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:19: ( CHARC CHARK )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:19: ( CHARC CHARK )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:20: CHARC CHARK
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10810); 

                    match(input,CHARK,FOLLOW_CHARK_in_spec_const_10_3_std10812); 

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:35: ( CHARC CHARN CHARA )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:35: ( CHARC CHARN CHARA )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:36: CHARC CHARN CHARA
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10818); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10820); 

                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10822); 

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:57: ( CHARD CHART )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:57: ( CHARD CHART )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:58: CHARD CHART
                    {
                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10828); 

                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10830); 

                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:3: ( CHARP CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:3: ( CHARP CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:4: CHARP CHARN
                    {
                    match(input,CHARP,FOLLOW_CHARP_in_spec_const_10_3_std10838); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10840); 

                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:19: ( CHART CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:19: ( CHART CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1502:20: CHART CHARN
                    {
                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10846); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10848); 

                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:3: ( CHARG CHARB )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:3: ( CHARG CHARB )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:4: CHARG CHARB
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10856); 

                    match(input,CHARB,FOLLOW_CHARB_in_spec_const_10_3_std10858); 

                    }


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:19: ( CHARG CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:19: ( CHARG CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1503:20: CHARG CHARN
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10864); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10866); 

                    }


                    content(input.toString(retval.start,input.LT(-1)));

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_std"


    public static class spec_act_10_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_act_10"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1506:1: spec_act_10[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_act_10_return spec_act_10(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_act_10_return retval = new HPRIMSParser.spec_act_10_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1508:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1509:3: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010888);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1509:47: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )*
            loop440:
            do {
                int alt440=2;
                int LA440_0 = input.LA(1);

                if ( (LA440_0==REPETITEUR) ) {
                    alt440=1;
                }


                switch (alt440) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1509:48: REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_act_1010892); 

            	    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010894);
            	    st_non_sized_optionnal(nameElement + ".1");

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop440;
                }
            } while (true);


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_act_1010901); 

            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010903);
            st_non_sized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_act_10"


    public static class spec_fac_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_fac_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1513:1: spec_fac_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? ;
    public final HPRIMSParser.spec_fac_6_return spec_fac_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_fac_6_return retval = new HPRIMSParser.spec_fac_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1515:22: ( st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1516:3: st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610927);
            st_sized_optionnal(nameElement + ".1", 9);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1517:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            int alt442=2;
            int LA442_0 = input.LA(1);

            if ( (LA442_0==DELIMITER2) ) {
                alt442=1;
            }
            switch (alt442) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1517:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610933); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610935);
                    st_sized_optionnal(nameElement + ".2", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1518:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    int alt441=2;
                    int LA441_0 = input.LA(1);

                    if ( (LA441_0==DELIMITER2) ) {
                        alt441=1;
                    }
                    switch (alt441) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1518:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610942); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610944);
                            st_sized_optionnal(nameElement + ".3", 40);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_fac_6"


    public static class spec_reg_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_reg_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1521:1: spec_reg_4[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_reg_4_return spec_reg_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_reg_4_return retval = new HPRIMSParser.spec_reg_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1523:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1524:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_reg_410971);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_reg_410976); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_reg_410978);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_reg_4"


    public static class spec_sized_10_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1529:1: spec_sized_10_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? ;
    public final HPRIMSParser.spec_sized_10_6_return spec_sized_10_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_6_return retval = new HPRIMSParser.spec_sized_10_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1531:22: ( st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1532:3: st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_611002);
            st_sized_optionnal(nameElement + ".1", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1533:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( (LA444_0==DELIMITER2) ) {
                alt444=1;
            }
            switch (alt444) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1533:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_611008); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_611010);
                    st_sized_optionnal(nameElement + ".2", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1534:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    int alt443=2;
                    int LA443_0 = input.LA(1);

                    if ( (LA443_0==DELIMITER2) ) {
                        alt443=1;
                    }
                    switch (alt443) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1534:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_611017); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_611019);
                            st_sized_optionnal(nameElement + ".3", 10);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_6"



    // $ANTLR start "spec_const_10_9"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1537:1: spec_const_10_9[String nameElement] : ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? ;
    public final void spec_const_10_9(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1539:22: ( ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            int alt445=20;
            switch ( input.LA(1) ) {
                case CHARL:
                    {
                    int LA445_1 = input.LA(2);

                    if ( (LA445_1==CHARL) ) {
                        alt445=3;
                    }
                    else if ( ((LA445_1 >= CR && LA445_1 <= DELIMITER1)||LA445_1==REPETITEUR) ) {
                        alt445=1;
                    }
                    }
                    break;
                case CHARH:
                    {
                    int LA445_2 = input.LA(2);

                    if ( (LA445_2==CHARH) ) {
                        alt445=4;
                    }
                    else if ( ((LA445_2 >= CR && LA445_2 <= DELIMITER1)||LA445_2==REPETITEUR) ) {
                        alt445=2;
                    }
                    }
                    break;
                case CHAR_SYMBOL_INF:
                    {
                    alt445=5;
                    }
                    break;
                case CHAR_SYMBOL_SUP:
                    {
                    alt445=6;
                    }
                    break;
                case CHARN:
                    {
                    int LA445_5 = input.LA(2);

                    if ( (LA445_5==CHARu) ) {
                        alt445=10;
                    }
                    else if ( ((LA445_5 >= CR && LA445_5 <= DELIMITER1)||LA445_5==REPETITEUR) ) {
                        alt445=7;
                    }
                    }
                    break;
                case CHARA:
                    {
                    int LA445_6 = input.LA(2);

                    if ( (LA445_6==CHARA) ) {
                        alt445=9;
                    }
                    else if ( ((LA445_6 >= CR && LA445_6 <= DELIMITER1)||LA445_6==REPETITEUR) ) {
                        alt445=8;
                    }
                    }
                    break;
                case CHARU:
                    {
                    alt445=11;
                    }
                    break;
                case CHARD:
                    {
                    alt445=12;
                    }
                    break;
                case CHARB:
                    {
                    alt445=13;
                    }
                    break;
                case CHARW:
                    {
                    alt445=14;
                    }
                    break;
                case CHARR:
                    {
                    alt445=15;
                    }
                    break;
                case CHARI:
                    {
                    alt445=16;
                    }
                    break;
                case CHARS:
                    {
                    alt445=17;
                    }
                    break;
                case CHARM:
                    {
                    alt445=18;
                    }
                    break;
                case CHARV:
                    {
                    alt445=19;
                    }
                    break;
            }

            switch (alt445) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:4: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_10_911047);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:18: final_charH
                    {
                    pushFollow(FOLLOW_final_charH_in_spec_const_10_911051);
                    final_charH();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:32: final_LL
                    {
                    pushFollow(FOLLOW_final_LL_in_spec_const_10_911055);
                    final_LL();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:43: final_HH
                    {
                    pushFollow(FOLLOW_final_HH_in_spec_const_10_911059);
                    final_HH();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:54: final_symbol_inf
                    {
                    pushFollow(FOLLOW_final_symbol_inf_in_spec_const_10_911063);
                    final_symbol_inf();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1540:73: final_symbol_sup
                    {
                    pushFollow(FOLLOW_final_symbol_sup_in_spec_const_10_911067);
                    final_symbol_sup();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:3: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_911073);
                    final_charN();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:17: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_911077);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:31: final_AA
                    {
                    pushFollow(FOLLOW_final_AA_in_spec_const_10_911081);
                    final_AA();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:42: final_Null
                    {
                    pushFollow(FOLLOW_final_Null_in_spec_const_10_911085);
                    final_Null();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:55: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_911089);
                    final_charU();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:69: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_911093);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1541:83: final_charB
                    {
                    pushFollow(FOLLOW_final_charB_in_spec_const_10_911097);
                    final_charB();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:3: final_charW
                    {
                    pushFollow(FOLLOW_final_charW_in_spec_const_10_911103);
                    final_charW();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:17: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_911107);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:31: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_911111);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:45: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_911115);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:59: final_MS
                    {
                    pushFollow(FOLLOW_final_MS_in_spec_const_10_911119);
                    final_MS();

                    state._fsp--;


                    }
                    break;
                case 19 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1542:70: final_VS
                    {
                    pushFollow(FOLLOW_final_VS_in_spec_const_10_911123);
                    final_VS();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_9"



    // $ANTLR start "spec_const_10_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1544:1: spec_const_10_11[String nameElement] : ( final_charA | final_charS | final_charR | final_charN )? ;
    public final void spec_const_10_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1546:22: ( ( final_charA | final_charS | final_charR | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:3: ( final_charA | final_charS | final_charR | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:3: ( final_charA | final_charS | final_charR | final_charN )?
            int alt446=5;
            switch ( input.LA(1) ) {
                case CHARA:
                    {
                    alt446=1;
                    }
                    break;
                case CHARS:
                    {
                    alt446=2;
                    }
                    break;
                case CHARR:
                    {
                    alt446=3;
                    }
                    break;
                case CHARN:
                    {
                    alt446=4;
                    }
                    break;
            }

            switch (alt446) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:4: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_1111144);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:18: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_1111148);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:32: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1111152);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1547:46: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_1111156);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_11"



    // $ANTLR start "spec_const_10_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1549:1: spec_const_10_12[String nameElement] : ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? ;
    public final void spec_const_10_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1551:22: ( ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            int alt447=9;
            switch ( input.LA(1) ) {
                case CHARR:
                    {
                    alt447=1;
                    }
                    break;
                case CHARP:
                    {
                    alt447=2;
                    }
                    break;
                case CHARF:
                    {
                    alt447=3;
                    }
                    break;
                case CHARC:
                    {
                    alt447=4;
                    }
                    break;
                case CHARI:
                    {
                    alt447=5;
                    }
                    break;
                case CHARD:
                    {
                    alt447=6;
                    }
                    break;
                case CHARX:
                    {
                    alt447=7;
                    }
                    break;
                case CHARU:
                    {
                    alt447=8;
                    }
                    break;
            }

            switch (alt447) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:4: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1211177);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_10_1211181);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:32: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_10_1211185);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:46: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_10_1211189);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:60: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_1211193);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:74: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_1211197);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1553:4: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_10_1211204);
                    final_charX();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1553:18: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_1211208);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_12"



    // $ANTLR start "spec_const_12_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1555:1: spec_const_12_3[String nameElement] : ( final_charP | final_charL )? ;
    public final void spec_const_12_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1557:22: ( ( final_charP | final_charL )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1558:3: ( final_charP | final_charL )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1558:3: ( final_charP | final_charL )?
            int alt448=3;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==CHARP) ) {
                alt448=1;
            }
            else if ( (LA448_0==CHARL) ) {
                alt448=2;
            }
            switch (alt448) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1558:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_12_311229);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1558:18: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_12_311233);
                    final_charL();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_12_3"


    public static class spec_sized_mult_lvl1_st_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1560:1: spec_sized_mult_lvl1_st_mandatory_2[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return spec_sized_mult_lvl1_st_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1562:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1563:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_211253);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_211259); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_211261);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_2"


    public static class spec_sized_mult_lvl1_st_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1567:1: spec_sized_mult_lvl1_st_optionnal_2[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return spec_sized_mult_lvl1_st_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1569:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1570:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_211284);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1571:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==DELIMITER2) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1571:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_211290); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_211292);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_2"


    public static class spec_sized_mult_lvl1_st_optionnal_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1575:1: spec_sized_mult_lvl1_st_optionnal_4[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return spec_sized_mult_lvl1_st_optionnal_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1577:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1578:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411317);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1579:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==DELIMITER2) ) {
                alt452=1;
            }
            switch (alt452) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1579:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411323); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411325);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1580:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    int alt451=2;
                    int LA451_0 = input.LA(1);

                    if ( (LA451_0==DELIMITER2) ) {
                        alt451=1;
                    }
                    switch (alt451) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1580:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411332); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411334);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1581:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            int alt450=2;
                            int LA450_0 = input.LA(1);

                            if ( (LA450_0==DELIMITER2) ) {
                                alt450=1;
                            }
                            switch (alt450) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1581:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411342); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411344);
                                    st_non_sized_optionnal(nameElement + ".2");

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_4"


    public static class spec_sized_mult_lvl1_st_mandatory_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1585:1: spec_sized_mult_lvl1_st_mandatory_6[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return spec_sized_mult_lvl1_st_mandatory_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1587:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1588:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611373);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611379); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611381);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611388); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611390);
            st_nonsized_mandatory(nameElement + ".3");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611398); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611400);
            st_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611409); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611411);
            st_nonsized_mandatory(nameElement + ".5");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611421); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611423);
            st_nonsized_mandatory(nameElement + ".6");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_6"


    public static class spec_sized_mult_lvl1_st_optionnal_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1596:1: spec_sized_mult_lvl1_st_optionnal_6[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return spec_sized_mult_lvl1_st_optionnal_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1598:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1599:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611446);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1600:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==DELIMITER2) ) {
                alt457=1;
            }
            switch (alt457) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1600:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611453); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611455);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1601:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt456=2;
                    int LA456_0 = input.LA(1);

                    if ( (LA456_0==DELIMITER2) ) {
                        alt456=1;
                    }
                    switch (alt456) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1601:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611463); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611465);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1602:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt455=2;
                            int LA455_0 = input.LA(1);

                            if ( (LA455_0==DELIMITER2) ) {
                                alt455=1;
                            }
                            switch (alt455) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1602:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611474); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611476);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1603:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt454=2;
                                    int LA454_0 = input.LA(1);

                                    if ( (LA454_0==DELIMITER2) ) {
                                        alt454=1;
                                    }
                                    switch (alt454) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1603:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611486); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611488);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1604:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt453=2;
                                            int LA453_0 = input.LA(1);

                                            if ( (LA453_0==DELIMITER2) ) {
                                                alt453=1;
                                            }
                                            switch (alt453) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1604:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611499); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611501);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_6"


    public static class spec_sized_mult_lvl1_st_optionnal_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1608:1: spec_sized_mult_lvl1_st_optionnal_8[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return spec_sized_mult_lvl1_st_optionnal_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1610:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1611:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811534);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1612:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            int alt464=2;
            int LA464_0 = input.LA(1);

            if ( (LA464_0==DELIMITER2) ) {
                alt464=1;
            }
            switch (alt464) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1612:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811540); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811542);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1613:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    int alt463=2;
                    int LA463_0 = input.LA(1);

                    if ( (LA463_0==DELIMITER2) ) {
                        alt463=1;
                    }
                    switch (alt463) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1613:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811549); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811551);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1614:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            int alt462=2;
                            int LA462_0 = input.LA(1);

                            if ( (LA462_0==DELIMITER2) ) {
                                alt462=1;
                            }
                            switch (alt462) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1614:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811559); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811561);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1615:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    int alt461=2;
                                    int LA461_0 = input.LA(1);

                                    if ( (LA461_0==DELIMITER2) ) {
                                        alt461=1;
                                    }
                                    switch (alt461) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1615:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811570); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811572);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1616:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            int alt460=2;
                                            int LA460_0 = input.LA(1);

                                            if ( (LA460_0==DELIMITER2) ) {
                                                alt460=1;
                                            }
                                            switch (alt460) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1616:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811582); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811584);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1617:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    int alt459=2;
                                                    int LA459_0 = input.LA(1);

                                                    if ( (LA459_0==DELIMITER2) ) {
                                                        alt459=1;
                                                    }
                                                    switch (alt459) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1617:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            {
                                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811595); 

                                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811597);
                                                            st_non_sized_optionnal(nameElement + ".7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1618:9: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            int alt458=2;
                                                            int LA458_0 = input.LA(1);

                                                            if ( (LA458_0==DELIMITER2) ) {
                                                                alt458=1;
                                                            }
                                                            switch (alt458) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1618:10: DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"]
                                                                    {
                                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811609); 

                                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811611);
                                                                    st_non_sized_optionnal(nameElement + ".8");

                                                                    state._fsp--;


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_8"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1622:1: spec_sized_mult_lvl2_st_optionnal_3[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1624:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1625:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311648);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1626:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt466=2;
            int LA466_0 = input.LA(1);

            if ( (LA466_0==DELIMITER3) ) {
                alt466=1;
            }
            switch (alt466) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1626:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311654); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311656);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1627:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt465=2;
                    int LA465_0 = input.LA(1);

                    if ( (LA465_0==DELIMITER3) ) {
                        alt465=1;
                    }
                    switch (alt465) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1627:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311663); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311665);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_3"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1629:1: spec_sized_mult_lvl2_st_optionnal_6[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_6(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1631:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1632:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611688);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt471=2;
            int LA471_0 = input.LA(1);

            if ( (LA471_0==DELIMITER3) ) {
                alt471=1;
            }
            switch (alt471) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611694); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611696);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1634:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt470=2;
                    int LA470_0 = input.LA(1);

                    if ( (LA470_0==DELIMITER3) ) {
                        alt470=1;
                    }
                    switch (alt470) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1634:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611703); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611705);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1635:5: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt469=2;
                            int LA469_0 = input.LA(1);

                            if ( (LA469_0==DELIMITER3) ) {
                                alt469=1;
                            }
                            switch (alt469) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1635:6: DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611713); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611715);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1636:6: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt468=2;
                                    int LA468_0 = input.LA(1);

                                    if ( (LA468_0==DELIMITER3) ) {
                                        alt468=1;
                                    }
                                    switch (alt468) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1636:7: DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611724); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611726);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1637:7: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt467=2;
                                            int LA467_0 = input.LA(1);

                                            if ( (LA467_0==DELIMITER3) ) {
                                                alt467=1;
                                            }
                                            switch (alt467) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1637:8: DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611736); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611738);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_6"


    public static class spec_sized_mult_lvl1_nm_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1639:1: spec_sized_mult_lvl1_nm_optionnal_2[String nameElement, int maxSize] : nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return spec_sized_mult_lvl1_nm_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1641:22: ( nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1642:3: nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211767);
            nm_nonsized_optionnal(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211772); 

            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211774);
            nm_nonsized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_optionnal_2"


    public static class spec_sized_mult_lvl1_nm_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1646:1: spec_sized_mult_lvl1_nm_mandatory_2[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return spec_sized_mult_lvl1_nm_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1648:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1649:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211799);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211804); 

            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211806);
            nm_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_mandatory_2"


    public static class spec_sized_cna_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_cna"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1653:1: spec_sized_cna[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_cna_return spec_sized_cna(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_cna_return retval = new HPRIMSParser.spec_sized_cna_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1655:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1656:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11829);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1657:4: ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt473=2;
            int LA473_0 = input.LA(1);

            if ( (LA473_0==DELIMITER2) ) {
                alt473=1;
            }
            switch (alt473) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1657:5: DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11836); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11838);
                    spec_sized_mult_lvl2_st_optionnal_6(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1658:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt472=2;
                    int LA472_0 = input.LA(1);

                    if ( (LA472_0==DELIMITER2) ) {
                        alt472=1;
                    }
                    switch (alt472) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1658:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11846); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11848);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_cna"


    public static class spec_sized_8_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1666:1: spec_sized_8_3[String nameElement, int maxSize] : ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_8_3_return spec_sized_8_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_8_3_return retval = new HPRIMSParser.spec_sized_8_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1668:22: ( ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1669:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1669:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt475=2;
            int LA475_0 = input.LA(1);

            if ( ((LA475_0 >= CHARA && LA475_0 <= CHIFFRE9)||(LA475_0 >= LETTRE && LA475_0 <= POINT)) ) {
                alt475=1;
            }
            switch (alt475) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1669:4: st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    pushFollow(FOLLOW_st_sized_mandatory_in_spec_sized_8_311880);
                    st_sized_mandatory(nameElement + ".1", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1670:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt474=2;
                    int LA474_0 = input.LA(1);

                    if ( (LA474_0==DELIMITER2) ) {
                        alt474=1;
                    }
                    switch (alt474) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1670:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311887); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311889);
                            st_non_sized_optionnal(nameElement + ".2");

                            state._fsp--;


                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311897); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311899);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_8_3"


    public static class spec_sized_9_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1682:1: spec_sized_9_3[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? ;
    public final HPRIMSParser.spec_sized_9_3_return spec_sized_9_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_3_return retval = new HPRIMSParser.spec_sized_9_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1684:22: ( st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1686:3: st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311939);
            st_sized_optionnal(nameElement + ".1", 12);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1687:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==DELIMITER2) ) {
                alt476=1;
            }
            switch (alt476) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1687:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_311945); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311947);
                    st_sized_optionnal(nameElement + ".2", 10);

                    state._fsp--;


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_3"



    // $ANTLR start "spec_non_sized_9_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1690:1: spec_non_sized_9_8[String nameElement] : ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? ;
    public final void spec_non_sized_9_8(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1692:22: ( ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1693:3: ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            {
            pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811972);
            ts_sized_optionnal(nameElement + ".1", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1694:4: ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            int alt477=2;
            int LA477_0 = input.LA(1);

            if ( (LA477_0==REPETITEUR) ) {
                alt477=1;
            }
            switch (alt477) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1694:5: REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_non_sized_9_811979); 

                    pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811981);
                    ts_sized_optionnal(nameElement + ".2", 26);

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_non_sized_9_8"


    public static class spec_sized_9_16_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_16"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1696:1: spec_sized_9_16[String nameElement, int maxSize] : spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_9_16_return spec_sized_9_16(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_16_return retval = new HPRIMSParser.spec_sized_9_16_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1698:22: ( spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1699:3: spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1612002);
            spec_sized_mult_lvl2_st_optionnal_3(nameElement + ".2");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1700:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( (LA479_0==DELIMITER2) ) {
                alt479=1;
            }
            switch (alt479) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1700:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1612008); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1612010);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1701:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt478=2;
                    int LA478_0 = input.LA(1);

                    if ( (LA478_0==DELIMITER2) ) {
                        alt478=1;
                    }
                    switch (alt478) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1701:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1612017); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1612019);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_16"


    public static class spec_sized_10_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1704:1: spec_sized_10_4[String nameElement, int maxsize] : st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_10_4_return spec_sized_10_4(String nameElement, int maxsize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_4_return retval = new HPRIMSParser.spec_sized_10_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1706:22: ( st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1707:3: st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_10_412046);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1708:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt484=2;
            int LA484_0 = input.LA(1);

            if ( (LA484_0==DELIMITER2) ) {
                alt484=1;
            }
            switch (alt484) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1708:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_412052); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412054);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1709:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt483=2;
                    int LA483_0 = input.LA(1);

                    if ( (LA483_0==DELIMITER2) ) {
                        alt483=1;
                    }
                    switch (alt483) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1709:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_412061); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412063);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1710:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt482=2;
                            int LA482_0 = input.LA(1);

                            if ( (LA482_0==DELIMITER2) ) {
                                alt482=1;
                            }
                            switch (alt482) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1710:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_412071); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412073);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1711:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt481=2;
                                    int LA481_0 = input.LA(1);

                                    if ( (LA481_0==DELIMITER2) ) {
                                        alt481=1;
                                    }
                                    switch (alt481) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1711:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_412082); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412084);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt480=2;
                                            int LA480_0 = input.LA(1);

                                            if ( (LA480_0==DELIMITER2) ) {
                                                alt480=1;
                                            }
                                            switch (alt480) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_412094); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412096);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxsize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_4"



    // $ANTLR start "spec_sized_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1715:1: spec_sized_10_6_tx[String nameElement, int maxSize] : (g= final_spec_10_6_tx )? ;
    public final void spec_sized_10_6_tx(String nameElement, int maxSize) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1720:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1721:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1721:4: (g= final_spec_10_6_tx )?
            int alt485=2;
            int LA485_0 = input.LA(1);

            if ( ((LA485_0 >= CHARA && LA485_0 <= CHIFFRE9)||LA485_0==DELIMITER2||(LA485_0 >= LETTRE && LA485_0 <= POINT)) ) {
                alt485=1;
            }
            switch (alt485) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1721:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx12131);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            if (g != null)
                matchRegex(g, "^.{0," + maxSize + "}$", retval.start);

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_10_6_tx"



    // $ANTLR start "spec_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1725:1: spec_tx[String nameElement] : (g= final_spec_10_6_tx )? ;
    public final void spec_tx(String nameElement) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1730:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:4: (g= final_spec_10_6_tx )?
            int alt486=2;
            int LA486_0 = input.LA(1);

            if ( ((LA486_0 >= CHARA && LA486_0 <= CHIFFRE9)||LA486_0==DELIMITER2||(LA486_0 >= LETTRE && LA486_0 <= POINT)) ) {
                alt486=1;
            }
            switch (alt486) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_tx12156);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_tx"


    public static class spec_sized_tn_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_tn"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1733:1: spec_sized_tn[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_tn_return spec_sized_tn(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_tn_return retval = new HPRIMSParser.spec_sized_tn_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1735:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1736:2: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn12174);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:3: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt487=2;
            int LA487_0 = input.LA(1);

            if ( (LA487_0==REPETITEUR) ) {
                alt487=1;
            }
            switch (alt487) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:4: REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_sized_tn12180); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn12182);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_tn"


    public static class st_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1743:1: st_sized_optionnal[String nameElement, int maxSize] : ( final_st )? ;
    public final HPRIMSParser.st_sized_optionnal_return st_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_optionnal_return retval = new HPRIMSParser.st_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1745:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1746:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1746:3: ( final_st )?
            int alt488=2;
            int LA488_0 = input.LA(1);

            if ( ((LA488_0 >= CHARA && LA488_0 <= CHIFFRE9)||(LA488_0 >= LETTRE && LA488_0 <= POINT)) ) {
                alt488=1;
            }
            switch (alt488) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1746:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_sized_optionnal12210);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_optionnal"


    public static class st_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1750:1: st_sized_mandatory[String nameElement, int maxSize] : final_st ;
    public final HPRIMSParser.st_sized_mandatory_return st_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_mandatory_return retval = new HPRIMSParser.st_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1752:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_sized_mandatory12233);
            final_st();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_mandatory"



    // $ANTLR start "st_non_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1756:1: st_non_sized_optionnal[String nameElement] : ( final_st )? ;
    public final void st_non_sized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: ( final_st )?
            int alt489=2;
            int LA489_0 = input.LA(1);

            if ( ((LA489_0 >= CHARA && LA489_0 <= CHIFFRE9)||(LA489_0 >= LETTRE && LA489_0 <= POINT)) ) {
                alt489=1;
            }
            switch (alt489) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_non_sized_optionnal12255);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_non_sized_optionnal"



    // $ANTLR start "st_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1761:1: st_nonsized_mandatory[String nameElement] : final_st ;
    public final void st_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_nonsized_mandatory12274);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_nonsized_mandatory"


    public static class nm_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1766:1: nm_sized_optionnal[String nameElement, int maxSize] : ( final_nm )? ;
    public final HPRIMSParser.nm_sized_optionnal_return nm_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_optionnal_return retval = new HPRIMSParser.nm_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1768:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:3: ( final_nm )?
            int alt490=2;
            int LA490_0 = input.LA(1);

            if ( ((LA490_0 >= CHIFFRE0 && LA490_0 <= CHIFFRE9)||(LA490_0 >= MOINS && LA490_0 <= POINT)) ) {
                alt490=1;
            }
            switch (alt490) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_sized_optionnal12292);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_optionnal"


    public static class nm_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1773:1: nm_sized_mandatory[String nameElement, int maxSize] : final_nm ;
    public final HPRIMSParser.nm_sized_mandatory_return nm_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_mandatory_return retval = new HPRIMSParser.nm_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_sized_mandatory12315);
            final_nm();

            state._fsp--;


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_mandatory"


    public static class nm_integer_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:1: nm_integer_sized_optionnal[String nameElement, int maxSize] : ( final_nm_integer )? ;
    public final HPRIMSParser.nm_integer_sized_optionnal_return nm_integer_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_optionnal_return retval = new HPRIMSParser.nm_integer_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:22: ( ( final_nm_integer )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:3: ( final_nm_integer )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:3: ( final_nm_integer )?
            int alt491=2;
            int LA491_0 = input.LA(1);

            if ( ((LA491_0 >= CHIFFRE0 && LA491_0 <= CHIFFRE9)) ) {
                alt491=1;
            }
            switch (alt491) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:3: final_nm_integer
                    {
                    pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal12337);
                    final_nm_integer();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_optionnal"


    public static class nm_integer_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:1: nm_integer_sized_mandatory[String nameElement, int maxSize] : final_nm_integer ;
    public final HPRIMSParser.nm_integer_sized_mandatory_return nm_integer_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_mandatory_return retval = new HPRIMSParser.nm_integer_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1789:22: ( final_nm_integer )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:3: final_nm_integer
            {
            pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory12365);
            final_nm_integer();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_mandatory"


    public static class ts_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:1: ts_sized_optionnal[String nameElement, int maxSize] : ( final_ts )? ;
    public final HPRIMSParser.ts_sized_optionnal_return ts_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_optionnal_return retval = new HPRIMSParser.ts_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:22: ( ( final_ts )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:3: ( final_ts )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:3: ( final_ts )?
            int alt492=2;
            int LA492_0 = input.LA(1);

            if ( ((LA492_0 >= CHIFFRE0 && LA492_0 <= CHIFFRE9)) ) {
                alt492=1;
            }
            switch (alt492) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:3: final_ts
                    {
                    pushFollow(FOLLOW_final_ts_in_ts_sized_optionnal12388);
                    final_ts();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_optionnal"


    public static class ts_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:1: ts_sized_mandatory[String nameElement, int maxSize] : final_ts ;
    public final HPRIMSParser.ts_sized_mandatory_return ts_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_mandatory_return retval = new HPRIMSParser.ts_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:22: ( final_ts )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:3: final_ts
            {
            pushFollow(FOLLOW_final_ts_in_ts_sized_mandatory12411);
            final_ts();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_mandatory"



    // $ANTLR start "nm_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1807:1: nm_nonsized_mandatory[String nameElement] : final_nm ;
    public final void nm_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_nonsized_mandatory12433);
            final_nm();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_mandatory"



    // $ANTLR start "nm_nonsized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:1: nm_nonsized_optionnal[String nameElement] : ( final_nm )? ;
    public final void nm_nonsized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:3: ( final_nm )?
            int alt493=2;
            int LA493_0 = input.LA(1);

            if ( ((LA493_0 >= CHIFFRE0 && LA493_0 <= CHIFFRE9)||(LA493_0 >= MOINS && LA493_0 <= POINT)) ) {
                alt493=1;
            }
            switch (alt493) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_nonsized_optionnal12451);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_optionnal"



    // $ANTLR start "spec_const_7_13_1_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:1: spec_const_7_13_1_version_2_0[String nameElement] : final_version_2_0 ;
    public final void spec_const_7_13_1_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:22: ( final_version_2_0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:3: final_version_2_0
            {
            pushFollow(FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_012470);
            final_version_2_0();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_0"



    // $ANTLR start "spec_const_7_13_1_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1822:1: spec_const_7_13_1_version_2_1[String nameElement] : final_version_2_1 ;
    public final void spec_const_7_13_1_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1824:22: ( final_version_2_1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1825:3: final_version_2_1
            {
            pushFollow(FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_112488);
            final_version_2_1();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_1"



    // $ANTLR start "spec_const_7_13_1_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1827:1: spec_const_7_13_1_version_2_2[String nameElement] : final_version_2_2 ;
    public final void spec_const_7_13_1_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1829:22: ( final_version_2_2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1830:3: final_version_2_2
            {
            pushFollow(FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_212508);
            final_version_2_2();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_2"



    // $ANTLR start "final_spec_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1834:1: final_spec_10_6_tx returns [String consoText] : g= content_spec_10_6 ;
    public final String final_spec_10_6_tx() throws RecognitionException {
        String consoText = null;


        String g =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1834:46: (g= content_spec_10_6 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1835:3: g= content_spec_10_6
            {
            pushFollow(FOLLOW_content_spec_10_6_in_final_spec_10_6_tx12525);
            g=content_spec_10_6();

            state._fsp--;


            content(g);
               consoText = g;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "final_spec_10_6_tx"



    // $ANTLR start "content_spec_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1839:1: content_spec_10_6 returns [String consoText] : (r= character | DELIMITER2 ) (p= content_spec_10_6 )? ;
    public final String content_spec_10_6() throws RecognitionException {
        String consoText = null;


        HPRIMSParser.character_return r =null;

        String p =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1839:45: ( (r= character | DELIMITER2 ) (p= content_spec_10_6 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1840:3: (r= character | DELIMITER2 ) (p= content_spec_10_6 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1840:3: (r= character | DELIMITER2 )
            int alt494=2;
            int LA494_0 = input.LA(1);

            if ( ((LA494_0 >= CHARA && LA494_0 <= CHIFFRE9)||(LA494_0 >= LETTRE && LA494_0 <= POINT)) ) {
                alt494=1;
            }
            else if ( (LA494_0==DELIMITER2) ) {
                alt494=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 494, 0, input);

                throw nvae;

            }
            switch (alt494) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1840:4: r= character
                    {
                    pushFollow(FOLLOW_character_in_content_spec_10_612547);
                    r=character();

                    state._fsp--;


                    consoText = (r!=null?input.toString(r.start,r.stop):null);

                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1840:42: DELIMITER2
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_content_spec_10_612553); 

                    consoText = "\n";

                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1841:6: (p= content_spec_10_6 )?
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( ((LA495_0 >= CHARA && LA495_0 <= CHIFFRE9)||LA495_0==DELIMITER2||(LA495_0 >= LETTRE && LA495_0 <= POINT)) ) {
                alt495=1;
            }
            switch (alt495) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1841:6: p= content_spec_10_6
                    {
                    pushFollow(FOLLOW_content_spec_10_6_in_content_spec_10_612564);
                    p=content_spec_10_6();

                    state._fsp--;


                    }
                    break;

            }


            if (p != null) { consoText += p; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "content_spec_10_6"


    public static class final_ts_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ts"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1843:1: final_ts : chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? ;
    public final HPRIMSParser.final_ts_return final_ts() throws RecognitionException {
        HPRIMSParser.final_ts_return retval = new HPRIMSParser.final_ts_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1843:9: ( chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1844:3: chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            {
            pushFollow(FOLLOW_chiffre_in_final_ts12576);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12578);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12582);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12584);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12586);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12590);
            chiffre();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1846:11: ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            int alt498=2;
            int LA498_0 = input.LA(1);

            if ( ((LA498_0 >= CHIFFRE0 && LA498_0 <= CHIFFRE9)) ) {
                alt498=1;
            }
            switch (alt498) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1846:12: chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    {
                    pushFollow(FOLLOW_chiffre_in_final_ts12593);
                    chiffre();

                    state._fsp--;


                    pushFollow(FOLLOW_chiffre_in_final_ts12595);
                    chiffre();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1847:3: ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    int alt497=2;
                    int LA497_0 = input.LA(1);

                    if ( ((LA497_0 >= CHIFFRE0 && LA497_0 <= CHIFFRE9)) ) {
                        alt497=1;
                    }
                    switch (alt497) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1847:4: chiffre chiffre chiffre chiffre ( chiffre chiffre )?
                            {
                            pushFollow(FOLLOW_chiffre_in_final_ts12600);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12602);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12604);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12608);
                            chiffre();

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1848:11: ( chiffre chiffre )?
                            int alt496=2;
                            int LA496_0 = input.LA(1);

                            if ( ((LA496_0 >= CHIFFRE0 && LA496_0 <= CHIFFRE9)) ) {
                                alt496=1;
                            }
                            switch (alt496) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1848:12: chiffre chiffre
                                    {
                                    pushFollow(FOLLOW_chiffre_in_final_ts12611);
                                    chiffre();

                                    state._fsp--;


                                    pushFollow(FOLLOW_chiffre_in_final_ts12613);
                                    chiffre();

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ts"


    public static class final_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1851:1: final_st : ( character )+ ;
    public final HPRIMSParser.final_st_return final_st() throws RecognitionException {
        HPRIMSParser.final_st_return retval = new HPRIMSParser.final_st_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1851:9: ( ( character )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1852:3: ( character )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1852:3: ( character )+
            int cnt499=0;
            loop499:
            do {
                int alt499=2;
                int LA499_0 = input.LA(1);

                if ( ((LA499_0 >= CHARA && LA499_0 <= CHIFFRE9)||(LA499_0 >= LETTRE && LA499_0 <= POINT)) ) {
                    alt499=1;
                }


                switch (alt499) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1852:3: character
            	    {
            	    pushFollow(FOLLOW_character_in_final_st12632);
            	    character();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt499 >= 1 ) break loop499;
                        EarlyExitException eee =
                            new EarlyExitException(499, input);
                        throw eee;
                }
                cnt499++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_st"


    public static class final_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1855:1: final_nm : ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) ;
    public final HPRIMSParser.final_nm_return final_nm() throws RecognitionException {
        HPRIMSParser.final_nm_return retval = new HPRIMSParser.final_nm_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1855:9: ( ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1856:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1856:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1856:4: ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1856:4: ( PLUS | MOINS )?
            int alt500=2;
            int LA500_0 = input.LA(1);

            if ( ((LA500_0 >= MOINS && LA500_0 <= PLUS)) ) {
                alt500=1;
            }
            switch (alt500) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
                    {
                    if ( (input.LA(1) >= MOINS && input.LA(1) <= PLUS) ) {
                        input.consume();
                        state.errorRecovery=false;
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:3: ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            int alt505=2;
            int LA505_0 = input.LA(1);

            if ( ((LA505_0 >= CHIFFRE0 && LA505_0 <= CHIFFRE9)) ) {
                alt505=1;
            }
            else if ( (LA505_0==POINT) ) {
                alt505=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 505, 0, input);

                throw nvae;

            }
            switch (alt505) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:5: ( chiffre )+ ( POINT ( chiffre )* )?
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:5: ( chiffre )+
                    int cnt501=0;
                    loop501:
                    do {
                        int alt501=2;
                        int LA501_0 = input.LA(1);

                        if ( ((LA501_0 >= CHIFFRE0 && LA501_0 <= CHIFFRE9)) ) {
                            alt501=1;
                        }


                        switch (alt501) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:5: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm12661);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt501 >= 1 ) break loop501;
                                EarlyExitException eee =
                                    new EarlyExitException(501, input);
                                throw eee;
                        }
                        cnt501++;
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:14: ( POINT ( chiffre )* )?
                    int alt503=2;
                    int LA503_0 = input.LA(1);

                    if ( (LA503_0==POINT) ) {
                        alt503=1;
                    }
                    switch (alt503) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:15: POINT ( chiffre )*
                            {
                            match(input,POINT,FOLLOW_POINT_in_final_nm12665); 

                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:21: ( chiffre )*
                            loop502:
                            do {
                                int alt502=2;
                                int LA502_0 = input.LA(1);

                                if ( ((LA502_0 >= CHIFFRE0 && LA502_0 <= CHIFFRE9)) ) {
                                    alt502=1;
                                }


                                switch (alt502) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1857:21: chiffre
                            	    {
                            	    pushFollow(FOLLOW_chiffre_in_final_nm12667);
                            	    chiffre();

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop502;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1858:4: ( POINT ( chiffre )+ )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1858:4: ( POINT ( chiffre )+ )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1858:5: POINT ( chiffre )+
                    {
                    match(input,POINT,FOLLOW_POINT_in_final_nm12677); 

                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1858:11: ( chiffre )+
                    int cnt504=0;
                    loop504:
                    do {
                        int alt504=2;
                        int LA504_0 = input.LA(1);

                        if ( ((LA504_0 >= CHIFFRE0 && LA504_0 <= CHIFFRE9)) ) {
                            alt504=1;
                        }


                        switch (alt504) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1858:11: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm12679);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt504 >= 1 ) break loop504;
                                EarlyExitException eee =
                                    new EarlyExitException(504, input);
                                throw eee;
                        }
                        cnt504++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm"


    public static class final_nm_integer_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm_integer"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1861:1: final_nm_integer : ( chiffre )+ ;
    public final HPRIMSParser.final_nm_integer_return final_nm_integer() throws RecognitionException {
        HPRIMSParser.final_nm_integer_return retval = new HPRIMSParser.final_nm_integer_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1861:17: ( ( chiffre )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1862:3: ( chiffre )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1862:3: ( chiffre )+
            int cnt506=0;
            loop506:
            do {
                int alt506=2;
                int LA506_0 = input.LA(1);

                if ( ((LA506_0 >= CHIFFRE0 && LA506_0 <= CHIFFRE9)) ) {
                    alt506=1;
                }


                switch (alt506) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1862:3: chiffre
            	    {
            	    pushFollow(FOLLOW_chiffre_in_final_nm_integer12696);
            	    chiffre();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt506 >= 1 ) break loop506;
                        EarlyExitException eee =
                            new EarlyExitException(506, input);
                        throw eee;
                }
                cnt506++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm_integer"


    public static class final_ADM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1865:1: final_ADM : CHARA CHARD CHARM ;
    public final HPRIMSParser.final_ADM_return final_ADM() throws RecognitionException {
        HPRIMSParser.final_ADM_return retval = new HPRIMSParser.final_ADM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1865:10: ( CHARA CHARD CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1865:12: CHARA CHARD CHARM
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_ADM12708); 

            match(input,CHARD,FOLLOW_CHARD_in_final_ADM12710); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ADM12712); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ADM"


    public static class final_ORA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1866:1: final_ORA : CHARO CHARR CHARA ;
    public final HPRIMSParser.final_ORA_return final_ORA() throws RecognitionException {
        HPRIMSParser.final_ORA_return retval = new HPRIMSParser.final_ORA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1866:10: ( CHARO CHARR CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1866:12: CHARO CHARR CHARA
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORA12720); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORA12722); 

            match(input,CHARA,FOLLOW_CHARA_in_final_ORA12724); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORA"


    public static class final_ORU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1867:1: final_ORU : CHARO CHARR CHARU ;
    public final HPRIMSParser.final_ORU_return final_ORU() throws RecognitionException {
        HPRIMSParser.final_ORU_return retval = new HPRIMSParser.final_ORU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1867:10: ( CHARO CHARR CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1867:12: CHARO CHARR CHARU
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORU12732); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORU12734); 

            match(input,CHARU,FOLLOW_CHARU_in_final_ORU12736); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORU"


    public static class final_ORM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1868:1: final_ORM : CHARO CHARR CHARM ;
    public final HPRIMSParser.final_ORM_return final_ORM() throws RecognitionException {
        HPRIMSParser.final_ORM_return retval = new HPRIMSParser.final_ORM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1868:10: ( CHARO CHARR CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1868:12: CHARO CHARR CHARM
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORM12744); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORM12746); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ORM12748); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORM"


    public static class final_FAC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1869:1: final_FAC : CHARF CHARA CHARC ;
    public final HPRIMSParser.final_FAC_return final_FAC() throws RecognitionException {
        HPRIMSParser.final_FAC_return retval = new HPRIMSParser.final_FAC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1869:10: ( CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1869:12: CHARF CHARA CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FAC12756); 

            match(input,CHARA,FOLLOW_CHARA_in_final_FAC12758); 

            match(input,CHARC,FOLLOW_CHARC_in_final_FAC12760); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FAC"


    public static class final_REG_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1870:1: final_REG : CHARR CHARE CHARG ;
    public final HPRIMSParser.final_REG_return final_REG() throws RecognitionException {
        HPRIMSParser.final_REG_return retval = new HPRIMSParser.final_REG_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1870:10: ( CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1870:12: CHARR CHARE CHARG
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_REG12768); 

            match(input,CHARE,FOLLOW_CHARE_in_final_REG12770); 

            match(input,CHARG,FOLLOW_CHARG_in_final_REG12772); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_REG"


    public static class final_CART_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_CART"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1872:1: final_CART : CHARC CHARA CHARR CHART ;
    public final HPRIMSParser.final_CART_return final_CART() throws RecognitionException {
        HPRIMSParser.final_CART_return retval = new HPRIMSParser.final_CART_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1872:11: ( CHARC CHARA CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1872:13: CHARC CHARA CHARR CHART
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_CART12781); 

            match(input,CHARA,FOLLOW_CHARA_in_final_CART12783); 

            match(input,CHARR,FOLLOW_CHARR_in_final_CART12785); 

            match(input,CHART,FOLLOW_CHART_in_final_CART12787); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_CART"


    public static class final_PORT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PORT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1873:1: final_PORT : CHARP CHARO CHARR CHART ;
    public final HPRIMSParser.final_PORT_return final_PORT() throws RecognitionException {
        HPRIMSParser.final_PORT_return retval = new HPRIMSParser.final_PORT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1873:11: ( CHARP CHARO CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1873:13: CHARP CHARO CHARR CHART
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PORT12795); 

            match(input,CHARO,FOLLOW_CHARO_in_final_PORT12797); 

            match(input,CHARR,FOLLOW_CHARR_in_final_PORT12799); 

            match(input,CHART,FOLLOW_CHART_in_final_PORT12801); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PORT"


    public static class final_WHLC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WHLC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1874:1: final_WHLC : CHARW CHARH CHARL CHARC ;
    public final HPRIMSParser.final_WHLC_return final_WHLC() throws RecognitionException {
        HPRIMSParser.final_WHLC_return retval = new HPRIMSParser.final_WHLC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1874:11: ( CHARW CHARH CHARL CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1874:13: CHARW CHARH CHARL CHARC
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WHLC12809); 

            match(input,CHARH,FOLLOW_CHARH_in_final_WHLC12811); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WHLC12813); 

            match(input,CHARC,FOLLOW_CHARC_in_final_WHLC12815); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WHLC"


    public static class final_WALK_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WALK"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1875:1: final_WALK : CHARW CHARA CHARL CHARK ;
    public final HPRIMSParser.final_WALK_return final_WALK() throws RecognitionException {
        HPRIMSParser.final_WALK_return retval = new HPRIMSParser.final_WALK_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1875:11: ( CHARW CHARA CHARL CHARK )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1875:13: CHARW CHARA CHARL CHARK
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WALK12823); 

            match(input,CHARA,FOLLOW_CHARA_in_final_WALK12825); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WALK12827); 

            match(input,CHARK,FOLLOW_CHARK_in_final_WALK12829); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WALK"


    public static class final_LL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_LL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1877:1: final_LL : CHARL CHARL ;
    public final HPRIMSParser.final_LL_return final_LL() throws RecognitionException {
        HPRIMSParser.final_LL_return retval = new HPRIMSParser.final_LL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1877:9: ( CHARL CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1877:11: CHARL CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_LL12838); 

            match(input,CHARL,FOLLOW_CHARL_in_final_LL12840); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_LL"


    public static class final_AA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_AA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1878:1: final_AA : CHARA CHARA ;
    public final HPRIMSParser.final_AA_return final_AA() throws RecognitionException {
        HPRIMSParser.final_AA_return retval = new HPRIMSParser.final_AA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1878:9: ( CHARA CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1878:11: CHARA CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_AA12848); 

            match(input,CHARA,FOLLOW_CHARA_in_final_AA12850); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_AA"


    public static class final_HH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1879:1: final_HH : CHARH CHARH ;
    public final HPRIMSParser.final_HH_return final_HH() throws RecognitionException {
        HPRIMSParser.final_HH_return retval = new HPRIMSParser.final_HH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1879:9: ( CHARH CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1879:11: CHARH CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HH12858); 

            match(input,CHARH,FOLLOW_CHARH_in_final_HH12860); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HH"


    public static class final_MS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1880:1: final_MS : CHARM CHARS ;
    public final HPRIMSParser.final_MS_return final_MS() throws RecognitionException {
        HPRIMSParser.final_MS_return retval = new HPRIMSParser.final_MS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1880:9: ( CHARM CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1880:11: CHARM CHARS
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MS12868); 

            match(input,CHARS,FOLLOW_CHARS_in_final_MS12870); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MS"


    public static class final_VS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_VS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1881:1: final_VS : CHARV CHARS ;
    public final HPRIMSParser.final_VS_return final_VS() throws RecognitionException {
        HPRIMSParser.final_VS_return retval = new HPRIMSParser.final_VS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1881:9: ( CHARV CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1881:11: CHARV CHARS
            {
            match(input,CHARV,FOLLOW_CHARV_in_final_VS12878); 

            match(input,CHARS,FOLLOW_CHARS_in_final_VS12880); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_VS"


    public static class final_Null_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_Null"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1882:1: final_Null : CHARN CHARu CHARl CHARl ;
    public final HPRIMSParser.final_Null_return final_Null() throws RecognitionException {
        HPRIMSParser.final_Null_return retval = new HPRIMSParser.final_Null_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1882:11: ( CHARN CHARu CHARl CHARl )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1882:13: CHARN CHARu CHARl CHARl
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_Null12888); 

            match(input,CHARu,FOLLOW_CHARu_in_final_Null12890); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12892); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12894); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_Null"


    public static class final_symbol_inf_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_inf"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1883:1: final_symbol_inf : CHAR_SYMBOL_INF ;
    public final HPRIMSParser.final_symbol_inf_return final_symbol_inf() throws RecognitionException {
        HPRIMSParser.final_symbol_inf_return retval = new HPRIMSParser.final_symbol_inf_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1883:17: ( CHAR_SYMBOL_INF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1883:19: CHAR_SYMBOL_INF
            {
            match(input,CHAR_SYMBOL_INF,FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12902); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_inf"


    public static class final_symbol_sup_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_sup"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1884:1: final_symbol_sup : CHAR_SYMBOL_SUP ;
    public final HPRIMSParser.final_symbol_sup_return final_symbol_sup() throws RecognitionException {
        HPRIMSParser.final_symbol_sup_return retval = new HPRIMSParser.final_symbol_sup_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1884:17: ( CHAR_SYMBOL_SUP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1884:19: CHAR_SYMBOL_SUP
            {
            match(input,CHAR_SYMBOL_SUP,FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12910); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_sup"


    public static class final_symbol_plus_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_plus"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1885:1: final_symbol_plus : PLUS ;
    public final HPRIMSParser.final_symbol_plus_return final_symbol_plus() throws RecognitionException {
        HPRIMSParser.final_symbol_plus_return retval = new HPRIMSParser.final_symbol_plus_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1885:18: ( PLUS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1885:20: PLUS
            {
            match(input,PLUS,FOLLOW_PLUS_in_final_symbol_plus12918); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_plus"


    public static class final_symbol_moins_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_moins"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1886:1: final_symbol_moins : MOINS ;
    public final HPRIMSParser.final_symbol_moins_return final_symbol_moins() throws RecognitionException {
        HPRIMSParser.final_symbol_moins_return retval = new HPRIMSParser.final_symbol_moins_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1886:19: ( MOINS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1886:21: MOINS
            {
            match(input,MOINS,FOLLOW_MOINS_in_final_symbol_moins12926); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_moins"


    public static class final_version_2_0_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1888:1: final_version_2_0 : CHARH CHIFFRE2 POINT CHIFFRE0 ;
    public final HPRIMSParser.final_version_2_0_return final_version_2_0() throws RecognitionException {
        HPRIMSParser.final_version_2_0_return retval = new HPRIMSParser.final_version_2_0_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1888:18: ( CHARH CHIFFRE2 POINT CHIFFRE0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1888:20: CHARH CHIFFRE2 POINT CHIFFRE0
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_012935); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_012937); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_012939); 

            match(input,CHIFFRE0,FOLLOW_CHIFFRE0_in_final_version_2_012941); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_0"


    public static class final_version_2_1_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1889:1: final_version_2_1 : CHARH CHIFFRE2 POINT CHIFFRE1 ;
    public final HPRIMSParser.final_version_2_1_return final_version_2_1() throws RecognitionException {
        HPRIMSParser.final_version_2_1_return retval = new HPRIMSParser.final_version_2_1_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1889:18: ( CHARH CHIFFRE2 POINT CHIFFRE1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1889:20: CHARH CHIFFRE2 POINT CHIFFRE1
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_112949); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_112951); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_112953); 

            match(input,CHIFFRE1,FOLLOW_CHIFFRE1_in_final_version_2_112955); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_1"


    public static class final_version_2_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1890:1: final_version_2_2 : CHARH CHIFFRE2 POINT CHIFFRE2 ;
    public final HPRIMSParser.final_version_2_2_return final_version_2_2() throws RecognitionException {
        HPRIMSParser.final_version_2_2_return retval = new HPRIMSParser.final_version_2_2_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1890:18: ( CHARH CHIFFRE2 POINT CHIFFRE2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1890:20: CHARH CHIFFRE2 POINT CHIFFRE2
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_212963); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212965); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_212967); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212969); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_2"


    public static class final_OP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_OP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1892:1: final_OP : CHARO CHARP ;
    public final HPRIMSParser.final_OP_return final_OP() throws RecognitionException {
        HPRIMSParser.final_OP_return retval = new HPRIMSParser.final_OP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1892:9: ( CHARO CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1892:11: CHARO CHARP
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_OP12978); 

            match(input,CHARP,FOLLOW_CHARP_in_final_OP12980); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_OP"


    public static class final_IP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_IP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1893:1: final_IP : CHARI CHARP ;
    public final HPRIMSParser.final_IP_return final_IP() throws RecognitionException {
        HPRIMSParser.final_IP_return retval = new HPRIMSParser.final_IP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1893:9: ( CHARI CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1893:11: CHARI CHARP
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_IP12988); 

            match(input,CHARP,FOLLOW_CHARP_in_final_IP12990); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_IP"


    public static class final_ER_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ER"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1894:1: final_ER : CHARE CHARR ;
    public final HPRIMSParser.final_ER_return final_ER() throws RecognitionException {
        HPRIMSParser.final_ER_return retval = new HPRIMSParser.final_ER_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1894:9: ( CHARE CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1894:11: CHARE CHARR
            {
            match(input,CHARE,FOLLOW_CHARE_in_final_ER12998); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ER13000); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ER"


    public static class final_PA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1895:1: final_PA : CHARP CHARA ;
    public final HPRIMSParser.final_PA_return final_PA() throws RecognitionException {
        HPRIMSParser.final_PA_return retval = new HPRIMSParser.final_PA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1895:9: ( CHARP CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1895:11: CHARP CHARA
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PA13008); 

            match(input,CHARA,FOLLOW_CHARA_in_final_PA13010); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PA"


    public static class final_MP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1896:1: final_MP : CHARM CHARP ;
    public final HPRIMSParser.final_MP_return final_MP() throws RecognitionException {
        HPRIMSParser.final_MP_return retval = new HPRIMSParser.final_MP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1896:9: ( CHARM CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1896:11: CHARM CHARP
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MP13018); 

            match(input,CHARP,FOLLOW_CHARP_in_final_MP13020); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MP"


    public static class final_TM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1897:1: final_TM : CHART CHARM ;
    public final HPRIMSParser.final_TM_return final_TM() throws RecognitionException {
        HPRIMSParser.final_TM_return retval = new HPRIMSParser.final_TM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1897:9: ( CHART CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1897:11: CHART CHARM
            {
            match(input,CHART,FOLLOW_CHART_in_final_TM13028); 

            match(input,CHARM,FOLLOW_CHARM_in_final_TM13030); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TM"


    public static class final_TR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1898:1: final_TR : CHART CHARR ;
    public final HPRIMSParser.final_TR_return final_TR() throws RecognitionException {
        HPRIMSParser.final_TR_return retval = new HPRIMSParser.final_TR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1898:9: ( CHART CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1898:11: CHART CHARR
            {
            match(input,CHART,FOLLOW_CHART_in_final_TR13038); 

            match(input,CHARR,FOLLOW_CHARR_in_final_TR13040); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TR"


    public static class final_FR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1899:1: final_FR : CHARF CHARR ;
    public final HPRIMSParser.final_FR_return final_FR() throws RecognitionException {
        HPRIMSParser.final_FR_return retval = new HPRIMSParser.final_FR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1899:9: ( CHARF CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1899:11: CHARF CHARR
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FR13048); 

            match(input,CHARR,FOLLOW_CHARR_in_final_FR13050); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FR"


    public static class final_PF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1900:1: final_PF : CHARP CHARF ;
    public final HPRIMSParser.final_PF_return final_PF() throws RecognitionException {
        HPRIMSParser.final_PF_return retval = new HPRIMSParser.final_PF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1900:9: ( CHARP CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1900:11: CHARP CHARF
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PF13058); 

            match(input,CHARF,FOLLOW_CHARF_in_final_PF13060); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PF"


    public static class final_SS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_SS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1901:1: final_SS : CHARS CHARS ;
    public final HPRIMSParser.final_SS_return final_SS() throws RecognitionException {
        HPRIMSParser.final_SS_return retval = new HPRIMSParser.final_SS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1901:9: ( CHARS CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1901:11: CHARS CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_SS13068); 

            match(input,CHARS,FOLLOW_CHARS_in_final_SS13070); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_SS"


    public static class final_RX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_RX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1902:1: final_RX : CHARR CHARX ;
    public final HPRIMSParser.final_RX_return final_RX() throws RecognitionException {
        HPRIMSParser.final_RX_return retval = new HPRIMSParser.final_RX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1902:9: ( CHARR CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1902:11: CHARR CHARX
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_RX13078); 

            match(input,CHARX,FOLLOW_CHARX_in_final_RX13080); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_RX"


    public static class final_HR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1903:1: final_HR : CHARH CHARR ;
    public final HPRIMSParser.final_HR_return final_HR() throws RecognitionException {
        HPRIMSParser.final_HR_return retval = new HPRIMSParser.final_HR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1903:9: ( CHARH CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1903:11: CHARH CHARR
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HR13088); 

            match(input,CHARR,FOLLOW_CHARR_in_final_HR13090); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HR"


    public static class final_NS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1904:1: final_NS : CHARN CHARS ;
    public final HPRIMSParser.final_NS_return final_NS() throws RecognitionException {
        HPRIMSParser.final_NS_return retval = new HPRIMSParser.final_NS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1904:9: ( CHARN CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1904:11: CHARN CHARS
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_NS13098); 

            match(input,CHARS,FOLLOW_CHARS_in_final_NS13100); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_NS"


    public static class final_charA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1906:1: final_charA : CHARA ;
    public final HPRIMSParser.final_charA_return final_charA() throws RecognitionException {
        HPRIMSParser.final_charA_return retval = new HPRIMSParser.final_charA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1906:12: ( CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1906:14: CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_charA13109); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charA"


    public static class final_charB_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charB"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1907:1: final_charB : CHARB ;
    public final HPRIMSParser.final_charB_return final_charB() throws RecognitionException {
        HPRIMSParser.final_charB_return retval = new HPRIMSParser.final_charB_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1907:12: ( CHARB )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1907:14: CHARB
            {
            match(input,CHARB,FOLLOW_CHARB_in_final_charB13117); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charB"


    public static class final_charC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1908:1: final_charC : CHARC ;
    public final HPRIMSParser.final_charC_return final_charC() throws RecognitionException {
        HPRIMSParser.final_charC_return retval = new HPRIMSParser.final_charC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1908:12: ( CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1908:14: CHARC
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_charC13125); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charC"


    public static class final_charD_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charD"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1909:1: final_charD : CHARD ;
    public final HPRIMSParser.final_charD_return final_charD() throws RecognitionException {
        HPRIMSParser.final_charD_return retval = new HPRIMSParser.final_charD_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1909:12: ( CHARD )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1909:14: CHARD
            {
            match(input,CHARD,FOLLOW_CHARD_in_final_charD13133); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charD"


    public static class final_charF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1910:1: final_charF : CHARF ;
    public final HPRIMSParser.final_charF_return final_charF() throws RecognitionException {
        HPRIMSParser.final_charF_return retval = new HPRIMSParser.final_charF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1910:12: ( CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1910:14: CHARF
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_charF13141); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charF"


    public static class final_charH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1911:1: final_charH : CHARH ;
    public final HPRIMSParser.final_charH_return final_charH() throws RecognitionException {
        HPRIMSParser.final_charH_return retval = new HPRIMSParser.final_charH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1911:12: ( CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1911:14: CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_charH13149); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charH"


    public static class final_charI_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charI"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1912:1: final_charI : CHARI ;
    public final HPRIMSParser.final_charI_return final_charI() throws RecognitionException {
        HPRIMSParser.final_charI_return retval = new HPRIMSParser.final_charI_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1912:12: ( CHARI )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1912:14: CHARI
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_charI13157); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charI"


    public static class final_charL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1913:1: final_charL : CHARL ;
    public final HPRIMSParser.final_charL_return final_charL() throws RecognitionException {
        HPRIMSParser.final_charL_return retval = new HPRIMSParser.final_charL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1913:12: ( CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1913:14: CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_charL13165); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charL"


    public static class final_charM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1914:1: final_charM : CHARM ;
    public final HPRIMSParser.final_charM_return final_charM() throws RecognitionException {
        HPRIMSParser.final_charM_return retval = new HPRIMSParser.final_charM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1914:12: ( CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1914:14: CHARM
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_charM13173); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charM"


    public static class final_charN_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charN"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1915:1: final_charN : CHARN ;
    public final HPRIMSParser.final_charN_return final_charN() throws RecognitionException {
        HPRIMSParser.final_charN_return retval = new HPRIMSParser.final_charN_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1915:12: ( CHARN )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1915:14: CHARN
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_charN13181); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charN"


    public static class final_charO_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charO"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1916:1: final_charO : CHARO ;
    public final HPRIMSParser.final_charO_return final_charO() throws RecognitionException {
        HPRIMSParser.final_charO_return retval = new HPRIMSParser.final_charO_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1916:12: ( CHARO )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1916:14: CHARO
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_charO13189); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charO"


    public static class final_charP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1917:1: final_charP : CHARP ;
    public final HPRIMSParser.final_charP_return final_charP() throws RecognitionException {
        HPRIMSParser.final_charP_return retval = new HPRIMSParser.final_charP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1917:12: ( CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1917:14: CHARP
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_charP13197); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charP"


    public static class final_charR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1918:1: final_charR : CHARR ;
    public final HPRIMSParser.final_charR_return final_charR() throws RecognitionException {
        HPRIMSParser.final_charR_return retval = new HPRIMSParser.final_charR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1918:12: ( CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1918:14: CHARR
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_charR13205); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charR"


    public static class final_charS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1919:1: final_charS : CHARS ;
    public final HPRIMSParser.final_charS_return final_charS() throws RecognitionException {
        HPRIMSParser.final_charS_return retval = new HPRIMSParser.final_charS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1919:12: ( CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1919:14: CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_charS13213); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charS"


    public static class final_charT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1920:1: final_charT : CHART ;
    public final HPRIMSParser.final_charT_return final_charT() throws RecognitionException {
        HPRIMSParser.final_charT_return retval = new HPRIMSParser.final_charT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1920:12: ( CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1920:14: CHART
            {
            match(input,CHART,FOLLOW_CHART_in_final_charT13221); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charT"


    public static class final_charU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1921:1: final_charU : CHARU ;
    public final HPRIMSParser.final_charU_return final_charU() throws RecognitionException {
        HPRIMSParser.final_charU_return retval = new HPRIMSParser.final_charU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1921:12: ( CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1921:14: CHARU
            {
            match(input,CHARU,FOLLOW_CHARU_in_final_charU13229); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charU"


    public static class final_charW_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charW"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1922:1: final_charW : CHARW ;
    public final HPRIMSParser.final_charW_return final_charW() throws RecognitionException {
        HPRIMSParser.final_charW_return retval = new HPRIMSParser.final_charW_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1922:12: ( CHARW )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1922:14: CHARW
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_charW13237); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charW"


    public static class final_charX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1923:1: final_charX : CHARX ;
    public final HPRIMSParser.final_charX_return final_charX() throws RecognitionException {
        HPRIMSParser.final_charX_return retval = new HPRIMSParser.final_charX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1923:12: ( CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1923:14: CHARX
            {
            match(input,CHARX,FOLLOW_CHARX_in_final_charX13245); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charX"


    public static class delimiters_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "delimiters"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1926:1: delimiters : DELIMITERS ;
    public final HPRIMSParser.delimiters_return delimiters() throws RecognitionException {
        HPRIMSParser.delimiters_return retval = new HPRIMSParser.delimiters_return();
        retval.start = input.LT(1);


        startElement("H.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1928:22: ( DELIMITERS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1929:3: DELIMITERS
            {
            match(input,DELIMITERS,FOLLOW_DELIMITERS_in_delimiters13266); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delimiters"


    public static class character_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "character"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1934:1: character : ( lettre | chiffre ) ;
    public final HPRIMSParser.character_return character() throws RecognitionException {
        HPRIMSParser.character_return retval = new HPRIMSParser.character_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1934:10: ( ( lettre | chiffre ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1935:3: ( lettre | chiffre )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1935:3: ( lettre | chiffre )
            int alt507=2;
            int LA507_0 = input.LA(1);

            if ( ((LA507_0 >= CHARA && LA507_0 <= CHARu)||(LA507_0 >= LETTRE && LA507_0 <= POINT)) ) {
                alt507=1;
            }
            else if ( ((LA507_0 >= CHIFFRE0 && LA507_0 <= CHIFFRE9)) ) {
                alt507=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 507, 0, input);

                throw nvae;

            }
            switch (alt507) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1935:4: lettre
                    {
                    pushFollow(FOLLOW_lettre_in_character13282);
                    lettre();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1935:13: chiffre
                    {
                    pushFollow(FOLLOW_chiffre_in_character13286);
                    chiffre();

                    state._fsp--;


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "character"



    // $ANTLR start "chiffre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1937:1: chiffre : ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) ;
    public final void chiffre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1937:8: ( ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHIFFRE0 && input.LA(1) <= CHIFFRE9) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "chiffre"



    // $ANTLR start "lettre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1941:1: lettre : ~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) ;
    public final void lettre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1941:7: (~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHARA && input.LA(1) <= CHARu)||(input.LA(1) >= LETTRE && input.LA(1) <= POINT) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "lettre"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA424 dfa424 = new DFA424(this);
    protected DFA426 dfa426 = new DFA426(this);
    static final String DFA1_eotS =
        "\u00dd\uffff";
    static final String DFA1_eofS =
        "\u00dd\uffff";
    static final String DFA1_minS =
        "\1\54\1\51\24\4\1\23\1\7\1\4\1\10\4\4\1\17\1\6\1\12\3\4\6\51\147"+
        "\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\22\51\6\13\6\40\6"+
        "\60\6\36\22\uffff";
    static final String DFA1_maxS =
        "\1\54\1\51\20\60\1\23\3\60\1\23\1\7\1\4\1\10\3\60\1\26\1\17\1\6"+
        "\1\12\3\60\6\51\3\60\6\61\2\60\2\61\2\60\2\61\2\60\2\61\2\60\2\61"+
        "\2\60\2\61\2\60\2\61\106\60\1\25\2\60\1\25\2\60\1\25\2\60\1\25\2"+
        "\60\1\25\2\60\1\25\22\51\6\13\6\40\6\60\6\40\22\uffff";
    static final String DFA1_acceptS =
        "\u00cb\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22";
    static final String DFA1_specialS =
        "\u00dd\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\1",
            "\1\2",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\11\12\12\5\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\14\12\15\5\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\1\27\4\uffff\1\30\7\uffff\1\26\1\uffff\1\31",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\40",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\1\46\12\uffff\1\45\6\uffff\1\44",
            "\1\47",
            "\1\50",
            "\1\51",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\1\55",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\61",
            "\1\62",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\153\12\154\5\uffff\4\153",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\155\12\156\5\uffff\4\155",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\157\12\160\5\uffff\4\157",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\161\12\162\5\uffff\4\161",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\163\12\164\5\uffff\4\163",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\165\12\166\5\uffff\4\165",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\175\12\176\5\uffff\4\175",
            "\32\177\12\u0080\5\uffff\4\177",
            "\32\u0081\12\u0082\5\uffff\4\u0081",
            "\32\u0083\12\u0084\5\uffff\4\u0083",
            "\32\u0085\12\u0086\5\uffff\4\u0085",
            "\32\u0087\12\u0088\5\uffff\4\u0087",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\1\u00a2\12\uffff\1\u00a1\2\uffff\1\u00a3",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\1\u00a5\12\uffff\1\u00a4\2\uffff\1\u00a6",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\1\u00a8\12\uffff\1\u00a7\2\uffff\1\u00a9",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\1\u00ab\12\uffff\1\u00aa\2\uffff\1\u00ac",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\1\u00ae\12\uffff\1\u00ad\2\uffff\1\u00af",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\1\u00b1\12\uffff\1\u00b0\2\uffff\1\u00b2",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b9",
            "\1\u00ba",
            "\1\u00bb",
            "\1\u00bc",
            "\1\u00bd",
            "\1\u00be",
            "\1\u00bf",
            "\1\u00c0",
            "\1\u00c1",
            "\1\u00c2",
            "\1\u00c3",
            "\1\u00c4",
            "\1\u00c5",
            "\1\u00c6",
            "\1\u00c7",
            "\1\u00c8",
            "\1\u00c9",
            "\1\u00ca",
            "\1\u00cd\1\u00cc\1\u00cb",
            "\1\u00d0\1\u00cf\1\u00ce",
            "\1\u00d3\1\u00d2\1\u00d1",
            "\1\u00d6\1\u00d5\1\u00d4",
            "\1\u00d9\1\u00d8\1\u00d7",
            "\1\u00dc\1\u00db\1\u00da",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "209:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );";
        }
    }
    static final String DFA424_eotS =
        "\6\uffff";
    static final String DFA424_eofS =
        "\1\4\2\5\3\uffff";
    static final String DFA424_minS =
        "\3\4\3\uffff";
    static final String DFA424_maxS =
        "\3\61\3\uffff";
    static final String DFA424_acceptS =
        "\3\uffff\1\2\1\3\1\1";
    static final String DFA424_specialS =
        "\6\uffff}>";
    static final String[] DFA424_transitionS = {
            "\32\1\12\2\2\4\1\3\2\uffff\4\1\1\4",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "",
            "",
            ""
    };

    static final short[] DFA424_eot = DFA.unpackEncodedString(DFA424_eotS);
    static final short[] DFA424_eof = DFA.unpackEncodedString(DFA424_eofS);
    static final char[] DFA424_min = DFA.unpackEncodedStringToUnsignedChars(DFA424_minS);
    static final char[] DFA424_max = DFA.unpackEncodedStringToUnsignedChars(DFA424_maxS);
    static final short[] DFA424_accept = DFA.unpackEncodedString(DFA424_acceptS);
    static final short[] DFA424_special = DFA.unpackEncodedString(DFA424_specialS);
    static final short[][] DFA424_transition;

    static {
        int numStates = DFA424_transitionS.length;
        DFA424_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA424_transition[i] = DFA.unpackEncodedString(DFA424_transitionS[i]);
        }
    }

    class DFA424 extends DFA {

        public DFA424(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 424;
            this.eot = DFA424_eot;
            this.eof = DFA424_eof;
            this.min = DFA424_min;
            this.max = DFA424_max;
            this.accept = DFA424_accept;
            this.special = DFA424_special;
            this.transition = DFA424_transition;
        }
        public String getDescription() {
            return "1315:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?";
        }
    }
    static final String DFA426_eotS =
        "\6\uffff";
    static final String DFA426_eofS =
        "\1\3\2\4\3\uffff";
    static final String DFA426_minS =
        "\3\4\3\uffff";
    static final String DFA426_maxS =
        "\3\61\3\uffff";
    static final String DFA426_acceptS =
        "\3\uffff\1\3\1\1\1\2";
    static final String DFA426_specialS =
        "\6\uffff}>";
    static final String[] DFA426_transitionS = {
            "\32\1\12\2\3\3\2\uffff\4\1\1\3",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "",
            "",
            ""
    };

    static final short[] DFA426_eot = DFA.unpackEncodedString(DFA426_eotS);
    static final short[] DFA426_eof = DFA.unpackEncodedString(DFA426_eofS);
    static final char[] DFA426_min = DFA.unpackEncodedStringToUnsignedChars(DFA426_minS);
    static final char[] DFA426_max = DFA.unpackEncodedStringToUnsignedChars(DFA426_maxS);
    static final short[] DFA426_accept = DFA.unpackEncodedString(DFA426_acceptS);
    static final short[] DFA426_special = DFA.unpackEncodedString(DFA426_specialS);
    static final short[][] DFA426_transition;

    static {
        int numStates = DFA426_transitionS.length;
        DFA426_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA426_transition[i] = DFA.unpackEncodedString(DFA426_transitionS[i]);
        }
    }

    class DFA426 extends DFA {

        public DFA426(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 426;
            this.eot = DFA426_eot;
            this.eof = DFA426_eof;
            this.min = DFA426_min;
            this.max = DFA426_max;
            this.accept = DFA426_accept;
            this.special = DFA426_special;
            this.transition = DFA426_transition;
        }
        public String getDescription() {
            return "1327:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?";
        }
    }
 

    public static final BitSet FOLLOW_hprim_adm_crapy_in_hprim_crapy67 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_2_in_hprim84 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_1_in_hprim88 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_0_in_hprim92 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_2_in_hprim98 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_1_in_hprim102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_0_in_hprim106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_2_in_hprim112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_1_in_hprim116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_0_in_hprim120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_2_in_hprim126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_1_in_hprim130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_0_in_hprim134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_2_in_hprim139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_1_in_hprim143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_0_in_hprim147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_2_in_hprim152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_1_in_hprim156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_0_in_hprim160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_oru_in_hprim_oru_2_2178 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_2182 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_2187 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_2191 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_2196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_oru_in_hprim_oru_2_1213 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_1217 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_1222 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_1226 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_1231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_oru_in_hprim_oru_2_0248 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_0252 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_0257 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_0261 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_0266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_oru_in_hprim_oru_crapy283 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_oru_crapy287 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_crapy292 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_crapy297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ora_in_hprim_ora_2_2315 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_2319 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_2324 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_2328 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_2333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ora_in_hprim_ora_2_1350 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_1354 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_1359 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_1363 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_1368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ora_in_hprim_ora_2_0385 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_0389 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_0394 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_0398 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_0403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_ora_in_hprim_ora_crapy420 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_ora_crapy424 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_crapy429 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_crapy434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_orm_in_hprim_orm_2_2452 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_2456 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_2461 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_2465 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_2470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_orm_in_hprim_orm_2_1487 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_1491 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_1496 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_1500 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_1505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_orm_in_hprim_orm_2_0522 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_0526 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_0531 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_0535 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_0540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_orm_in_hprim_orm_crapy557 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_orm_crapy561 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_crapy566 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_crapy571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_adm_in_hprim_adm_2_2589 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_2593 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_2598 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_2602 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_2607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_adm_in_hprim_adm_2_1624 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_1628 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_1633 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_1637 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_1642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_adm_in_hprim_adm_2_0659 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_0663 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_0668 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_0672 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_0677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_adm_in_hprim_adm_crapy694 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_adm_crapy698 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_crapy703 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_crapy708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_fac_in_hprim_fac_2_2726 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_2730 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_2735 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_2739 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_2744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_fac_in_hprim_fac_2_1761 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_1765 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_1770 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_1774 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_1779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_fac_in_hprim_fac_2_0796 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_0800 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_0805 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_0809 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_0814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_fac_in_hprim_fac_crapy831 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_fac_crapy835 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_crapy840 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_crapy845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_reg_in_hprim_reg_2_2863 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_2867 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_2872 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_2876 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_2881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_reg_in_hprim_reg_2_1898 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_1902 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_1907 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_1911 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_1916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_reg_in_hprim_reg_2_0933 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_0937 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_0942 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_0946 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_0951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_reg_in_hprim_reg_crapy968 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_reg_crapy972 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_crapy977 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_crapy982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ns_in_hprim_ns_2_21000 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_21004 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_21008 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_21013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ns_in_hprim_ns_2_11030 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_11034 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_11038 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_11043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ns_in_hprim_ns_2_01060 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_01064 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_01068 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_01073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h_crapy_ns_in_hprim_ns_crapy1090 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_ns_crapy1094 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_crapy1099 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_crapy1104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_crapy_in_line_crapy1115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_c_crapy_in_line_crapy1121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_ap_crapy_in_line_crapy1127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_ac_crapy_in_line_crapy1133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_obr_crapy_in_line_crapy1139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_obx_crapy_in_line_crapy1145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_fac_crapy_in_line_crapy1151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_reg_crapy_in_line_crapy1157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_act_crapy_in_line_crapy1163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_l_crapy_in_line_crapy1169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_orm1180 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm1183 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_orm1190 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm1193 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_orm1201 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm1204 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_ora1224 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1227 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_ora1234 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1237 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_ora1245 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1248 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_ora1258 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1261 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_ora1270 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1273 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_oru1299 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1302 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_oru1309 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1312 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obx_in_body_p_oru1320 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1323 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_adm1343 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1346 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_p_adm1353 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1356 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_p_adm1364 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1367 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_fac1387 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1390 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_fac1397 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1400 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_fac1408 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1411 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_fac_in_body_p_fac1425 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1428 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_reg_in_body_p_fac1436 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1439 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_act_in_body_p_fac1449 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1452 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_reg1472 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1475 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_reg_in_body_p_reg1482 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1485 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h1504 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1508 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1510 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1515 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1517 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1522 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1524 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1529 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h_crapy1544 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1548 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1550 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1556 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1558 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1563 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1565 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h_crapy1570 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_start_line_h_crapy1572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1586 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_midd_line_h1588 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1593 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1600 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1602 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1607 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1609 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1614 = new BitSet(new long[]{0x0000000000240080L});
    public static final BitSet FOLLOW_spec_const_7_12_in_midd_line_h1616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1628 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1630 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1637 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1639 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1647 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1649 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1658 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1660 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1670 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1672 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1683 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1685 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1697 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_midd_line_h_crapy1699 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h_crapy1711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_oru1749 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1753 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1755 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_oru1760 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1764 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1766 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1771 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1773 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_oru1797 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1801 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1803 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_oru1808 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1812 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1814 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1819 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1821 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_oru1845 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1849 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1851 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_oru1856 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1860 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1862 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1867 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1869 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_oru1893 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_oru1897 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h_crapy_oru1899 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_oru1904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_orm1923 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1927 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1929 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_orm1934 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1938 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1940 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1945 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1947 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_orm1971 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1975 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1977 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_orm1982 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1986 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1988 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1993 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1995 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm2000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_orm2019 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm2023 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm2025 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_orm2030 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm2034 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm2036 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm2041 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_orm2043 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm2048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_orm2067 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_orm2071 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h_crapy_orm2073 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_orm2078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ora2097 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora2101 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora2103 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ora2108 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora2112 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora2114 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora2119 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ora2121 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora2126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ora2145 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora2149 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora2151 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ora2156 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora2160 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora2162 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora2167 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ora2169 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora2174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ora2193 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2197 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora2199 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ora2204 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2208 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora2210 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2215 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ora2217 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora2222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_ora2241 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_ora2245 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h_crapy_ora2247 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_ora2252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_adm2271 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2275 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm2277 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_adm2282 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2286 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm2288 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2293 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2295 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_adm2319 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2323 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2325 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_adm2330 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2334 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2336 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2341 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2343 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_adm2367 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2371 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2373 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_adm2378 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2382 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2384 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2389 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2391 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_adm2415 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_adm2419 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h_crapy_adm2421 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_adm2426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_fac2445 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2449 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2451 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_fac2456 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2460 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2462 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2467 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2469 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_fac2493 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2497 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2499 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_fac2504 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2508 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2510 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2515 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2517 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_fac2541 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2545 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2547 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_fac2552 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2556 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2558 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2563 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2565 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_fac2589 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_fac2593 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h_crapy_fac2595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_fac2600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_reg2619 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2623 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2625 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_reg2630 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2634 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2636 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2641 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2643 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_reg2667 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2671 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2673 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_reg2678 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2682 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2684 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2689 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2691 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_reg2715 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2719 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2721 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_reg2726 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2730 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2732 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2737 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2739 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_reg2763 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_reg2767 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h_crapy_reg2769 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_reg2774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ns2793 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2797 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2799 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ns2804 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2808 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2810 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2815 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2817 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ns2841 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2845 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2847 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ns2852 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2856 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2858 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2863 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2865 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ns2889 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2893 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2895 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ns2900 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2904 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2906 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2911 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2913 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_crapy_in_line_h_crapy_ns2937 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy_ns2941 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h_crapy_ns2943 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_crapy_in_line_h_crapy_ns2948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap2968 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap2970 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap2972 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2979 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap2981 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2986 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2988 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2993 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2995 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3000 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap3002 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3007 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap3009 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3014 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap3016 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3021 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3023 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3028 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3030 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3035 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3037 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3042 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3044 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3049 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3051 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3056 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap3058 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3063 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap3065 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3070 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap3072 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3077 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap3079 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3084 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap3086 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3092 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_ap3094 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3101 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_ap3103 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3111 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap3113 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3122 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap3124 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3134 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap3136 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3147 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap3149 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3161 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap3163 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap3175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap_crapy3209 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap_crapy3211 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap_crapy3213 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3221 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3223 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3230 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3232 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3240 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3242 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3251 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3253 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3263 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3265 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3276 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3278 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3290 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3292 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3305 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3307 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3321 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3323 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3338 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3340 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3356 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3358 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3375 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3377 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3395 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3397 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3416 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3418 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3438 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3440 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3461 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3463 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3485 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3487 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3510 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3512 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3536 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3538 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3563 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3565 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3591 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3593 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3620 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3622 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3650 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3652 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac3747 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac3749 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac3751 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3758 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ac3760 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3765 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3767 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3772 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3774 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3779 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ac3781 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3786 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_ac3788 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3793 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3795 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3800 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_ac_8_in_line_ac3802 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3808 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3810 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3817 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3819 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac_crapy3850 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac_crapy3852 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac_crapy3854 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3862 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3864 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3871 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3873 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3881 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3883 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3892 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3894 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3904 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3906 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3917 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3919 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3931 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3933 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3946 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3948 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3962 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3964 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act4017 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act4019 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act4021 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act4023 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4030 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_act4032 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4037 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_act4039 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4044 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act4046 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4051 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act4053 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4058 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act4060 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4065 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act4067 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4072 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act4074 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4079 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_act4081 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4086 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_act_10_in_line_act4088 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4093 = new BitSet(new long[]{0x0000000000080800L});
    public static final BitSet FOLLOW_spec_act_11_in_line_act4095 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act4100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act_crapy4120 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act_crapy4122 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act_crapy4124 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act_crapy4126 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4134 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4136 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4143 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4145 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4153 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4155 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4164 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4166 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4176 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4178 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4189 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4191 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4203 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4205 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4218 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4220 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4234 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4236 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4251 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy4253 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy4268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac4309 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac4311 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac4313 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac4315 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4322 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_fac4324 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4329 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac4331 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4336 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac4338 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4343 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_fac4345 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4351 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac4353 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4360 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac4362 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4370 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_fac4372 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac4380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac_crapy4408 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac_crapy4410 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac_crapy4412 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac_crapy4414 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4422 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4424 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4431 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4433 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4441 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4443 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4452 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4454 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4464 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4466 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4477 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4479 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4491 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4493 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p4540 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p4542 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4549 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_p4551 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4556 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_8_3_in_line_p4558 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4563 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4565 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4571 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4573 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4580 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4582 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4590 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4592 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4601 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4603 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4613 = new BitSet(new long[]{0x0000020000408200L});
    public static final BitSet FOLLOW_spec_const_sexe_in_line_p4615 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4626 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p4628 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4640 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4642 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4655 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4657 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4671 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_p4673 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4712 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4714 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4718 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4720 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4738 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4740 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4757 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4759 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4792 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4794 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4829 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4831 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4851 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4853 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4857 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4859 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4882 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4884 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4888 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4890 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4914 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4916 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4939 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4941 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4965 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4967 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4992 = new BitSet(new long[]{0x000202FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4994 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4998 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5000 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5028 = new BitSet(new long[]{0x0000020000069100L});
    public static final BitSet FOLLOW_spec_const_8_25_in_line_p5030 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5057 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p5059 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5112 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5114 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5143 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p5145 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5202 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5204 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5263 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5265 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5297 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5299 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5362 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p5364 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5398 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5400 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5435 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5437 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p_crapy5552 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p_crapy5554 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5562 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5564 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5571 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5573 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5581 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5583 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5592 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5594 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5604 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5606 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5617 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5619 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5631 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5633 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5646 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5648 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5662 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5664 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5679 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5681 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5697 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5699 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5716 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5718 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5736 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5738 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5757 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5759 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5779 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5781 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5802 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5804 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5826 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5828 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5851 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5853 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5877 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5879 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5904 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5906 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5932 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5934 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5961 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5963 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5991 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5993 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6022 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6024 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6054 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6056 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6087 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6089 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6121 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6123 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6156 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6158 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6192 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6194 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6229 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6231 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6267 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6269 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6306 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6308 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6346 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy6348 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy6386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg6473 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg6475 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg6477 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg6479 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6486 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_reg6488 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6493 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_reg6495 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6500 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_reg_4_in_line_reg6502 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6507 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_spec_p_or_m_in_line_reg6509 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6514 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_reg6516 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6525 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6527 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6534 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6536 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg_crapy6567 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg_crapy6569 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg_crapy6571 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg_crapy6573 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6581 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6583 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6590 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6592 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6600 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6602 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6611 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6613 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6623 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6625 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6636 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6638 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6650 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6652 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr6699 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr6701 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr6703 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr6705 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6712 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obr6714 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6719 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_3_in_line_obr6721 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6726 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6728 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6733 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6735 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6739 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6741 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6751 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6753 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6757 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6759 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6766 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6768 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6773 = new BitSet(new long[]{0x000200FFC0000000L});
    public static final BitSet FOLLOW_spec_non_sized_9_8_in_line_obr6775 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6780 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6782 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6790 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6792 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6797 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6799 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6807 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6809 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6818 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6820 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6827 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6829 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6837 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6839 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6848 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_16_in_line_obr6850 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6860 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6862 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6873 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_obr6875 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6887 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6889 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6902 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6904 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6918 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6920 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6935 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6937 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6953 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6955 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6972 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6974 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6992 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6994 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7013 = new BitSet(new long[]{0x00000200020E92C0L});
    public static final BitSet FOLLOW_spec_const_9_26_in_line_obr7015 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7035 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr7037 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7058 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr7060 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7082 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7084 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr7088 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7090 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7115 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr7117 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7141 = new BitSet(new long[]{0x0000020001040040L});
    public static final BitSet FOLLOW_spec_const_9_31_in_line_obr7143 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7190 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr7192 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr7196 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr7198 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7226 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7228 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7255 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7257 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7285 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7287 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7316 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr7318 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7348 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr7350 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr7381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr_crapy7451 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr_crapy7453 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr_crapy7455 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr_crapy7457 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7465 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7467 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7474 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7476 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7484 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7486 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7495 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7497 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7507 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7509 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7520 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7522 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7534 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7536 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7549 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7551 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7565 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7567 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7582 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7584 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7600 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7602 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7619 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7621 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7639 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7641 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7660 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7662 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7682 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7684 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7705 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7707 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7729 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7731 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7754 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7756 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7780 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7782 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7807 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7809 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7835 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7837 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7864 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7866 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7894 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7896 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7925 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7927 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7957 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7959 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7990 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7992 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8024 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8026 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8059 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8061 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8095 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8097 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8132 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8134 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8170 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8172 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8209 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8211 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8249 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8251 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8290 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8292 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8332 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8334 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8375 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy8377 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx8512 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx8514 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx8516 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx8518 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8525 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obx8527 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8532 = new BitSet(new long[]{0x00000000003506D0L});
    public static final BitSet FOLLOW_spec_const_10_3_nm_in_line_obx8540 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8549 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8551 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8561 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8563 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8574 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8576 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8580 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8582 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_ce_in_line_obx8612 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8621 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8623 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8633 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8635 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8646 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8648 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8652 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8654 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_fic_in_line_obx8684 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8693 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8695 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8705 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8707 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8718 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8720 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8724 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8726 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_st_in_line_obx8756 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8765 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8767 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8777 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8779 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8790 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8792 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8796 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8798 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_gc_in_line_obx8828 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8837 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8839 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8849 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8851 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8862 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8864 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8868 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8870 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_tx_in_line_obx8900 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8909 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8911 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8921 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8923 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8934 = new BitSet(new long[]{0x0001E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx8936 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_std_in_line_obx8964 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8973 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8975 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8985 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8987 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8998 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx9000 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx9004 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx9006 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx9019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69040 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69042 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69051 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69053 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_69057 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69059 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69071 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_69073 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_69077 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_69079 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69092 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_69094 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69106 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_69108 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_69112 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_69114 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69129 = new BitSet(new long[]{0x00000200024C12C0L});
    public static final BitSet FOLLOW_spec_const_10_12_in_line_obx2_1_post10_69131 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69146 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_69148 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69164 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69166 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69182 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_69184 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69201 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_69203 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69221 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_69223 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_69226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx_crapy9267 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx_crapy9269 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx_crapy9271 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx_crapy9273 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9281 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9283 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9290 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9292 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9300 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9302 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9311 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9313 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9323 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9325 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9336 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9338 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9350 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9352 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9365 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9367 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9381 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9383 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9398 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9400 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9416 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9418 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9436 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9438 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9457 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9459 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9478 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9480 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9500 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9502 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9523 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9525 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c9597 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c9599 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9603 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_c9605 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9610 = new BitSet(new long[]{0x0000020000044000L});
    public static final BitSet FOLLOW_spec_const_12_3_in_line_c9612 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9617 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9619 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_c9623 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9625 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c_crapy9652 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c_crapy9654 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9659 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9661 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9668 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9670 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9678 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9680 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l9715 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l9717 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9722 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9724 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9731 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_l9733 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9741 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9743 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9752 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9754 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9764 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_l9766 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l_crapy9797 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l_crapy9799 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9804 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9806 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9813 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9815 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9823 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9825 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9834 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9836 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9846 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9848 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_champ_full_in_crapy_repet9882 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_crapy_repet9886 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_crapy_repet9888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_champ_full9910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9918 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_full9925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_crapy_champ_ordered9943 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9945 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_champ_full9973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9981 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered10005 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered10007 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered10014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_sous_champ_full10034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HR_in_spec_act_1110061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_RX_in_spec_act_1110065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_act_1110069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_plus_in_spec_p_or_m10087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_moins_in_spec_p_or_m10091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_810111 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_810116 = new BitSet(new long[]{0x0000000000200200L});
    public static final BitSet FOLLOW_spec_ac_8_2_in_spec_ac_810118 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_810123 = new BitSet(new long[]{0x0000000000340000L});
    public static final BitSet FOLLOW_spec_ac_8_3_in_spec_ac_810125 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_810130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TM_in_spec_ac_8_210153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_210157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FR_in_spec_ac_8_210161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PF_in_spec_ac_8_310181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_SS_in_spec_ac_8_310185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_310189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_on_optionnal10208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_on_optionnal10212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_sexe10233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_sexe10237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_sexe10241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_010278 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_010281 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_010283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_110304 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_110307 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_110309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_210328 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_210331 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_210333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_7_13_210352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_7_13_210356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_7_13_210360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU10378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM10396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA10414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM10432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC10452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_REG_in_spec_const_7_7_contexte_REG10470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_NS_in_spec_const_7_7_contexte_NS10488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_7_1210507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_7_1210511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charT_in_spec_const_7_1210515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PORT_in_spec_const_9_3110535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_CART_in_spec_const_9_3110539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WHLC_in_spec_const_9_3110543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WALK_in_spec_const_9_3110547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_OP_in_spec_const_8_2510568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_IP_in_spec_const_8_2510572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ER_in_spec_const_8_2510576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PA_in_spec_const_8_2510580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MP_in_spec_const_8_2510584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_9_2610605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_9_2610609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_9_2610613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_9_2610617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_9_2610621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_9_2610625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_const_9_2610629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_9_2610635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_9_2610639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_nm10660 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_spec_const_10_3_nm10662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_ce10683 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_spec_const_10_3_ce10685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_spec_const_10_3_st10706 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_st10708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_gc10729 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_gc10731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_tx10753 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_spec_const_10_3_tx10755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_spec_const_10_3_fic10776 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_CHARI_in_spec_const_10_3_fic10778 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_fic10780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10802 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10810 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_spec_const_10_3_std10812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10818 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10820 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10828 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_spec_const_10_3_std10838 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10846 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10856 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_spec_const_10_3_std10858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10864 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010888 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_act_1010892 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010894 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_act_1010901 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610927 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610933 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610935 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610942 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_reg_410971 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_reg_410976 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_reg_410978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_611002 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_611008 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_611010 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_611017 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_611019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_10_911047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charH_in_spec_const_10_911051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_LL_in_spec_const_10_911055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HH_in_spec_const_10_911059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_inf_in_spec_const_10_911063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_sup_in_spec_const_10_911067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_911073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_911077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_AA_in_spec_const_10_911081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_Null_in_spec_const_10_911085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_911089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_911093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charB_in_spec_const_10_911097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charW_in_spec_const_10_911103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_911107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_911111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_911115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MS_in_spec_const_10_911119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_VS_in_spec_const_10_911123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_1111144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_1111148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1111152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_1111156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1211177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_10_1211181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_10_1211185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_10_1211189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_1211193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_1211197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_10_1211204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_1211208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_12_311229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_12_311233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_211253 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_211259 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_211261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_211284 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_211290 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_211292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411317 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411323 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411325 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411332 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411334 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_411342 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_411344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611373 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611379 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611381 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611388 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611390 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611398 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611400 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611409 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611411 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611421 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611446 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611453 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611455 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611463 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611465 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611474 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611476 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611486 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611488 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611499 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811534 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811540 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811542 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811549 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811551 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811559 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811561 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811570 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811572 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811582 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811584 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811595 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811597 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811609 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311648 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311654 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311656 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311663 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611688 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611694 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611696 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611703 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611705 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611713 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611715 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611724 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611726 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611736 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211767 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211772 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211799 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211804 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11829 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11836 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11838 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11846 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_spec_sized_8_311880 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311887 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311889 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311897 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311939 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_311945 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811972 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_non_sized_9_811979 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1612002 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1612008 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1612010 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1612017 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1612019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_10_412046 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_412052 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412054 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_412061 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412063 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_412071 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412073 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_412082 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412084 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_412094 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_412096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx12131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_tx12156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn12174 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_sized_tn12180 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn12182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_optionnal12210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_mandatory12233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_non_sized_optionnal12255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_nonsized_mandatory12274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_optionnal12292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_mandatory12315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal12337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory12365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_optionnal12388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_mandatory12411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_mandatory12433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_optionnal12451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_012470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_112488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_212508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_content_spec_10_6_in_final_spec_10_6_tx12525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_content_spec_10_612547 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_DELIMITER2_in_content_spec_10_612553 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_content_spec_10_6_in_content_spec_10_612564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12576 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12578 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12582 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12584 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12586 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12590 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12593 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12595 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12600 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12602 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12604 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12608 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12611 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_final_st12632 = new BitSet(new long[]{0x0001E0FFFFFFFFF2L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12661 = new BitSet(new long[]{0x000100FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm12665 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12667 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm12677 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12679 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm_integer12696 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_CHARA_in_final_ADM12708 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_final_ADM12710 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ADM12712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORA12720 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORA12722 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_ORA12724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORU12732 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORU12734 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_CHARU_in_final_ORU12736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORM12744 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORM12746 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ORM12748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FAC12756 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_FAC12758 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_FAC12760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_REG12768 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_final_REG12770 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_final_REG12772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_CART12781 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_CART12783 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_CART12785 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_CART12787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PORT12795 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_final_PORT12797 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_PORT12799 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_PORT12801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WHLC12809 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_WHLC12811 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WHLC12813 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_WHLC12815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WALK12823 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_WALK12825 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WALK12827 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_final_WALK12829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12838 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12848 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12858 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MS12868 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_MS12870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARV_in_final_VS12878 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_VS12880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_Null12888 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_CHARu_in_final_Null12890 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12892 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_final_symbol_plus12918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MOINS_in_final_symbol_moins12926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_012935 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_012937 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_012939 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_CHIFFRE0_in_final_version_2_012941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_112949 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_112951 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_112953 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_CHIFFRE1_in_final_version_2_112955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_212963 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212965 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_212967 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_OP12978 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_OP12980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_IP12988 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_IP12990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARE_in_final_ER12998 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ER13000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PA13008 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_PA13010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MP13018 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_MP13020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TM13028 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_TM13030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TR13038 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_TR13040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FR13048 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_FR13050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PF13058 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_final_PF13060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_SS13068 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_SS13070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_RX13078 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_final_RX13080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HR13088 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_HR13090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_NS13098 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_NS13100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_charA13109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARB_in_final_charB13117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_charC13125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_final_charD13133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_charF13141 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_charH13149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_charI13157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_charL13165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_charM13173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_charN13181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_charO13189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_charP13197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_charR13205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_charS13213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_charT13221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARU_in_final_charU13229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_charW13237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARX_in_final_charX13245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITERS_in_delimiters13266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lettre_in_character13282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_character13286 = new BitSet(new long[]{0x0000000000000002L});

}