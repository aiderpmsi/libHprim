// $ANTLR 3.4 C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g 2013-05-25 02:06:18

package com.github.aiderpmsi.hprim.parser.antlr;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.LinkedList;

import com.github.aiderpmsi.hprim.parser.MatchRegexTokenException;
import com.github.aiderpmsi.hprim.parser.ContentHandlerException;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class HPRIMSParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARA", "CHARB", "CHARC", "CHARD", "CHARE", "CHARF", "CHARG", "CHARH", "CHARI", "CHARK", "CHARL", "CHARM", "CHARN", "CHARO", "CHARP", "CHARR", "CHARS", "CHART", "CHARU", "CHARV", "CHARW", "CHARX", "CHAR_SYMBOL_INF", "CHAR_SYMBOL_SUP", "CHARl", "CHARu", "CHIFFRE0", "CHIFFRE1", "CHIFFRE2", "CHIFFRE3", "CHIFFRE4", "CHIFFRE5", "CHIFFRE6", "CHIFFRE7", "CHIFFRE8", "CHIFFRE9", "CR", "DELIMITER1", "DELIMITER2", "DELIMITER3", "DELIMITERS", "LETTRE", "MOINS", "PLUS", "POINT", "REPETITEUR", "TOKENMISMATCH"
    };

    public static final int EOF=-1;
    public static final int CHARA=4;
    public static final int CHARB=5;
    public static final int CHARC=6;
    public static final int CHARD=7;
    public static final int CHARE=8;
    public static final int CHARF=9;
    public static final int CHARG=10;
    public static final int CHARH=11;
    public static final int CHARI=12;
    public static final int CHARK=13;
    public static final int CHARL=14;
    public static final int CHARM=15;
    public static final int CHARN=16;
    public static final int CHARO=17;
    public static final int CHARP=18;
    public static final int CHARR=19;
    public static final int CHARS=20;
    public static final int CHART=21;
    public static final int CHARU=22;
    public static final int CHARV=23;
    public static final int CHARW=24;
    public static final int CHARX=25;
    public static final int CHAR_SYMBOL_INF=26;
    public static final int CHAR_SYMBOL_SUP=27;
    public static final int CHARl=28;
    public static final int CHARu=29;
    public static final int CHIFFRE0=30;
    public static final int CHIFFRE1=31;
    public static final int CHIFFRE2=32;
    public static final int CHIFFRE3=33;
    public static final int CHIFFRE4=34;
    public static final int CHIFFRE5=35;
    public static final int CHIFFRE6=36;
    public static final int CHIFFRE7=37;
    public static final int CHIFFRE8=38;
    public static final int CHIFFRE9=39;
    public static final int CR=40;
    public static final int DELIMITER1=41;
    public static final int DELIMITER2=42;
    public static final int DELIMITER3=43;
    public static final int DELIMITERS=44;
    public static final int LETTRE=45;
    public static final int MOINS=46;
    public static final int PLUS=47;
    public static final int POINT=48;
    public static final int REPETITEUR=49;
    public static final int TOKENMISMATCH=50;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public HPRIMSParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public HPRIMSParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

    public String[] getTokenNames() { return HPRIMSParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g"; }



      /**
       * Collecteur utilisé dans cette classe
       */
      public ContentHandler contentHandler;

      /**
       * Logger de la classe
       */
      private static final Logger logger = Logger.getLogger(HPRIMSParser.class.getCanonicalName());
      
      /**
       * Type utilisé pour se souvenir du dernier élément
       */
      private class XmlElement {
          public String uri;
          public String localName;
          public String qName;
      }
      
      /**
       * Liste des éléments parcourus
       */
      private LinkedList<XmlElement> xmlElements = new LinkedList<XmlElement>(); 

      /**
       * Constructeur
       * @param lexer
       * @param my_col
       */
      public HPRIMSParser(TokenStream input, ContentHandler contentHandler) {
        this(input);
        this.contentHandler = contentHandler;
      }
      
      /**
       * Formate une erreur sous forme de chaine de caractères
       * @param err
       * @return
       */
      public String formatError(RecognitionException err) {
        return getErrorHeader(err) + " / " + getErrorMessage(err, this.getTokenNames());
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void startElement(String nameElement) throws ContentHandlerException {
          try {
              // Enregistrement de cet élément
              XmlElement xmlElement = new XmlElement();
              xmlElement.uri = "";
              xmlElement.localName = nameElement;
              xmlElement.qName = nameElement;
              xmlElements.add(xmlElement);
              // Ajout de ce élément
              contentHandler.startElement("", nameElement, nameElement, new AttributesImpl());
           } catch (SAXException e) {
              ContentHandlerException exc = new ContentHandlerException(e.getMessage());
              exc.setIntStream(input);
              exc.setStartToken(input.LT(1));
              throw exc;
           }
        }
       
      /**
       * Encadre l'appel du contentHandler
       */
      public void endElement() throws ContentHandlerException {
        try {
            XmlElement xmlElement = xmlElements.pollLast();
            contentHandler.endElement(xmlElement.uri,
                xmlElement.localName, xmlElement.qName);
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Début de document hprim
       */
      public void startDocument() throws ContentHandlerException {
        try {
            contentHandler.startDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Fin de document hprim
       */
      public void endDocument() throws ContentHandlerException {
        try {
            contentHandler.endDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void content(String content) throws ContentHandlerException {
        try {
            contentHandler.characters(content.toCharArray(),
                0, content.length());
         } catch (SAXException e) {
             ContentHandlerException exc = new ContentHandlerException(e.getMessage());
             exc.setIntStream(input);
             exc.setStartToken(input.LT(1));
             throw exc;
         }
      }

      /**
       * Méthode pour permettre d'envoyer un message d'erreur correct lors d'une erreur de type
       * MatchRegexTokenException
       * @param e
       * @param tokenNames
       */
      public String getErrorMessage(RecognitionException e, String[] tokenNames) {
        if (e instanceof MatchRegexTokenException) {
          MatchRegexTokenException mrte = (MatchRegexTokenException) e;
          return "Malformed message : " + mrte.getText() +
            " does not match " + mrte.getRegex();
        } else if (e instanceof ContentHandlerException) {
          ContentHandlerException che = (ContentHandlerException) e;
          return "Content handling error : " + che.getText();
        } else {
           return super.getErrorMessage(e, tokenNames);
        }
      }
      
      /**
       * La reconnaissance d'une erreur dans le parser 
       * lance une erreur et arrête l'ensemble du parsing immédiatement
       * @param tokenNames
       * @param e
       */
       public void emitErrorMessage(String msg) {
          throw new IllegalArgumentException(msg);
       }
        
        /**
         * Réalise un regexp
         * @param text
         * @param regex
         * @param input
         * @throws RecognitionException
         */
        public void matchRegex(String text, String regex, Token startToken) throws RecognitionException {
          Pattern my_p = Pattern.compile(regex, Pattern.DOTALL);
          Matcher my_m = my_p.matcher(text);
          if (!my_m.matches())
            throw new MatchRegexTokenException(input, startToken, text, regex);
        }




    // $ANTLR start "hprim_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:204:1: hprim_crapy : line_h_crapy ( line_crapy )* ( CR )? EOF ;
    public final void hprim_crapy() throws RecognitionException {
        startDocument();startElement("HPRIM.CRAPY");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:206:36: ( line_h_crapy ( line_crapy )* ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:207:3: line_h_crapy ( line_crapy )* ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h_crapy_in_hprim_crapy67);
            line_h_crapy();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:208:3: ( line_crapy )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CR) ) {
                    int LA1_1 = input.LA(2);

                    if ( (LA1_1==CHARA||LA1_1==CHARC||LA1_1==CHARF||LA1_1==CHARL||(LA1_1 >= CHARO && LA1_1 <= CHARR)) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:208:3: line_crapy
            	    {
            	    pushFollow(FOLLOW_line_crapy_in_hprim_crapy71);
            	    line_crapy();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:209:3: ( CR )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==CR) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:209:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_crapy76); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_crapy81); 

            }

            endDocument();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_crapy"



    // $ANTLR start "hprim"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:212:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );
    public final void hprim() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:214:23: ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 )
            int alt3=18;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:3: hprim_oru_2_2
                    {
                    pushFollow(FOLLOW_hprim_oru_2_2_in_hprim98);
                    hprim_oru_2_2();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:19: hprim_oru_2_1
                    {
                    pushFollow(FOLLOW_hprim_oru_2_1_in_hprim102);
                    hprim_oru_2_1();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:215:35: hprim_oru_2_0
                    {
                    pushFollow(FOLLOW_hprim_oru_2_0_in_hprim106);
                    hprim_oru_2_0();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:3: hprim_orm_2_2
                    {
                    pushFollow(FOLLOW_hprim_orm_2_2_in_hprim112);
                    hprim_orm_2_2();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:19: hprim_orm_2_1
                    {
                    pushFollow(FOLLOW_hprim_orm_2_1_in_hprim116);
                    hprim_orm_2_1();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:216:35: hprim_orm_2_0
                    {
                    pushFollow(FOLLOW_hprim_orm_2_0_in_hprim120);
                    hprim_orm_2_0();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:3: hprim_ora_2_2
                    {
                    pushFollow(FOLLOW_hprim_ora_2_2_in_hprim126);
                    hprim_ora_2_2();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:19: hprim_ora_2_1
                    {
                    pushFollow(FOLLOW_hprim_ora_2_1_in_hprim130);
                    hprim_ora_2_1();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:217:35: hprim_ora_2_0
                    {
                    pushFollow(FOLLOW_hprim_ora_2_0_in_hprim134);
                    hprim_ora_2_0();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:218:3: hprim_adm_2_2
                    {
                    pushFollow(FOLLOW_hprim_adm_2_2_in_hprim140);
                    hprim_adm_2_2();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:218:19: hprim_adm_2_1
                    {
                    pushFollow(FOLLOW_hprim_adm_2_1_in_hprim144);
                    hprim_adm_2_1();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:218:35: hprim_adm_2_0
                    {
                    pushFollow(FOLLOW_hprim_adm_2_0_in_hprim148);
                    hprim_adm_2_0();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:219:3: hprim_fac_2_2
                    {
                    pushFollow(FOLLOW_hprim_fac_2_2_in_hprim153);
                    hprim_fac_2_2();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:219:19: hprim_fac_2_1
                    {
                    pushFollow(FOLLOW_hprim_fac_2_1_in_hprim157);
                    hprim_fac_2_1();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:219:35: hprim_fac_2_0
                    {
                    pushFollow(FOLLOW_hprim_fac_2_0_in_hprim161);
                    hprim_fac_2_0();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:220:3: hprim_reg_2_2
                    {
                    pushFollow(FOLLOW_hprim_reg_2_2_in_hprim166);
                    hprim_reg_2_2();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:220:19: hprim_reg_2_1
                    {
                    pushFollow(FOLLOW_hprim_reg_2_1_in_hprim170);
                    hprim_reg_2_1();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:220:35: hprim_reg_2_0
                    {
                    pushFollow(FOLLOW_hprim_reg_2_0_in_hprim174);
                    hprim_reg_2_0();

                    state._fsp--;


                    }
                    break;

            }
            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim"



    // $ANTLR start "hprim_oru_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:223:1: hprim_oru_2_2 : line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_2() throws RecognitionException {
        startElement("HPRIM.ORU.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:225:22: ( line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:226:3: line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_oru_in_hprim_oru_2_2192);
            line_h2_2_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:227:3: ( body_p_oru )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==CR) ) {
                    int LA4_1 = input.LA(2);

                    if ( (LA4_1==CHARP) ) {
                        alt4=1;
                    }


                }


                switch (alt4) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:227:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_2196);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_2201);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:229:3: ( CR )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==CR) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:229:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_2205); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_2210); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_2"



    // $ANTLR start "hprim_oru_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:232:1: hprim_oru_2_1 : line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_1() throws RecognitionException {
        startElement("HPRIM.ORU.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:234:22: ( line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:235:3: line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_oru_in_hprim_oru_2_1227);
            line_h2_1_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:236:3: ( body_p_oru )+
            int cnt6=0;
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==CR) ) {
                    int LA6_1 = input.LA(2);

                    if ( (LA6_1==CHARP) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:236:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_1231);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt6 >= 1 ) break loop6;
                        EarlyExitException eee =
                            new EarlyExitException(6, input);
                        throw eee;
                }
                cnt6++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_1236);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:238:3: ( CR )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==CR) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:238:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_1240); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_1245); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_1"



    // $ANTLR start "hprim_oru_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:241:1: hprim_oru_2_0 : line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_0() throws RecognitionException {
        startElement("HPRIM.ORU.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:243:22: ( line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:244:3: line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_oru_in_hprim_oru_2_0262);
            line_h2_0_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:245:3: ( body_p_oru )+
            int cnt8=0;
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==CR) ) {
                    int LA8_1 = input.LA(2);

                    if ( (LA8_1==CHARP) ) {
                        alt8=1;
                    }


                }


                switch (alt8) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:245:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_0266);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt8 >= 1 ) break loop8;
                        EarlyExitException eee =
                            new EarlyExitException(8, input);
                        throw eee;
                }
                cnt8++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_0271);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:247:3: ( CR )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==CR) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:247:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_0275); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_0280); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_0"



    // $ANTLR start "hprim_ora_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:251:1: hprim_ora_2_2 : line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_2() throws RecognitionException {
        startElement("HPRIM.ORA.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:253:22: ( line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:254:3: line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ora_in_hprim_ora_2_2298);
            line_h2_2_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:255:3: ( body_p_ora )+
            int cnt10=0;
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==CR) ) {
                    int LA10_1 = input.LA(2);

                    if ( (LA10_1==CHARP) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:255:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_2302);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_2307);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:257:3: ( CR )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==CR) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:257:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_2311); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_2316); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_2"



    // $ANTLR start "hprim_ora_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:260:1: hprim_ora_2_1 : line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_1() throws RecognitionException {
        startElement("HPRIM.ORA.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:262:22: ( line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:263:3: line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ora_in_hprim_ora_2_1333);
            line_h2_1_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:264:3: ( body_p_ora )+
            int cnt12=0;
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==CR) ) {
                    int LA12_1 = input.LA(2);

                    if ( (LA12_1==CHARP) ) {
                        alt12=1;
                    }


                }


                switch (alt12) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:264:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_1337);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_1342);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:266:3: ( CR )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==CR) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:266:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_1346); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_1351); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_1"



    // $ANTLR start "hprim_ora_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:269:1: hprim_ora_2_0 : line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_0() throws RecognitionException {
        startElement("HPRIM.ORA.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:271:22: ( line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:272:3: line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ora_in_hprim_ora_2_0368);
            line_h2_0_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:273:3: ( body_p_ora )+
            int cnt14=0;
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==CR) ) {
                    int LA14_1 = input.LA(2);

                    if ( (LA14_1==CHARP) ) {
                        alt14=1;
                    }


                }


                switch (alt14) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:273:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_0372);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt14 >= 1 ) break loop14;
                        EarlyExitException eee =
                            new EarlyExitException(14, input);
                        throw eee;
                }
                cnt14++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_0377);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:275:3: ( CR )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==CR) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:275:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_0381); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_0386); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_0"



    // $ANTLR start "hprim_orm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:279:1: hprim_orm_2_2 : line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_2() throws RecognitionException {
        startElement("HPRIM.ORM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:281:22: ( line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:282:3: line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_orm_in_hprim_orm_2_2404);
            line_h2_2_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:283:3: ( body_p_orm )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==CR) ) {
                    int LA16_1 = input.LA(2);

                    if ( (LA16_1==CHARP) ) {
                        alt16=1;
                    }


                }


                switch (alt16) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:283:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_2408);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_2413);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:285:3: ( CR )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==CR) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:285:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_2417); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_2422); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_2"



    // $ANTLR start "hprim_orm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:288:1: hprim_orm_2_1 : line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_1() throws RecognitionException {
        startElement("HPRIM.ORM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:290:22: ( line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:291:3: line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_orm_in_hprim_orm_2_1439);
            line_h2_1_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:292:3: ( body_p_orm )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==CR) ) {
                    int LA18_1 = input.LA(2);

                    if ( (LA18_1==CHARP) ) {
                        alt18=1;
                    }


                }


                switch (alt18) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:292:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_1443);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_1448);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:294:3: ( CR )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==CR) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:294:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_1452); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_1457); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_1"



    // $ANTLR start "hprim_orm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:297:1: hprim_orm_2_0 : line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_0() throws RecognitionException {
        startElement("HPRIM.ORM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:299:22: ( line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:300:3: line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_orm_in_hprim_orm_2_0474);
            line_h2_0_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:301:3: ( body_p_orm )+
            int cnt20=0;
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==CR) ) {
                    int LA20_1 = input.LA(2);

                    if ( (LA20_1==CHARP) ) {
                        alt20=1;
                    }


                }


                switch (alt20) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:301:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_0478);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_0483);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:303:3: ( CR )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==CR) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:303:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_0487); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_0492); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_0"



    // $ANTLR start "hprim_adm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:307:1: hprim_adm_2_2 : line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_2() throws RecognitionException {
        startElement("HPRIM.ADM.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:309:22: ( line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:310:3: line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_adm_in_hprim_adm_2_2510);
            line_h2_2_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:311:3: ( body_p_adm )+
            int cnt22=0;
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==CR) ) {
                    int LA22_1 = input.LA(2);

                    if ( (LA22_1==CHARP) ) {
                        alt22=1;
                    }


                }


                switch (alt22) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:311:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_2514);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_2519);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:313:3: ( CR )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==CR) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:313:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_2523); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_2528); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_2"



    // $ANTLR start "hprim_adm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:316:1: hprim_adm_2_1 : line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_1() throws RecognitionException {
        startElement("HPRIM.ADM.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:318:22: ( line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:319:3: line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_adm_in_hprim_adm_2_1545);
            line_h2_1_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:320:3: ( body_p_adm )+
            int cnt24=0;
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==CR) ) {
                    int LA24_1 = input.LA(2);

                    if ( (LA24_1==CHARP) ) {
                        alt24=1;
                    }


                }


                switch (alt24) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:320:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_1549);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt24 >= 1 ) break loop24;
                        EarlyExitException eee =
                            new EarlyExitException(24, input);
                        throw eee;
                }
                cnt24++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_1554);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:322:3: ( CR )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==CR) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:322:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_1558); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_1563); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_1"



    // $ANTLR start "hprim_adm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:325:1: hprim_adm_2_0 : line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_0() throws RecognitionException {
        startElement("HPRIM.ADM.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:327:22: ( line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:328:3: line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_adm_in_hprim_adm_2_0580);
            line_h2_0_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:329:3: ( body_p_adm )+
            int cnt26=0;
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==CR) ) {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==CHARP) ) {
                        alt26=1;
                    }


                }


                switch (alt26) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:329:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_0584);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt26 >= 1 ) break loop26;
                        EarlyExitException eee =
                            new EarlyExitException(26, input);
                        throw eee;
                }
                cnt26++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_0589);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:331:3: ( CR )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==CR) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:331:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_0593); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_0598); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_0"



    // $ANTLR start "hprim_fac_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:335:1: hprim_fac_2_2 : line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_2() throws RecognitionException {
        startElement("HPRIM.FAC.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:337:22: ( line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:338:3: line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_fac_in_hprim_fac_2_2616);
            line_h2_2_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:339:3: ( body_p_fac )+
            int cnt28=0;
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==CR) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==CHARP) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:339:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_2620);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt28 >= 1 ) break loop28;
                        EarlyExitException eee =
                            new EarlyExitException(28, input);
                        throw eee;
                }
                cnt28++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_2625);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:341:3: ( CR )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==CR) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:341:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_2629); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_2634); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_2"



    // $ANTLR start "hprim_fac_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:344:1: hprim_fac_2_1 : line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_1() throws RecognitionException {
        startElement("HPRIM.FAC.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:346:22: ( line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:347:3: line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_fac_in_hprim_fac_2_1651);
            line_h2_1_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:348:3: ( body_p_fac )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==CR) ) {
                    int LA30_1 = input.LA(2);

                    if ( (LA30_1==CHARP) ) {
                        alt30=1;
                    }


                }


                switch (alt30) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:348:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_1655);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_1660);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:350:3: ( CR )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==CR) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:350:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_1664); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_1669); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_1"



    // $ANTLR start "hprim_fac_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:353:1: hprim_fac_2_0 : line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_0() throws RecognitionException {
        startElement("HPRIM.FAC.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:355:22: ( line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:356:3: line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_fac_in_hprim_fac_2_0686);
            line_h2_0_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:357:3: ( body_p_fac )+
            int cnt32=0;
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==CR) ) {
                    int LA32_1 = input.LA(2);

                    if ( (LA32_1==CHARP) ) {
                        alt32=1;
                    }


                }


                switch (alt32) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:357:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_0690);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt32 >= 1 ) break loop32;
                        EarlyExitException eee =
                            new EarlyExitException(32, input);
                        throw eee;
                }
                cnt32++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_0695);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:359:3: ( CR )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==CR) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:359:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_0699); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_0704); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_0"



    // $ANTLR start "hprim_reg_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:363:1: hprim_reg_2_2 : line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_2() throws RecognitionException {
        startElement("HPRIM.REG.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:365:22: ( line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:366:3: line_h2_2_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_reg_in_hprim_reg_2_2722);
            line_h2_2_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:367:3: ( body_p_reg )+
            int cnt34=0;
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==CR) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==CHARP) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:367:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_2726);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_2731);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:369:3: ( CR )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==CR) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:369:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_2735); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_2740); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_2"



    // $ANTLR start "hprim_reg_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:372:1: hprim_reg_2_1 : line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_1() throws RecognitionException {
        startElement("HPRIM.REG.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:374:22: ( line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:375:3: line_h2_1_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_reg_in_hprim_reg_2_1757);
            line_h2_1_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:376:3: ( body_p_reg )+
            int cnt36=0;
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==CR) ) {
                    int LA36_1 = input.LA(2);

                    if ( (LA36_1==CHARP) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:376:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_1761);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt36 >= 1 ) break loop36;
                        EarlyExitException eee =
                            new EarlyExitException(36, input);
                        throw eee;
                }
                cnt36++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_1766);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:378:3: ( CR )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==CR) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:378:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_1770); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_1775); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_1"



    // $ANTLR start "hprim_reg_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:381:1: hprim_reg_2_0 : line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF ;
    public final void hprim_reg_2_0() throws RecognitionException {
        startElement("HPRIM.REG.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:383:22: ( line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:384:3: line_h2_0_reg ( body_p_reg )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_reg_in_hprim_reg_2_0792);
            line_h2_0_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:385:3: ( body_p_reg )+
            int cnt38=0;
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CR) ) {
                    int LA38_1 = input.LA(2);

                    if ( (LA38_1==CHARP) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:385:3: body_p_reg
            	    {
            	    pushFollow(FOLLOW_body_p_reg_in_hprim_reg_2_0796);
            	    body_p_reg();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt38 >= 1 ) break loop38;
                        EarlyExitException eee =
                            new EarlyExitException(38, input);
                        throw eee;
                }
                cnt38++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_reg_2_0801);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:387:3: ( CR )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==CR) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:387:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_reg_2_0805); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_reg_2_0810); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_reg_2_0"



    // $ANTLR start "hprim_ns_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:391:1: hprim_ns_2_2 : line_h2_2_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_2() throws RecognitionException {
        startElement("HPRIM.NS.2.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:393:22: ( line_h2_2_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:394:3: line_h2_2_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ns_in_hprim_ns_2_2828);
            line_h2_2_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_2832);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:396:3: ( CR )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==CR) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:396:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_2836); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_2841); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_2"



    // $ANTLR start "hprim_ns_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:399:1: hprim_ns_2_1 : line_h2_1_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_1() throws RecognitionException {
        startElement("HPRIM.NS.2.1");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:401:22: ( line_h2_1_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:402:3: line_h2_1_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ns_in_hprim_ns_2_1858);
            line_h2_1_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_1862);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:404:3: ( CR )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==CR) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:404:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_1866); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_1871); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_1"



    // $ANTLR start "hprim_ns_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:407:1: hprim_ns_2_0 : line_h2_0_ns line_l ( CR )? EOF ;
    public final void hprim_ns_2_0() throws RecognitionException {
        startElement("HPRIM.NS.2.0");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:409:22: ( line_h2_0_ns line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:410:3: line_h2_0_ns line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ns_in_hprim_ns_2_0888);
            line_h2_0_ns();

            state._fsp--;


            pushFollow(FOLLOW_line_l_in_hprim_ns_2_0892);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:412:3: ( CR )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==CR) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:412:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ns_2_0896); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ns_2_0901); 

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ns_2_0"



    // $ANTLR start "line_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:416:1: line_crapy : ( line_p_crapy | line_c_crapy | line_ap_crapy | line_ac_crapy | line_obr_crapy | line_obx_crapy | line_fac_crapy | line_reg_crapy | line_act_crapy | line_l_crapy );
    public final void line_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:416:12: ( line_p_crapy | line_c_crapy | line_ap_crapy | line_ac_crapy | line_obr_crapy | line_obx_crapy | line_fac_crapy | line_reg_crapy | line_act_crapy | line_l_crapy )
            int alt43=10;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==CR) ) {
                switch ( input.LA(2) ) {
                case CHARP:
                    {
                    alt43=1;
                    }
                    break;
                case CHARC:
                    {
                    alt43=2;
                    }
                    break;
                case CHARA:
                    {
                    int LA43_4 = input.LA(3);

                    if ( (LA43_4==CHARP) ) {
                        alt43=3;
                    }
                    else if ( (LA43_4==CHARC) ) {
                        int LA43_10 = input.LA(4);

                        if ( (LA43_10==CHART) ) {
                            alt43=9;
                        }
                        else if ( (LA43_10==EOF||(LA43_10 >= CR && LA43_10 <= DELIMITER1)) ) {
                            alt43=4;
                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 10, input);

                            throw nvae;

                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 4, input);

                        throw nvae;

                    }
                    }
                    break;
                case CHARO:
                    {
                    int LA43_5 = input.LA(3);

                    if ( (LA43_5==CHARB) ) {
                        int LA43_11 = input.LA(4);

                        if ( (LA43_11==CHARR) ) {
                            alt43=5;
                        }
                        else if ( (LA43_11==CHARX) ) {
                            alt43=6;
                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 11, input);

                            throw nvae;

                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 5, input);

                        throw nvae;

                    }
                    }
                    break;
                case CHARF:
                    {
                    alt43=7;
                    }
                    break;
                case CHARR:
                    {
                    alt43=8;
                    }
                    break;
                case CHARL:
                    {
                    alt43=10;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }

            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }
            switch (alt43) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:417:3: line_p_crapy
                    {
                    pushFollow(FOLLOW_line_p_crapy_in_line_crapy912);
                    line_p_crapy();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:418:3: line_c_crapy
                    {
                    pushFollow(FOLLOW_line_c_crapy_in_line_crapy918);
                    line_c_crapy();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:419:3: line_ap_crapy
                    {
                    pushFollow(FOLLOW_line_ap_crapy_in_line_crapy924);
                    line_ap_crapy();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:420:3: line_ac_crapy
                    {
                    pushFollow(FOLLOW_line_ac_crapy_in_line_crapy930);
                    line_ac_crapy();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:421:3: line_obr_crapy
                    {
                    pushFollow(FOLLOW_line_obr_crapy_in_line_crapy936);
                    line_obr_crapy();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:422:3: line_obx_crapy
                    {
                    pushFollow(FOLLOW_line_obx_crapy_in_line_crapy942);
                    line_obx_crapy();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:423:3: line_fac_crapy
                    {
                    pushFollow(FOLLOW_line_fac_crapy_in_line_crapy948);
                    line_fac_crapy();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:424:3: line_reg_crapy
                    {
                    pushFollow(FOLLOW_line_reg_crapy_in_line_crapy954);
                    line_reg_crapy();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:425:3: line_act_crapy
                    {
                    pushFollow(FOLLOW_line_act_crapy_in_line_crapy960);
                    line_act_crapy();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:426:3: line_l_crapy
                    {
                    pushFollow(FOLLOW_line_l_crapy_in_line_crapy966);
                    line_l_crapy();

                    state._fsp--;


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_crapy"



    // $ANTLR start "body_p_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:429:1: body_p_orm : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ ;
    public final void body_p_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:429:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_orm977);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:10: ( line_c )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==CR) ) {
                    int LA44_1 = input.LA(2);

                    if ( (LA44_1==CHARC) ) {
                        alt44=1;
                    }


                }


                switch (alt44) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:430:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_orm980);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            int cnt48=0;
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==CR) ) {
                    int LA48_1 = input.LA(2);

                    if ( (LA48_1==CHARO) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:4: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_orm987);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:13: ( line_c )*
            	    loop45:
            	    do {
            	        int alt45=2;
            	        int LA45_0 = input.LA(1);

            	        if ( (LA45_0==CR) ) {
            	            int LA45_1 = input.LA(2);

            	            if ( (LA45_1==CHARC) ) {
            	                alt45=1;
            	            }


            	        }


            	        switch (alt45) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:431:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_orm990);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop45;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:4: ( line_obx ( line_c )* )*
            	    loop47:
            	    do {
            	        int alt47=2;
            	        int LA47_0 = input.LA(1);

            	        if ( (LA47_0==CR) ) {
            	            int LA47_1 = input.LA(2);

            	            if ( (LA47_1==CHARO) ) {
            	                int LA47_3 = input.LA(3);

            	                if ( (LA47_3==CHARB) ) {
            	                    int LA47_4 = input.LA(4);

            	                    if ( (LA47_4==CHARX) ) {
            	                        alt47=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt47) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_orm998);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:14: ( line_c )*
            	    	    loop46:
            	    	    do {
            	    	        int alt46=2;
            	    	        int LA46_0 = input.LA(1);

            	    	        if ( (LA46_0==CR) ) {
            	    	            int LA46_1 = input.LA(2);

            	    	            if ( (LA46_1==CHARC) ) {
            	    	                alt46=1;
            	    	            }


            	    	        }


            	    	        switch (alt46) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:432:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_orm1001);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop46;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop47;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt48 >= 1 ) break loop48;
                        EarlyExitException eee =
                            new EarlyExitException(48, input);
                        throw eee;
                }
                cnt48++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_orm"



    // $ANTLR start "body_p_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:436:1: body_p_ora : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ ;
    public final void body_p_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:436:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:437:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_ora1021);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:437:10: ( line_c )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==CR) ) {
                    int LA49_1 = input.LA(2);

                    if ( (LA49_1==CHARC) ) {
                        alt49=1;
                    }


                }


                switch (alt49) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:437:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_ora1024);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:438:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+ )+
            int cnt57=0;
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==CR) ) {
                    int LA57_1 = input.LA(2);

                    if ( (LA57_1==CHARA) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:438:4: line_ap ( line_c )* ( line_ac ( line_c )* )* ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_ora1031);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:438:12: ( line_c )*
            	    loop50:
            	    do {
            	        int alt50=2;
            	        int LA50_0 = input.LA(1);

            	        if ( (LA50_0==CR) ) {
            	            int LA50_1 = input.LA(2);

            	            if ( (LA50_1==CHARC) ) {
            	                alt50=1;
            	            }


            	        }


            	        switch (alt50) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:438:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1034);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop50;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:4: ( line_ac ( line_c )* )*
            	    loop52:
            	    do {
            	        int alt52=2;
            	        int LA52_0 = input.LA(1);

            	        if ( (LA52_0==CR) ) {
            	            int LA52_1 = input.LA(2);

            	            if ( (LA52_1==CHARA) ) {
            	                alt52=1;
            	            }


            	        }


            	        switch (alt52) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_ora1042);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:13: ( line_c )*
            	    	    loop51:
            	    	    do {
            	    	        int alt51=2;
            	    	        int LA51_0 = input.LA(1);

            	    	        if ( (LA51_0==CR) ) {
            	    	            int LA51_1 = input.LA(2);

            	    	            if ( (LA51_1==CHARC) ) {
            	    	                alt51=1;
            	    	            }


            	    	        }


            	    	        switch (alt51) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:439:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1045);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop51;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop52;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:4: ( line_obr ( line_c )* ( line_obx ( line_c )* )* )+
            	    int cnt56=0;
            	    loop56:
            	    do {
            	        int alt56=2;
            	        int LA56_0 = input.LA(1);

            	        if ( (LA56_0==CR) ) {
            	            int LA56_1 = input.LA(2);

            	            if ( (LA56_1==CHARO) ) {
            	                alt56=1;
            	            }


            	        }


            	        switch (alt56) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:5: line_obr ( line_c )* ( line_obx ( line_c )* )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obr_in_body_p_ora1055);
            	    	    line_obr();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:14: ( line_c )*
            	    	    loop53:
            	    	    do {
            	    	        int alt53=2;
            	    	        int LA53_0 = input.LA(1);

            	    	        if ( (LA53_0==CR) ) {
            	    	            int LA53_1 = input.LA(2);

            	    	            if ( (LA53_1==CHARC) ) {
            	    	                alt53=1;
            	    	            }


            	    	        }


            	    	        switch (alt53) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:440:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1058);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop53;
            	    	        }
            	    	    } while (true);


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:5: ( line_obx ( line_c )* )*
            	    	    loop55:
            	    	    do {
            	    	        int alt55=2;
            	    	        int LA55_0 = input.LA(1);

            	    	        if ( (LA55_0==CR) ) {
            	    	            int LA55_1 = input.LA(2);

            	    	            if ( (LA55_1==CHARO) ) {
            	    	                int LA55_3 = input.LA(3);

            	    	                if ( (LA55_3==CHARB) ) {
            	    	                    int LA55_4 = input.LA(4);

            	    	                    if ( (LA55_4==CHARX) ) {
            	    	                        alt55=1;
            	    	                    }


            	    	                }


            	    	            }


            	    	        }


            	    	        switch (alt55) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:6: line_obx ( line_c )*
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_obx_in_body_p_ora1067);
            	    	    	    line_obx();

            	    	    	    state._fsp--;


            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:15: ( line_c )*
            	    	    	    loop54:
            	    	    	    do {
            	    	    	        int alt54=2;
            	    	    	        int LA54_0 = input.LA(1);

            	    	    	        if ( (LA54_0==CR) ) {
            	    	    	            int LA54_1 = input.LA(2);

            	    	    	            if ( (LA54_1==CHARC) ) {
            	    	    	                alt54=1;
            	    	    	            }


            	    	    	        }


            	    	    	        switch (alt54) {
            	    	    	    	case 1 :
            	    	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:441:16: line_c
            	    	    	    	    {
            	    	    	    	    pushFollow(FOLLOW_line_c_in_body_p_ora1070);
            	    	    	    	    line_c();

            	    	    	    	    state._fsp--;


            	    	    	    	    }
            	    	    	    	    break;

            	    	    	    	default :
            	    	    	    	    break loop54;
            	    	    	        }
            	    	    	    } while (true);


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop55;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt56 >= 1 ) break loop56;
            	                EarlyExitException eee =
            	                    new EarlyExitException(56, input);
            	                throw eee;
            	        }
            	        cnt56++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt57 >= 1 ) break loop57;
                        EarlyExitException eee =
                            new EarlyExitException(57, input);
                        throw eee;
                }
                cnt57++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_ora"



    // $ANTLR start "body_p_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:446:1: body_p_oru : line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ ;
    public final void body_p_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:446:12: ( line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:3: line_p ( line_c )* ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_oru1096);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:10: ( line_c )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==CR) ) {
                    int LA58_1 = input.LA(2);

                    if ( (LA58_1==CHARC) ) {
                        alt58=1;
                    }


                }


                switch (alt58) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:447:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_oru1099);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:3: ( line_obr ( line_c )* ( line_obx ( line_c )* )+ )+
            int cnt62=0;
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==CR) ) {
                    int LA62_1 = input.LA(2);

                    if ( (LA62_1==CHARO) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:4: line_obr ( line_c )* ( line_obx ( line_c )* )+
            	    {
            	    pushFollow(FOLLOW_line_obr_in_body_p_oru1106);
            	    line_obr();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:13: ( line_c )*
            	    loop59:
            	    do {
            	        int alt59=2;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==CR) ) {
            	            int LA59_1 = input.LA(2);

            	            if ( (LA59_1==CHARC) ) {
            	                alt59=1;
            	            }


            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:448:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1109);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop59;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:4: ( line_obx ( line_c )* )+
            	    int cnt61=0;
            	    loop61:
            	    do {
            	        int alt61=2;
            	        int LA61_0 = input.LA(1);

            	        if ( (LA61_0==CR) ) {
            	            int LA61_1 = input.LA(2);

            	            if ( (LA61_1==CHARO) ) {
            	                int LA61_3 = input.LA(3);

            	                if ( (LA61_3==CHARB) ) {
            	                    int LA61_4 = input.LA(4);

            	                    if ( (LA61_4==CHARX) ) {
            	                        alt61=1;
            	                    }


            	                }


            	            }


            	        }


            	        switch (alt61) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:5: line_obx ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_obx_in_body_p_oru1117);
            	    	    line_obx();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:14: ( line_c )*
            	    	    loop60:
            	    	    do {
            	    	        int alt60=2;
            	    	        int LA60_0 = input.LA(1);

            	    	        if ( (LA60_0==CR) ) {
            	    	            int LA60_1 = input.LA(2);

            	    	            if ( (LA60_1==CHARC) ) {
            	    	                alt60=1;
            	    	            }


            	    	        }


            	    	        switch (alt60) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:449:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_oru1120);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop60;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt61 >= 1 ) break loop61;
            	                EarlyExitException eee =
            	                    new EarlyExitException(61, input);
            	                throw eee;
            	        }
            	        cnt61++;
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt62 >= 1 ) break loop62;
                        EarlyExitException eee =
                            new EarlyExitException(62, input);
                        throw eee;
                }
                cnt62++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_oru"



    // $ANTLR start "body_p_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:453:1: body_p_adm : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* ;
    public final void body_p_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:453:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_adm1140);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:10: ( line_c )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==CR) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==CHARC) ) {
                        alt63=1;
                    }


                }


                switch (alt63) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:454:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_adm1143);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==CR) ) {
                    int LA67_1 = input.LA(2);

                    if ( (LA67_1==CHARA) ) {
                        alt67=1;
                    }


                }


                switch (alt67) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_ap_in_body_p_adm1150);
            	    line_ap();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:12: ( line_c )*
            	    loop64:
            	    do {
            	        int alt64=2;
            	        int LA64_0 = input.LA(1);

            	        if ( (LA64_0==CR) ) {
            	            int LA64_1 = input.LA(2);

            	            if ( (LA64_1==CHARC) ) {
            	                alt64=1;
            	            }


            	        }


            	        switch (alt64) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:455:13: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1153);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop64;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:456:4: ( line_ac ( line_c )* )*
            	    loop66:
            	    do {
            	        int alt66=2;
            	        int LA66_0 = input.LA(1);

            	        if ( (LA66_0==CR) ) {
            	            int LA66_1 = input.LA(2);

            	            if ( (LA66_1==CHARA) ) {
            	                int LA66_3 = input.LA(3);

            	                if ( (LA66_3==CHARC) ) {
            	                    alt66=1;
            	                }


            	            }


            	        }


            	        switch (alt66) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:456:5: line_ac ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_ac_in_body_p_adm1161);
            	    	    line_ac();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:456:13: ( line_c )*
            	    	    loop65:
            	    	    do {
            	    	        int alt65=2;
            	    	        int LA65_0 = input.LA(1);

            	    	        if ( (LA65_0==CR) ) {
            	    	            int LA65_1 = input.LA(2);

            	    	            if ( (LA65_1==CHARC) ) {
            	    	                alt65=1;
            	    	            }


            	    	        }


            	    	        switch (alt65) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:456:14: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_adm1164);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop65;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop66;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_adm"



    // $ANTLR start "body_p_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:1: body_p_fac : line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ ;
    public final void body_p_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:460:12: ( line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:3: line_p ( line_c )* ( line_ap ( line_c )* ( line_ac ( line_c )* )* )? ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_fac1184);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:10: ( line_c )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==CR) ) {
                    int LA68_1 = input.LA(2);

                    if ( (LA68_1==CHARC) ) {
                        alt68=1;
                    }


                }


                switch (alt68) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:461:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_fac1187);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:3: ( line_ap ( line_c )* ( line_ac ( line_c )* )* )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==CR) ) {
                int LA72_1 = input.LA(2);

                if ( (LA72_1==CHARA) ) {
                    alt72=1;
                }
            }
            switch (alt72) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:4: line_ap ( line_c )* ( line_ac ( line_c )* )*
                    {
                    pushFollow(FOLLOW_line_ap_in_body_p_fac1194);
                    line_ap();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:12: ( line_c )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==CR) ) {
                            int LA69_1 = input.LA(2);

                            if ( (LA69_1==CHARC) ) {
                                alt69=1;
                            }


                        }


                        switch (alt69) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:462:13: line_c
                    	    {
                    	    pushFollow(FOLLOW_line_c_in_body_p_fac1197);
                    	    line_c();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:463:4: ( line_ac ( line_c )* )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==CR) ) {
                            int LA71_1 = input.LA(2);

                            if ( (LA71_1==CHARA) ) {
                                alt71=1;
                            }


                        }


                        switch (alt71) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:463:5: line_ac ( line_c )*
                    	    {
                    	    pushFollow(FOLLOW_line_ac_in_body_p_fac1205);
                    	    line_ac();

                    	    state._fsp--;


                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:463:13: ( line_c )*
                    	    loop70:
                    	    do {
                    	        int alt70=2;
                    	        int LA70_0 = input.LA(1);

                    	        if ( (LA70_0==CR) ) {
                    	            int LA70_1 = input.LA(2);

                    	            if ( (LA70_1==CHARC) ) {
                    	                alt70=1;
                    	            }


                    	        }


                    	        switch (alt70) {
                    	    	case 1 :
                    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:463:14: line_c
                    	    	    {
                    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1208);
                    	    	    line_c();

                    	    	    state._fsp--;


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop70;
                    	        }
                    	    } while (true);


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:3: ( line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )* )+
            int cnt78=0;
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==CR) ) {
                    int LA78_1 = input.LA(2);

                    if ( (LA78_1==CHARF) ) {
                        alt78=1;
                    }


                }


                switch (alt78) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:4: line_fac ( line_c )* ( line_reg ( line_c )* )* ( line_act ( line_c )* )*
            	    {
            	    pushFollow(FOLLOW_line_fac_in_body_p_fac1222);
            	    line_fac();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:13: ( line_c )*
            	    loop73:
            	    do {
            	        int alt73=2;
            	        int LA73_0 = input.LA(1);

            	        if ( (LA73_0==CR) ) {
            	            int LA73_1 = input.LA(2);

            	            if ( (LA73_1==CHARC) ) {
            	                alt73=1;
            	            }


            	        }


            	        switch (alt73) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:465:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1225);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop73;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:4: ( line_reg ( line_c )* )*
            	    loop75:
            	    do {
            	        int alt75=2;
            	        int LA75_0 = input.LA(1);

            	        if ( (LA75_0==CR) ) {
            	            int LA75_1 = input.LA(2);

            	            if ( (LA75_1==CHARR) ) {
            	                alt75=1;
            	            }


            	        }


            	        switch (alt75) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:5: line_reg ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_reg_in_body_p_fac1233);
            	    	    line_reg();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:14: ( line_c )*
            	    	    loop74:
            	    	    do {
            	    	        int alt74=2;
            	    	        int LA74_0 = input.LA(1);

            	    	        if ( (LA74_0==CR) ) {
            	    	            int LA74_1 = input.LA(2);

            	    	            if ( (LA74_1==CHARC) ) {
            	    	                alt74=1;
            	    	            }


            	    	        }


            	    	        switch (alt74) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:466:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1236);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop74;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop75;
            	        }
            	    } while (true);


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:467:4: ( line_act ( line_c )* )*
            	    loop77:
            	    do {
            	        int alt77=2;
            	        int LA77_0 = input.LA(1);

            	        if ( (LA77_0==CR) ) {
            	            int LA77_1 = input.LA(2);

            	            if ( (LA77_1==CHARA) ) {
            	                alt77=1;
            	            }


            	        }


            	        switch (alt77) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:467:5: line_act ( line_c )*
            	    	    {
            	    	    pushFollow(FOLLOW_line_act_in_body_p_fac1246);
            	    	    line_act();

            	    	    state._fsp--;


            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:467:14: ( line_c )*
            	    	    loop76:
            	    	    do {
            	    	        int alt76=2;
            	    	        int LA76_0 = input.LA(1);

            	    	        if ( (LA76_0==CR) ) {
            	    	            int LA76_1 = input.LA(2);

            	    	            if ( (LA76_1==CHARC) ) {
            	    	                alt76=1;
            	    	            }


            	    	        }


            	    	        switch (alt76) {
            	    	    	case 1 :
            	    	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:467:15: line_c
            	    	    	    {
            	    	    	    pushFollow(FOLLOW_line_c_in_body_p_fac1249);
            	    	    	    line_c();

            	    	    	    state._fsp--;


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop76;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop77;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt78 >= 1 ) break loop78;
                        EarlyExitException eee =
                            new EarlyExitException(78, input);
                        throw eee;
                }
                cnt78++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_fac"



    // $ANTLR start "body_p_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:1: body_p_reg : line_p ( line_c )* ( line_reg ( line_c )* )+ ;
    public final void body_p_reg() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:471:12: ( line_p ( line_c )* ( line_reg ( line_c )* )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:3: line_p ( line_c )* ( line_reg ( line_c )* )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_reg1269);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:10: ( line_c )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==CR) ) {
                    int LA79_1 = input.LA(2);

                    if ( (LA79_1==CHARC) ) {
                        alt79=1;
                    }


                }


                switch (alt79) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:472:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_reg1272);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:473:3: ( line_reg ( line_c )* )+
            int cnt81=0;
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==CR) ) {
                    int LA81_1 = input.LA(2);

                    if ( (LA81_1==CHARR) ) {
                        alt81=1;
                    }


                }


                switch (alt81) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:473:4: line_reg ( line_c )*
            	    {
            	    pushFollow(FOLLOW_line_reg_in_body_p_reg1279);
            	    line_reg();

            	    state._fsp--;


            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:473:13: ( line_c )*
            	    loop80:
            	    do {
            	        int alt80=2;
            	        int LA80_0 = input.LA(1);

            	        if ( (LA80_0==CR) ) {
            	            int LA80_1 = input.LA(2);

            	            if ( (LA80_1==CHARC) ) {
            	                alt80=1;
            	            }


            	        }


            	        switch (alt80) {
            	    	case 1 :
            	    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:473:14: line_c
            	    	    {
            	    	    pushFollow(FOLLOW_line_c_in_body_p_reg1282);
            	    	    line_c();

            	    	    state._fsp--;


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop80;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt81 >= 1 ) break loop81;
                        EarlyExitException eee =
                            new EarlyExitException(81, input);
                        throw eee;
                }
                cnt81++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_reg"



    // $ANTLR start "start_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:478:1: start_line_h : delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] ;
    public final void start_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:478:14: ( delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:479:3: delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h1301);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1305); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1307);
            st_sized_optionnal("H.3", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1312); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1314);
            st_sized_optionnal("H.4", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1319); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1321);
            spec_sized_mult_lvl1_st_mandatory_2("H.5", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1326); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1328);
            spec_sized_mult_lvl1_st_optionnal_6("H.6", 100);

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h"



    // $ANTLR start "midd_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:486:1: midd_line_h : DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] ;
    public final void midd_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:486:13: ( DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:487:3: DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"]
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1340); 

            pushFollow(FOLLOW_spec_sized_tn_in_midd_line_h1342);
            spec_sized_tn("H.8", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1347); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1349);
            st_sized_optionnal("H.9", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1354); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1356);
            spec_sized_mult_lvl1_st_mandatory_2("H.10", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1361); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1363);
            st_sized_optionnal("H.11", 80);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1368); 

            pushFollow(FOLLOW_spec_const_7_12_in_midd_line_h1370);
            spec_const_7_12("H.12");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h"



    // $ANTLR start "line_h_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:1: line_h_crapy : delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] DELIMITER1 crapy_repet[\"H.7\"] ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_h_crapy() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:493:14: ( delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] DELIMITER1 crapy_repet[\"H.7\"] ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:494:3: delimiters DELIMITER1 crapy_repet[\"H.3\"] DELIMITER1 crapy_repet[\"H.4\"] DELIMITER1 crapy_repet[\"H.5\"] DELIMITER1 crapy_repet[\"H.6\"] DELIMITER1 crapy_repet[\"H.7\"] ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_line_h_crapy1383);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1387); 

            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1389);
            crapy_repet("H.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1395); 

            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1397);
            crapy_repet("H.4");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1402); 

            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1404);
            crapy_repet("H.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1409); 

            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1411);
            crapy_repet("H.6");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1416); 

            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1418);
            crapy_repet("H.7");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:3: ( DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==DELIMITER1) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:500:4: DELIMITER1 crapy_repet[\"H.8\"] ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1424); 

                    pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1426);
                    crapy_repet("H.8");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:4: ( DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==DELIMITER1) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:501:5: DELIMITER1 crapy_repet[\"H.9\"] ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1433); 

                            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1435);
                            crapy_repet("H.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:5: ( DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt87=2;
                            int LA87_0 = input.LA(1);

                            if ( (LA87_0==DELIMITER1) ) {
                                alt87=1;
                            }
                            switch (alt87) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:502:6: DELIMITER1 crapy_repet[\"H.10\"] ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1443); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1445);
                                    crapy_repet("H.10");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:503:6: ( DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt86=2;
                                    int LA86_0 = input.LA(1);

                                    if ( (LA86_0==DELIMITER1) ) {
                                        alt86=1;
                                    }
                                    switch (alt86) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:503:7: DELIMITER1 crapy_repet[\"H.11\"] ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1454); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1456);
                                            crapy_repet("H.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:504:7: ( DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )? )?
                                            int alt85=2;
                                            int LA85_0 = input.LA(1);

                                            if ( (LA85_0==DELIMITER1) ) {
                                                alt85=1;
                                            }
                                            switch (alt85) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:504:8: DELIMITER1 crapy_repet[\"H.12\"] ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1466); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1468);
                                                    crapy_repet("H.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:505:8: ( DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )? )?
                                                    int alt84=2;
                                                    int LA84_0 = input.LA(1);

                                                    if ( (LA84_0==DELIMITER1) ) {
                                                        alt84=1;
                                                    }
                                                    switch (alt84) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:505:9: DELIMITER1 crapy_repet[\"H.13\"] ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1479); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1481);
                                                            crapy_repet("H.13");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:9: ( DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )? )?
                                                            int alt83=2;
                                                            int LA83_0 = input.LA(1);

                                                            if ( (LA83_0==DELIMITER1) ) {
                                                                alt83=1;
                                                            }
                                                            switch (alt83) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:506:10: DELIMITER1 crapy_repet[\"H.14\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1493); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_h_crapy1495);
                                                                    crapy_repet("H.14");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:10: ( DELIMITER1 )?
                                                                    int alt82=2;
                                                                    int LA82_0 = input.LA(1);

                                                                    if ( (LA82_0==DELIMITER1) ) {
                                                                        alt82=1;
                                                                    }
                                                                    switch (alt82) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:507:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h_crapy1507); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h_crapy"



    // $ANTLR start "line_h2_2_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:514:1: line_h2_2_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:516:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:517:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_oru1545);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1549); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1551);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_oru1556);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1560); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1562);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1567); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1569);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:522:3: ( DELIMITER1 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==DELIMITER1) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:522:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1574); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_oru"



    // $ANTLR start "line_h2_1_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:524:1: line_h2_1_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:526:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:527:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_oru1593);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1597); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1599);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_oru1604);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1608); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1610);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1615); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1617);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:532:3: ( DELIMITER1 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==DELIMITER1) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:532:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1622); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_oru"



    // $ANTLR start "line_h2_0_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:534:1: line_h2_0_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_oru() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:536:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:537:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_oru1641);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1645); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1647);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_oru1652);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1656); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1658);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1663); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1665);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:542:3: ( DELIMITER1 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==DELIMITER1) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:542:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1670); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_oru"



    // $ANTLR start "line_h2_2_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:545:1: line_h2_2_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:547:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:548:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_orm1690);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1694); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1696);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_orm1701);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1705); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1707);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1712); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1714);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:553:3: ( DELIMITER1 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==DELIMITER1) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:553:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1719); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_orm"



    // $ANTLR start "line_h2_1_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:555:1: line_h2_1_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:557:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:558:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_orm1738);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1742); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1744);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_orm1749);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1753); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1755);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1760); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1762);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:563:3: ( DELIMITER1 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==DELIMITER1) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:563:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1767); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_orm"



    // $ANTLR start "line_h2_0_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:565:1: line_h2_0_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_orm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:567:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:568:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_orm1786);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1790); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1792);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_orm1797);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1801); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1803);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1808); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1810);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:573:3: ( DELIMITER1 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==DELIMITER1) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:573:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1815); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_orm"



    // $ANTLR start "line_h2_2_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:576:1: line_h2_2_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:578:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:579:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ora1835);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1839); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1841);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ora1846);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1850); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1852);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1857); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1859);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:584:3: ( DELIMITER1 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==DELIMITER1) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:584:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1864); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ora"



    // $ANTLR start "line_h2_1_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:586:1: line_h2_1_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:588:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:589:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ora1883);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1887); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1889);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ora1894);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1898); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1900);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1905); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1907);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:594:3: ( DELIMITER1 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==DELIMITER1) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:594:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1912); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ora"



    // $ANTLR start "line_h2_0_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:596:1: line_h2_0_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ora() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:598:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:599:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ora1931);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1935); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1937);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ora1942);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1946); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora1948);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1953); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ora1955);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:604:3: ( DELIMITER1 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==DELIMITER1) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:604:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1960); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ora"



    // $ANTLR start "line_h2_2_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:607:1: line_h2_2_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:609:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:610:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_adm1980);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1984); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm1986);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_adm1991);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1995); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm1997);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2002); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2004);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:615:3: ( DELIMITER1 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==DELIMITER1) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:615:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm2009); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_adm"



    // $ANTLR start "line_h2_1_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:617:1: line_h2_1_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:619:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:620:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_adm2028);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2032); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2034);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_adm2039);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2043); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2045);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2050); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2052);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:625:3: ( DELIMITER1 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==DELIMITER1) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:625:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm2057); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_adm"



    // $ANTLR start "line_h2_0_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:627:1: line_h2_0_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_adm() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:629:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:630:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_adm2076);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2080); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2082);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_adm2087);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2091); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2093);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2098); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2100);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:635:3: ( DELIMITER1 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==DELIMITER1) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:635:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm2105); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_adm"



    // $ANTLR start "line_h2_2_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:638:1: line_h2_2_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:640:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:641:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_fac2125);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2129); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2131);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_fac2136);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2140); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2142);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2147); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2149);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:646:3: ( DELIMITER1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==DELIMITER1) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:646:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac2154); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_fac"



    // $ANTLR start "line_h2_1_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:648:1: line_h2_1_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:650:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:651:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_fac2173);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2177); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2179);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_fac2184);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2188); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2190);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2195); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2197);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:656:3: ( DELIMITER1 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==DELIMITER1) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:656:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac2202); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_fac"



    // $ANTLR start "line_h2_0_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:658:1: line_h2_0_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_fac() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:660:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:661:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_fac2221);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2225); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2227);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_fac2232);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2236); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2238);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2243); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2245);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:666:3: ( DELIMITER1 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==DELIMITER1) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:666:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac2250); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_fac"



    // $ANTLR start "line_h2_2_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:669:1: line_h2_2_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:671:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:672:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_reg2270);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2274); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2276);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_reg2281);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2285); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2287);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2292); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2294);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:677:3: ( DELIMITER1 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==DELIMITER1) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:677:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_reg2299); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_reg"



    // $ANTLR start "line_h2_1_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:679:1: line_h2_1_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:681:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:682:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_reg2318);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2322); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2324);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_reg2329);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2333); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2335);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2340); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2342);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:687:3: ( DELIMITER1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==DELIMITER1) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:687:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_reg2347); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_reg"



    // $ANTLR start "line_h2_0_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:689:1: line_h2_0_reg : start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_reg() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:691:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:692:3: start_line_h DELIMITER1 spec_const_7_7_contexte_REG[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_reg2366);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2370); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2372);
            spec_const_7_7_contexte_REG("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_reg2377);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2381); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2383);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2388); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2390);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:697:3: ( DELIMITER1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==DELIMITER1) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:697:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_reg2395); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_reg"



    // $ANTLR start "line_h2_2_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:700:1: line_h2_2_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:702:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:703:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ns2415);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2419); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2421);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ns2426);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2430); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2432);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2437); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2439);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:708:3: ( DELIMITER1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DELIMITER1) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:708:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ns2444); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ns"



    // $ANTLR start "line_h2_1_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:710:1: line_h2_1_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:712:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:713:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ns2463);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2467); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2469);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ns2474);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2478); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2480);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2485); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2487);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:718:3: ( DELIMITER1 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==DELIMITER1) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:718:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ns2492); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ns"



    // $ANTLR start "line_h2_0_ns"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:720:1: line_h2_0_ns : start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ns() throws RecognitionException {
        startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:722:23: ( start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:723:3: start_line_h DELIMITER1 spec_const_7_7_contexte_NS[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ns2511);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2515); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2517);
            spec_const_7_7_contexte_NS("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ns2522);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2526); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2528);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2533); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2535);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:728:3: ( DELIMITER1 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==DELIMITER1) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:728:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ns2540); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ns"



    // $ANTLR start "line_ap"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:731:1: line_ap : ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_ap() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:733:23: ( ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:734:3: ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:734:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:734:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap2561); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap2563); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap2565); 

            }


            startElement("AP.1");content("AP");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2572); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap2574);
            nm_integer_sized_mandatory("AP.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2579); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2581);
            st_sized_mandatory("AP.3", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2586); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2588);
            ts_sized_optionnal("AP.4", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2593); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2595);
            ts_sized_optionnal("AP.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2600); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap2602);
            nm_integer_sized_mandatory("AP.6", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2607); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2609);
            st_sized_mandatory("AP.7", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2614); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2616);
            nm_sized_mandatory("AP.8", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2621); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2623);
            nm_sized_mandatory("AP.9", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2628); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2630);
            nm_sized_mandatory("AP.10", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2635); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2637);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2642); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2644);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2649); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2651);
            st_sized_mandatory("AP.12", 1);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2656); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2658);
            st_sized_mandatory("AP.13", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2663); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2665);
            spec_sized_mult_lvl1_st_mandatory_6("AP.14", 48);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2670); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2672);
            st_sized_optionnal("AP.15", 24);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2677); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2679);
            nm_sized_mandatory("AP.16", 6);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:751:3: ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==DELIMITER1) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:751:4: DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2685); 

                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_ap2687);
                    nm_sized_optionnal("AP.17", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:752:4: ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==DELIMITER1) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:752:5: DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2694); 

                            pushFollow(FOLLOW_spec_on_optionnal_in_line_ap2696);
                            spec_on_optionnal("AP.18");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:753:5: ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            int alt116=2;
                            int LA116_0 = input.LA(1);

                            if ( (LA116_0==DELIMITER1) ) {
                                alt116=1;
                            }
                            switch (alt116) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:753:6: DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2704); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2706);
                                    ts_sized_optionnal("AP.19", 8);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:754:6: ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    int alt115=2;
                                    int LA115_0 = input.LA(1);

                                    if ( (LA115_0==DELIMITER1) ) {
                                        alt115=1;
                                    }
                                    switch (alt115) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:754:7: DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2715); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2717);
                                            ts_sized_optionnal("AP.20", 8);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:755:7: ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            int alt114=2;
                                            int LA114_0 = input.LA(1);

                                            if ( (LA114_0==DELIMITER1) ) {
                                                alt114=1;
                                            }
                                            switch (alt114) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:755:8: DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2727); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2729);
                                                    st_sized_optionnal("AP.21", 30);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:756:8: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    int alt113=2;
                                                    int LA113_0 = input.LA(1);

                                                    if ( (LA113_0==DELIMITER1) ) {
                                                        alt113=1;
                                                    }
                                                    switch (alt113) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:756:9: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2740); 

                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2742);
                                                            spec_sized_mult_lvl1_st_optionnal_6("AP.22", 200);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:757:9: ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            int alt112=2;
                                                            int LA112_0 = input.LA(1);

                                                            if ( (LA112_0==DELIMITER1) ) {
                                                                alt112=1;
                                                            }
                                                            switch (alt112) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:757:10: DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2754); 

                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2756);
                                                                    ts_sized_optionnal("AP.23", 15);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:758:10: ( DELIMITER1 )?
                                                                    int alt111=2;
                                                                    int LA111_0 = input.LA(1);

                                                                    if ( (LA111_0==DELIMITER1) ) {
                                                                        alt111=1;
                                                                    }
                                                                    switch (alt111) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:758:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2768); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap"



    // $ANTLR start "line_ap_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:760:1: line_ap_crapy : ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ap_crapy() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:762:23: ( ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:763:3: ( CR CHARA CHARP ) ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:763:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:763:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap_crapy2802); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap_crapy2804); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap_crapy2806); 

            }


            startElement("AP.1");content("AP");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:764:3: ( DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==DELIMITER1) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:764:4: DELIMITER1 crapy_repet[\"AP.2\"] ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2814); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2816);
                    crapy_repet("AP.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:765:4: ( DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==DELIMITER1) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:765:5: DELIMITER1 crapy_repet[\"AP.3\"] ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2823); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2825);
                            crapy_repet("AP.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:766:5: ( DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt140=2;
                            int LA140_0 = input.LA(1);

                            if ( (LA140_0==DELIMITER1) ) {
                                alt140=1;
                            }
                            switch (alt140) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:766:6: DELIMITER1 crapy_repet[\"AP.4\"] ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2833); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2835);
                                    crapy_repet("AP.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:767:6: ( DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt139=2;
                                    int LA139_0 = input.LA(1);

                                    if ( (LA139_0==DELIMITER1) ) {
                                        alt139=1;
                                    }
                                    switch (alt139) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:767:7: DELIMITER1 crapy_repet[\"AP.5\"] ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2844); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2846);
                                            crapy_repet("AP.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:768:7: ( DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt138=2;
                                            int LA138_0 = input.LA(1);

                                            if ( (LA138_0==DELIMITER1) ) {
                                                alt138=1;
                                            }
                                            switch (alt138) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:768:8: DELIMITER1 crapy_repet[\"AP.6\"] ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2856); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2858);
                                                    crapy_repet("AP.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:769:8: ( DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt137=2;
                                                    int LA137_0 = input.LA(1);

                                                    if ( (LA137_0==DELIMITER1) ) {
                                                        alt137=1;
                                                    }
                                                    switch (alt137) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:769:9: DELIMITER1 crapy_repet[\"AP.7\"] ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2869); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2871);
                                                            crapy_repet("AP.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:770:9: ( DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt136=2;
                                                            int LA136_0 = input.LA(1);

                                                            if ( (LA136_0==DELIMITER1) ) {
                                                                alt136=1;
                                                            }
                                                            switch (alt136) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:770:10: DELIMITER1 crapy_repet[\"AP.8\"] ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2883); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2885);
                                                                    crapy_repet("AP.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:771:10: ( DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt135=2;
                                                                    int LA135_0 = input.LA(1);

                                                                    if ( (LA135_0==DELIMITER1) ) {
                                                                        alt135=1;
                                                                    }
                                                                    switch (alt135) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:771:11: DELIMITER1 crapy_repet[\"AP.9\"] ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2898); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2900);
                                                                            crapy_repet("AP.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:772:11: ( DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt134=2;
                                                                            int LA134_0 = input.LA(1);

                                                                            if ( (LA134_0==DELIMITER1) ) {
                                                                                alt134=1;
                                                                            }
                                                                            switch (alt134) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:772:12: DELIMITER1 crapy_repet[\"AP.10\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2914); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2916);
                                                                                    crapy_repet("AP.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:773:12: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt133=2;
                                                                                    int LA133_0 = input.LA(1);

                                                                                    if ( (LA133_0==DELIMITER1) ) {
                                                                                        alt133=1;
                                                                                    }
                                                                                    switch (alt133) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:773:13: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2931); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2933);
                                                                                            crapy_repet("AP.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:774:13: ( DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt132=2;
                                                                                            int LA132_0 = input.LA(1);

                                                                                            if ( (LA132_0==DELIMITER1) ) {
                                                                                                alt132=1;
                                                                                            }
                                                                                            switch (alt132) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:774:14: DELIMITER1 crapy_repet[\"AP.11\"] ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2949); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2951);
                                                                                                    crapy_repet("AP.11");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:775:14: ( DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt131=2;
                                                                                                    int LA131_0 = input.LA(1);

                                                                                                    if ( (LA131_0==DELIMITER1) ) {
                                                                                                        alt131=1;
                                                                                                    }
                                                                                                    switch (alt131) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:775:15: DELIMITER1 crapy_repet[\"AP.12\"] ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2968); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2970);
                                                                                                            crapy_repet("AP.12");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:776:15: ( DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt130=2;
                                                                                                            int LA130_0 = input.LA(1);

                                                                                                            if ( (LA130_0==DELIMITER1) ) {
                                                                                                                alt130=1;
                                                                                                            }
                                                                                                            switch (alt130) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:776:16: DELIMITER1 crapy_repet[\"AP.13\"] ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy2988); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy2990);
                                                                                                                    crapy_repet("AP.13");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:777:16: ( DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt129=2;
                                                                                                                    int LA129_0 = input.LA(1);

                                                                                                                    if ( (LA129_0==DELIMITER1) ) {
                                                                                                                        alt129=1;
                                                                                                                    }
                                                                                                                    switch (alt129) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:777:17: DELIMITER1 crapy_repet[\"AP.14\"] ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3009); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3011);
                                                                                                                            crapy_repet("AP.14");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:778:17: ( DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt128=2;
                                                                                                                            int LA128_0 = input.LA(1);

                                                                                                                            if ( (LA128_0==DELIMITER1) ) {
                                                                                                                                alt128=1;
                                                                                                                            }
                                                                                                                            switch (alt128) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:778:18: DELIMITER1 crapy_repet[\"AP.15\"] ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3031); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3033);
                                                                                                                                    crapy_repet("AP.15");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:779:18: ( DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt127=2;
                                                                                                                                    int LA127_0 = input.LA(1);

                                                                                                                                    if ( (LA127_0==DELIMITER1) ) {
                                                                                                                                        alt127=1;
                                                                                                                                    }
                                                                                                                                    switch (alt127) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:779:19: DELIMITER1 crapy_repet[\"AP.16\"] ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3054); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3056);
                                                                                                                                            crapy_repet("AP.16");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:780:19: ( DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                            int alt126=2;
                                                                                                                                            int LA126_0 = input.LA(1);

                                                                                                                                            if ( (LA126_0==DELIMITER1) ) {
                                                                                                                                                alt126=1;
                                                                                                                                            }
                                                                                                                                            switch (alt126) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:780:20: DELIMITER1 crapy_repet[\"AP.17\"] ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3078); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3080);
                                                                                                                                                    crapy_repet("AP.17");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:781:20: ( DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                    int alt125=2;
                                                                                                                                                    int LA125_0 = input.LA(1);

                                                                                                                                                    if ( (LA125_0==DELIMITER1) ) {
                                                                                                                                                        alt125=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt125) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:781:21: DELIMITER1 crapy_repet[\"AP.18\"] ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3103); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3105);
                                                                                                                                                            crapy_repet("AP.18");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:782:21: ( DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                            int alt124=2;
                                                                                                                                                            int LA124_0 = input.LA(1);

                                                                                                                                                            if ( (LA124_0==DELIMITER1) ) {
                                                                                                                                                                alt124=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt124) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:782:22: DELIMITER1 crapy_repet[\"AP.19\"] ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3129); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3131);
                                                                                                                                                                    crapy_repet("AP.19");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:783:22: ( DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                    int alt123=2;
                                                                                                                                                                    int LA123_0 = input.LA(1);

                                                                                                                                                                    if ( (LA123_0==DELIMITER1) ) {
                                                                                                                                                                        alt123=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt123) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:783:23: DELIMITER1 crapy_repet[\"AP.20\"] ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3156); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3158);
                                                                                                                                                                            crapy_repet("AP.20");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:784:23: ( DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                            int alt122=2;
                                                                                                                                                                            int LA122_0 = input.LA(1);

                                                                                                                                                                            if ( (LA122_0==DELIMITER1) ) {
                                                                                                                                                                                alt122=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt122) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:784:24: DELIMITER1 crapy_repet[\"AP.21\"] ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3184); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3186);
                                                                                                                                                                                    crapy_repet("AP.21");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:785:24: ( DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                    int alt121=2;
                                                                                                                                                                                    int LA121_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA121_0==DELIMITER1) ) {
                                                                                                                                                                                        alt121=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt121) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:785:25: DELIMITER1 crapy_repet[\"AP.22\"] ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3213); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3215);
                                                                                                                                                                                            crapy_repet("AP.22");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:786:25: ( DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )? )?
                                                                                                                                                                                            int alt120=2;
                                                                                                                                                                                            int LA120_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA120_0==DELIMITER1) ) {
                                                                                                                                                                                                alt120=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt120) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:786:26: DELIMITER1 crapy_repet[\"AP.23\"] ( DELIMITER1 )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3243); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ap_crapy3245);
                                                                                                                                                                                                    crapy_repet("AP.23");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:787:26: ( DELIMITER1 )?
                                                                                                                                                                                                    int alt119=2;
                                                                                                                                                                                                    int LA119_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA119_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt119=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt119) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:787:26: DELIMITER1
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap_crapy3273); 

                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap_crapy"



    // $ANTLR start "line_ac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:790:1: line_ac : ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? ;
    public final void line_ac() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:792:23: ( ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:793:3: ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:793:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:793:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac3340); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac3342); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac3344); 

            }


            startElement("AC.1");content("AC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3351); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ac3353);
            nm_integer_sized_mandatory("AC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3358); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3360);
            st_sized_mandatory("AC.3", 9);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3365); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac3367);
            st_sized_mandatory("AC.4", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3372); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ac3374);
            ts_sized_optionnal("AC.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3379); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_ac3381);
            ts_sized_mandatory("AC.6", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3386); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3388);
            st_sized_optionnal("AC.7", 28);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3393); 

            pushFollow(FOLLOW_spec_ac_8_in_line_ac3395);
            spec_ac_8("AC.8", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:801:3: ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==DELIMITER1) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:801:4: DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3401); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ac3403);
                    st_sized_optionnal("AC.9", 40);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:802:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==DELIMITER1) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:802:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3410); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3412);
                            spec_sized_mult_lvl1_st_optionnal_6("AC.10", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:803:5: ( DELIMITER1 )?
                            int alt143=2;
                            int LA143_0 = input.LA(1);

                            if ( (LA143_0==DELIMITER1) ) {
                                alt143=1;
                            }
                            switch (alt143) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:803:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac3419); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac"



    // $ANTLR start "line_ac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:805:1: line_ac_crapy : ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? ;
    public final void line_ac_crapy() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:807:23: ( ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:808:3: ( CR CHARA CHARC ) ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:808:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:808:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac_crapy3443); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac_crapy3445); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac_crapy3447); 

            }


            startElement("AC.1");content("AC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:809:3: ( DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==DELIMITER1) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:809:4: DELIMITER1 crapy_repet[\"AC.2\"] ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3455); 

                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3457);
                    crapy_repet("AC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:810:4: ( DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==DELIMITER1) ) {
                        alt154=1;
                    }
                    switch (alt154) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:810:5: DELIMITER1 crapy_repet[\"AC.3\"] ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3464); 

                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3466);
                            crapy_repet("AC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:811:5: ( DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                            int alt153=2;
                            int LA153_0 = input.LA(1);

                            if ( (LA153_0==DELIMITER1) ) {
                                alt153=1;
                            }
                            switch (alt153) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:811:6: DELIMITER1 crapy_repet[\"AC.4\"] ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3474); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3476);
                                    crapy_repet("AC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:812:6: ( DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                    int alt152=2;
                                    int LA152_0 = input.LA(1);

                                    if ( (LA152_0==DELIMITER1) ) {
                                        alt152=1;
                                    }
                                    switch (alt152) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:812:7: DELIMITER1 crapy_repet[\"AC.5\"] ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3485); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3487);
                                            crapy_repet("AC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:813:7: ( DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )? )?
                                            int alt151=2;
                                            int LA151_0 = input.LA(1);

                                            if ( (LA151_0==DELIMITER1) ) {
                                                alt151=1;
                                            }
                                            switch (alt151) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:813:8: DELIMITER1 crapy_repet[\"AC.6\"] ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3497); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3499);
                                                    crapy_repet("AC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:8: ( DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )? )?
                                                    int alt150=2;
                                                    int LA150_0 = input.LA(1);

                                                    if ( (LA150_0==DELIMITER1) ) {
                                                        alt150=1;
                                                    }
                                                    switch (alt150) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:814:9: DELIMITER1 crapy_repet[\"AC.7\"] ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3510); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3512);
                                                            crapy_repet("AC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:815:9: ( DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )? )?
                                                            int alt149=2;
                                                            int LA149_0 = input.LA(1);

                                                            if ( (LA149_0==DELIMITER1) ) {
                                                                alt149=1;
                                                            }
                                                            switch (alt149) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:815:10: DELIMITER1 crapy_repet[\"AC.8\"] ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3524); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3526);
                                                                    crapy_repet("AC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:816:10: ( DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )? )?
                                                                    int alt148=2;
                                                                    int LA148_0 = input.LA(1);

                                                                    if ( (LA148_0==DELIMITER1) ) {
                                                                        alt148=1;
                                                                    }
                                                                    switch (alt148) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:816:11: DELIMITER1 crapy_repet[\"AC.9\"] ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3539); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3541);
                                                                            crapy_repet("AC.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:817:11: ( DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )? )?
                                                                            int alt147=2;
                                                                            int LA147_0 = input.LA(1);

                                                                            if ( (LA147_0==DELIMITER1) ) {
                                                                                alt147=1;
                                                                            }
                                                                            switch (alt147) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:817:12: DELIMITER1 crapy_repet[\"AC.10\"] ( DELIMITER1 )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3555); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_ac_crapy3557);
                                                                                    crapy_repet("AC.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:818:12: ( DELIMITER1 )?
                                                                                    int alt146=2;
                                                                                    int LA146_0 = input.LA(1);

                                                                                    if ( (LA146_0==DELIMITER1) ) {
                                                                                        alt146=1;
                                                                                    }
                                                                                    switch (alt146) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:818:12: DELIMITER1
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac_crapy3571); 

                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac_crapy"



    // $ANTLR start "line_act"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:821:1: line_act : ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? ;
    public final void line_act() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:823:23: ( ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:3: ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:824:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act3610); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act3612); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act3614); 

            match(input,CHART,FOLLOW_CHART_in_line_act3616); 

            }


            startElement("ACT.1");content("ACT");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3623); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_act3625);
            nm_integer_sized_mandatory("ACT.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3630); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_act3632);
            st_sized_mandatory("ACT.3", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3637); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3639);
            nm_sized_mandatory("ACT.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3644); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3646);
            nm_sized_mandatory("ACT.5", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3651); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act3653);
            nm_sized_mandatory("ACT.6", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3658); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act3660);
            st_sized_optionnal("ACT.7", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3665); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act3667);
            st_sized_optionnal("ACT.8", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3672); 

            pushFollow(FOLLOW_spec_fac_6_in_line_act3674);
            spec_fac_6("ACT.9", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3679); 

            pushFollow(FOLLOW_spec_act_10_in_line_act3681);
            spec_act_10("ACT.10", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3686); 

            pushFollow(FOLLOW_spec_act_11_in_line_act3688);
            spec_act_11("ACT.11");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:835:3: ( DELIMITER1 )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==DELIMITER1) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:835:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act3693); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act"



    // $ANTLR start "line_act_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:837:1: line_act_crapy : ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_act_crapy() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:839:23: ( ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:840:3: ( CR CHARA CHARC CHART ) ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:840:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:840:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act_crapy3713); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act_crapy3715); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act_crapy3717); 

            match(input,CHART,FOLLOW_CHART_in_line_act_crapy3719); 

            }


            startElement("ACT.1");content("ACT");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:841:3: ( DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==DELIMITER1) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:841:4: DELIMITER1 crapy_repet[\"ACT.2\"] ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3727); 

                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3729);
                    crapy_repet("ACT.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:842:4: ( DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==DELIMITER1) ) {
                        alt166=1;
                    }
                    switch (alt166) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:842:5: DELIMITER1 crapy_repet[\"ACT.3\"] ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3736); 

                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3738);
                            crapy_repet("ACT.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:843:5: ( DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt165=2;
                            int LA165_0 = input.LA(1);

                            if ( (LA165_0==DELIMITER1) ) {
                                alt165=1;
                            }
                            switch (alt165) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:843:6: DELIMITER1 crapy_repet[\"ACT.4\"] ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3746); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3748);
                                    crapy_repet("ACT.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:844:6: ( DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt164=2;
                                    int LA164_0 = input.LA(1);

                                    if ( (LA164_0==DELIMITER1) ) {
                                        alt164=1;
                                    }
                                    switch (alt164) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:844:7: DELIMITER1 crapy_repet[\"ACT.5\"] ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3757); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3759);
                                            crapy_repet("ACT.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:845:7: ( DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt163=2;
                                            int LA163_0 = input.LA(1);

                                            if ( (LA163_0==DELIMITER1) ) {
                                                alt163=1;
                                            }
                                            switch (alt163) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:845:8: DELIMITER1 crapy_repet[\"ACT.6\"] ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3769); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3771);
                                                    crapy_repet("ACT.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:846:8: ( DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt162=2;
                                                    int LA162_0 = input.LA(1);

                                                    if ( (LA162_0==DELIMITER1) ) {
                                                        alt162=1;
                                                    }
                                                    switch (alt162) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:846:9: DELIMITER1 crapy_repet[\"ACT.7\"] ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3782); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3784);
                                                            crapy_repet("ACT.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:847:9: ( DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )? )?
                                                            int alt161=2;
                                                            int LA161_0 = input.LA(1);

                                                            if ( (LA161_0==DELIMITER1) ) {
                                                                alt161=1;
                                                            }
                                                            switch (alt161) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:847:10: DELIMITER1 crapy_repet[\"ACT.8\"] ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3796); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3798);
                                                                    crapy_repet("ACT.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:848:10: ( DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )? )?
                                                                    int alt160=2;
                                                                    int LA160_0 = input.LA(1);

                                                                    if ( (LA160_0==DELIMITER1) ) {
                                                                        alt160=1;
                                                                    }
                                                                    switch (alt160) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:848:11: DELIMITER1 crapy_repet[\"ACT.9\"] ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3811); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3813);
                                                                            crapy_repet("ACT.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:849:11: ( DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )? )?
                                                                            int alt159=2;
                                                                            int LA159_0 = input.LA(1);

                                                                            if ( (LA159_0==DELIMITER1) ) {
                                                                                alt159=1;
                                                                            }
                                                                            switch (alt159) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:849:12: DELIMITER1 crapy_repet[\"ACT.10\"] ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3827); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3829);
                                                                                    crapy_repet("ACT.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:850:12: ( DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )? )?
                                                                                    int alt158=2;
                                                                                    int LA158_0 = input.LA(1);

                                                                                    if ( (LA158_0==DELIMITER1) ) {
                                                                                        alt158=1;
                                                                                    }
                                                                                    switch (alt158) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:850:13: DELIMITER1 crapy_repet[\"ACT.11\"] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3844); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_act_crapy3846);
                                                                                            crapy_repet("ACT.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:851:13: ( DELIMITER1 )?
                                                                                            int alt157=2;
                                                                                            int LA157_0 = input.LA(1);

                                                                                            if ( (LA157_0==DELIMITER1) ) {
                                                                                                alt157=1;
                                                                                            }
                                                                                            switch (alt157) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:851:13: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act_crapy3861); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act_crapy"



    // $ANTLR start "line_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:854:1: line_fac : ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_fac() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:856:23: ( ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:3: ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:857:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac3902); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac3904); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac3906); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac3908); 

            }


            startElement("FAC.1");content("FAC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3915); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_fac3917);
            nm_integer_sized_mandatory("FAC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3922); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac3924);
            st_sized_mandatory("FAC.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3929); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac3931);
            st_sized_mandatory("FAC.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3936); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_fac3938);
            ts_sized_mandatory("FAC.5", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:862:3: ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==DELIMITER1) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:862:4: DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3944); 

                    pushFollow(FOLLOW_spec_fac_6_in_line_fac3946);
                    spec_fac_6("FAC.6", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:863:4: ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==DELIMITER1) ) {
                        alt170=1;
                    }
                    switch (alt170) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:863:5: DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3953); 

                            pushFollow(FOLLOW_spec_fac_6_in_line_fac3955);
                            spec_fac_6("FAC.7", 60);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:864:5: ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            int alt169=2;
                            int LA169_0 = input.LA(1);

                            if ( (LA169_0==DELIMITER1) ) {
                                alt169=1;
                            }
                            switch (alt169) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:864:6: DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3963); 

                                    pushFollow(FOLLOW_spec_on_optionnal_in_line_fac3965);
                                    spec_on_optionnal("FAC.8");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:865:6: ( DELIMITER1 )?
                                    int alt168=2;
                                    int LA168_0 = input.LA(1);

                                    if ( (LA168_0==DELIMITER1) ) {
                                        alt168=1;
                                    }
                                    switch (alt168) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:865:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac3973); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac"



    // $ANTLR start "line_fac_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:867:1: line_fac_crapy : ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_fac_crapy() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:869:23: ( ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:3: ( CR CHARF CHARA CHARC ) ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:870:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac_crapy4001); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac_crapy4003); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac_crapy4005); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac_crapy4007); 

            }


            startElement("FAC.1");content("FAC");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:871:3: ( DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==DELIMITER1) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:871:4: DELIMITER1 crapy_repet[\"FAC.2\"] ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4015); 

                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4017);
                    crapy_repet("FAC.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:872:4: ( DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==DELIMITER1) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:872:5: DELIMITER1 crapy_repet[\"FAC.3\"] ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4024); 

                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4026);
                            crapy_repet("FAC.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:5: ( DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt177=2;
                            int LA177_0 = input.LA(1);

                            if ( (LA177_0==DELIMITER1) ) {
                                alt177=1;
                            }
                            switch (alt177) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:873:6: DELIMITER1 crapy_repet[\"FAC.4\"] ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4034); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4036);
                                    crapy_repet("FAC.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:874:6: ( DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt176=2;
                                    int LA176_0 = input.LA(1);

                                    if ( (LA176_0==DELIMITER1) ) {
                                        alt176=1;
                                    }
                                    switch (alt176) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:874:7: DELIMITER1 crapy_repet[\"FAC.5\"] ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4045); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4047);
                                            crapy_repet("FAC.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:875:7: ( DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt175=2;
                                            int LA175_0 = input.LA(1);

                                            if ( (LA175_0==DELIMITER1) ) {
                                                alt175=1;
                                            }
                                            switch (alt175) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:875:8: DELIMITER1 crapy_repet[\"FAC.6\"] ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4057); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4059);
                                                    crapy_repet("FAC.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:876:8: ( DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )? )?
                                                    int alt174=2;
                                                    int LA174_0 = input.LA(1);

                                                    if ( (LA174_0==DELIMITER1) ) {
                                                        alt174=1;
                                                    }
                                                    switch (alt174) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:876:9: DELIMITER1 crapy_repet[\"FAC.7\"] ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4070); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4072);
                                                            crapy_repet("FAC.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:877:9: ( DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )? )?
                                                            int alt173=2;
                                                            int LA173_0 = input.LA(1);

                                                            if ( (LA173_0==DELIMITER1) ) {
                                                                alt173=1;
                                                            }
                                                            switch (alt173) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:877:10: DELIMITER1 crapy_repet[\"FAC.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4084); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_fac_crapy4086);
                                                                    crapy_repet("FAC.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:878:10: ( DELIMITER1 )?
                                                                    int alt172=2;
                                                                    int LA172_0 = input.LA(1);

                                                                    if ( (LA172_0==DELIMITER1) ) {
                                                                        alt172=1;
                                                                    }
                                                                    switch (alt172) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:878:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac_crapy4098); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac_crapy"



    // $ANTLR start "line_p"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:881:1: line_p : ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:883:23: ( ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:3: ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:884:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p4133); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p4135); 

            }


            startElement("P.1");content("P");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4142); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_p4144);
            nm_integer_sized_mandatory("P.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4149); 

            pushFollow(FOLLOW_spec_sized_8_3_in_line_p4151);
            spec_sized_8_3("P.3", 36);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4156); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4158);
            st_sized_optionnal("P.4", 16);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:888:3: ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==DELIMITER1) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:888:4: DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4164); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4166);
                    st_sized_optionnal("P.5", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==DELIMITER1) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:889:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4173); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4175);
                            spec_sized_mult_lvl1_st_optionnal_6("P.6", 48);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:5: ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt212=2;
                            int LA212_0 = input.LA(1);

                            if ( (LA212_0==DELIMITER1) ) {
                                alt212=1;
                            }
                            switch (alt212) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:890:6: DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4183); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4185);
                                    st_sized_optionnal("P.7", 24);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:891:6: ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt211=2;
                                    int LA211_0 = input.LA(1);

                                    if ( (LA211_0==DELIMITER1) ) {
                                        alt211=1;
                                    }
                                    switch (alt211) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:891:7: DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4194); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4196);
                                            ts_sized_optionnal("P.8", 26);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:892:7: ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt210=2;
                                            int LA210_0 = input.LA(1);

                                            if ( (LA210_0==DELIMITER1) ) {
                                                alt210=1;
                                            }
                                            switch (alt210) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:892:8: DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4206); 

                                                    pushFollow(FOLLOW_spec_const_sexe_in_line_p4208);
                                                    spec_const_sexe("P.9");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:893:8: ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt209=2;
                                                    int LA209_0 = input.LA(1);

                                                    if ( (LA209_0==DELIMITER1) ) {
                                                        alt209=1;
                                                    }
                                                    switch (alt209) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:893:9: DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4219); 

                                                            pushFollow(FOLLOW_spec_const_race_in_line_p4221);
                                                            spec_const_race("P.10");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:894:9: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt208=2;
                                                            int LA208_0 = input.LA(1);

                                                            if ( (LA208_0==DELIMITER1) ) {
                                                                alt208=1;
                                                            }
                                                            switch (alt208) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:894:10: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4233); 

                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4235);
                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.11", 200);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:895:10: ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt207=2;
                                                                    int LA207_0 = input.LA(1);

                                                                    if ( (LA207_0==DELIMITER1) ) {
                                                                        alt207=1;
                                                                    }
                                                                    switch (alt207) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:895:11: DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4248); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4250);
                                                                            st_sized_optionnal("P.12", 120);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:11: ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt206=2;
                                                                            int LA206_0 = input.LA(1);

                                                                            if ( (LA206_0==DELIMITER1) ) {
                                                                                alt206=1;
                                                                            }
                                                                            switch (alt206) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:896:12: DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4264); 

                                                                                    pushFollow(FOLLOW_spec_sized_tn_in_line_p4266);
                                                                                    spec_sized_tn("P.13", 40);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:12: ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt205=2;
                                                                                    int LA205_0 = input.LA(1);

                                                                                    if ( (LA205_0==DELIMITER1) ) {
                                                                                        alt205=1;
                                                                                    }
                                                                                    switch (alt205) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:13: DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4305); 

                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_p4307);
                                                                                            spec_sized_cna("P.14", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:51: ( REPETITEUR spec_sized_cna[\"P.14\", 60] )*
                                                                                            loop180:
                                                                                            do {
                                                                                                int alt180=2;
                                                                                                int LA180_0 = input.LA(1);

                                                                                                if ( (LA180_0==REPETITEUR) ) {
                                                                                                    alt180=1;
                                                                                                }


                                                                                                switch (alt180) {
                                                                                            	case 1 :
                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:899:52: REPETITEUR spec_sized_cna[\"P.14\", 60]
                                                                                            	    {
                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4311); 

                                                                                            	    pushFollow(FOLLOW_spec_sized_cna_in_line_p4313);
                                                                                            	    spec_sized_cna("P.14", 60);

                                                                                            	    state._fsp--;


                                                                                            	    }
                                                                                            	    break;

                                                                                            	default :
                                                                                            	    break loop180;
                                                                                                }
                                                                                            } while (true);


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:900:13: ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt204=2;
                                                                                            int LA204_0 = input.LA(1);

                                                                                            if ( (LA204_0==DELIMITER1) ) {
                                                                                                alt204=1;
                                                                                            }
                                                                                            switch (alt204) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:900:14: DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4331); 

                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4333);
                                                                                                    st_sized_optionnal("P.15", 60);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:901:14: ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt203=2;
                                                                                                    int LA203_0 = input.LA(1);

                                                                                                    if ( (LA203_0==DELIMITER1) ) {
                                                                                                        alt203=1;
                                                                                                    }
                                                                                                    switch (alt203) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:901:15: DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4350); 

                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4352);
                                                                                                            st_sized_optionnal("P.16", 60);

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:903:15: ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt202=2;
                                                                                                            int LA202_0 = input.LA(1);

                                                                                                            if ( (LA202_0==DELIMITER1) ) {
                                                                                                                alt202=1;
                                                                                                            }
                                                                                                            switch (alt202) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:903:16: DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4385); 

                                                                                                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4387);
                                                                                                                    nm_sized_optionnal("P.17", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:905:16: ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt201=2;
                                                                                                                    int LA201_0 = input.LA(1);

                                                                                                                    if ( (LA201_0==DELIMITER1) ) {
                                                                                                                        alt201=1;
                                                                                                                    }
                                                                                                                    switch (alt201) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:905:17: DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4422); 

                                                                                                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_p4424);
                                                                                                                            nm_sized_optionnal("P.18", 10);

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:17: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt200=2;
                                                                                                                            int LA200_0 = input.LA(1);

                                                                                                                            if ( (LA200_0==DELIMITER1) ) {
                                                                                                                                alt200=1;
                                                                                                                            }
                                                                                                                            switch (alt200) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:18: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4444); 

                                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4446);
                                                                                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:78: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )*
                                                                                                                                    loop181:
                                                                                                                                    do {
                                                                                                                                        int alt181=2;
                                                                                                                                        int LA181_0 = input.LA(1);

                                                                                                                                        if ( (LA181_0==REPETITEUR) ) {
                                                                                                                                            alt181=1;
                                                                                                                                        }


                                                                                                                                        switch (alt181) {
                                                                                                                                    	case 1 :
                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:906:79: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200]
                                                                                                                                    	    {
                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4450); 

                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4452);
                                                                                                                                    	    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    	    state._fsp--;


                                                                                                                                    	    }
                                                                                                                                    	    break;

                                                                                                                                    	default :
                                                                                                                                    	    break loop181;
                                                                                                                                        }
                                                                                                                                    } while (true);


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:907:18: ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt199=2;
                                                                                                                                    int LA199_0 = input.LA(1);

                                                                                                                                    if ( (LA199_0==DELIMITER1) ) {
                                                                                                                                        alt199=1;
                                                                                                                                    }
                                                                                                                                    switch (alt199) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:907:19: DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4475); 

                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4477);
                                                                                                                                            st_sized_optionnal("P.20", 200);

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:907:62: ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )*
                                                                                                                                            loop182:
                                                                                                                                            do {
                                                                                                                                                int alt182=2;
                                                                                                                                                int LA182_0 = input.LA(1);

                                                                                                                                                if ( (LA182_0==REPETITEUR) ) {
                                                                                                                                                    alt182=1;
                                                                                                                                                }


                                                                                                                                                switch (alt182) {
                                                                                                                                            	case 1 :
                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:907:63: REPETITEUR st_sized_optionnal[\"P.20\", 200]
                                                                                                                                            	    {
                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4481); 

                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4483);
                                                                                                                                            	    st_sized_optionnal("P.20", 200);

                                                                                                                                            	    state._fsp--;


                                                                                                                                            	    }
                                                                                                                                            	    break;

                                                                                                                                            	default :
                                                                                                                                            	    break loop182;
                                                                                                                                                }
                                                                                                                                            } while (true);


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:908:19: ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt198=2;
                                                                                                                                            int LA198_0 = input.LA(1);

                                                                                                                                            if ( (LA198_0==DELIMITER1) ) {
                                                                                                                                                alt198=1;
                                                                                                                                            }
                                                                                                                                            switch (alt198) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:908:20: DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4507); 

                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4509);
                                                                                                                                                    st_sized_optionnal("P.21", 200);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:909:20: ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt197=2;
                                                                                                                                                    int LA197_0 = input.LA(1);

                                                                                                                                                    if ( (LA197_0==DELIMITER1) ) {
                                                                                                                                                        alt197=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt197) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:909:21: DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4532); 

                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4534);
                                                                                                                                                            st_sized_optionnal("P.22", 60);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:910:21: ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt196=2;
                                                                                                                                                            int LA196_0 = input.LA(1);

                                                                                                                                                            if ( (LA196_0==DELIMITER1) ) {
                                                                                                                                                                alt196=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt196) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:910:22: DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4558); 

                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4560);
                                                                                                                                                                    st_sized_optionnal("P.23", 60);

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:22: ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt195=2;
                                                                                                                                                                    int LA195_0 = input.LA(1);

                                                                                                                                                                    if ( (LA195_0==DELIMITER1) ) {
                                                                                                                                                                        alt195=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt195) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:23: DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4585); 

                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4587);
                                                                                                                                                                            ts_sized_optionnal("P.24", 26);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:65: ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )?
                                                                                                                                                                            int alt183=2;
                                                                                                                                                                            int LA183_0 = input.LA(1);

                                                                                                                                                                            if ( (LA183_0==REPETITEUR) ) {
                                                                                                                                                                                alt183=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt183) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:911:66: REPETITEUR ts_sized_optionnal[\"P.24\", 26]
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p4591); 

                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4593);
                                                                                                                                                                                    ts_sized_optionnal("P.24", 26);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:23: ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt194=2;
                                                                                                                                                                            int LA194_0 = input.LA(1);

                                                                                                                                                                            if ( (LA194_0==DELIMITER1) ) {
                                                                                                                                                                                alt194=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt194) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:912:24: DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4621); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_const_8_25_in_line_p4623);
                                                                                                                                                                                    spec_const_8_25("P.25");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:24: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt193=2;
                                                                                                                                                                                    int LA193_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA193_0==DELIMITER1) ) {
                                                                                                                                                                                        alt193=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt193) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:913:25: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4650); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p4652);
                                                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_8("P.26", 100);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:915:25: ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt192=2;
                                                                                                                                                                                            int LA192_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA192_0==DELIMITER1) ) {
                                                                                                                                                                                                alt192=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt192) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:915:26: DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4705); 

                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4707);
                                                                                                                                                                                                    st_sized_optionnal("P.27", 100);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:916:26: ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt191=2;
                                                                                                                                                                                                    int LA191_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA191_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt191=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt191) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:916:27: DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4736); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_p4738);
                                                                                                                                                                                                            spec_const_race("P.28");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:918:27: ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt190=2;
                                                                                                                                                                                                            int LA190_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA190_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt190=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt190) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:918:28: DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4795); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4797);
                                                                                                                                                                                                                    st_sized_optionnal("P.29", 2);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:28: ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt189=2;
                                                                                                                                                                                                                    int LA189_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA189_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt189=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt189) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:920:29: DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4856); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4858);
                                                                                                                                                                                                                            st_sized_optionnal("P.30", 20);

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:29: ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            int alt188=2;
                                                                                                                                                                                                                            int LA188_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA188_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt188=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt188) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:921:30: DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4890); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p4892);
                                                                                                                                                                                                                                    st_sized_optionnal("P.31", 20);

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:923:30: ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    int alt187=2;
                                                                                                                                                                                                                                    int LA187_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA187_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt187=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt187) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:923:31: DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4955); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p4957);
                                                                                                                                                                                                                                            st_sized_optionnal("P.32", 20);

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:924:31: ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            int alt186=2;
                                                                                                                                                                                                                                            int LA186_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA186_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt186=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt186) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:924:32: DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p4991); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p4993);
                                                                                                                                                                                                                                                    ts_sized_optionnal("P.33", 26);

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:925:32: ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    int alt185=2;
                                                                                                                                                                                                                                                    int LA185_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA185_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt185=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt185) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:925:33: DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5028); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p5030);
                                                                                                                                                                                                                                                            ts_sized_optionnal("P.34", 26);

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:926:33: ( DELIMITER1 )?
                                                                                                                                                                                                                                                            int alt184=2;
                                                                                                                                                                                                                                                            int LA184_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA184_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt184=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt184) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:926:33: DELIMITER1
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p5065); 

                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p"



    // $ANTLR start "line_p_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:928:1: line_p_crapy : ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p_crapy() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:930:23: ( ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:931:3: ( CR CHARP ) ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:931:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:931:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p_crapy5145); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p_crapy5147); 

            }


            startElement("P.1");content("P");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:932:3: ( DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==DELIMITER1) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:932:4: DELIMITER1 crapy_repet[\"P.2\"] ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5155); 

                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5157);
                    crapy_repet("P.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:933:4: ( DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt247=2;
                    int LA247_0 = input.LA(1);

                    if ( (LA247_0==DELIMITER1) ) {
                        alt247=1;
                    }
                    switch (alt247) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:933:5: DELIMITER1 crapy_repet[\"P.3\"] ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5164); 

                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5166);
                            crapy_repet("P.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:934:5: ( DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt246=2;
                            int LA246_0 = input.LA(1);

                            if ( (LA246_0==DELIMITER1) ) {
                                alt246=1;
                            }
                            switch (alt246) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:934:6: DELIMITER1 crapy_repet[\"P.4\"] ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5174); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5176);
                                    crapy_repet("P.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:935:6: ( DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt245=2;
                                    int LA245_0 = input.LA(1);

                                    if ( (LA245_0==DELIMITER1) ) {
                                        alt245=1;
                                    }
                                    switch (alt245) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:935:7: DELIMITER1 crapy_repet[\"P.5\"] ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5185); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5187);
                                            crapy_repet("P.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:936:7: ( DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt244=2;
                                            int LA244_0 = input.LA(1);

                                            if ( (LA244_0==DELIMITER1) ) {
                                                alt244=1;
                                            }
                                            switch (alt244) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:936:8: DELIMITER1 crapy_repet[\"P.6\"] ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5197); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5199);
                                                    crapy_repet("P.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:937:8: ( DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt243=2;
                                                    int LA243_0 = input.LA(1);

                                                    if ( (LA243_0==DELIMITER1) ) {
                                                        alt243=1;
                                                    }
                                                    switch (alt243) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:937:9: DELIMITER1 crapy_repet[\"P.7\"] ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5210); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5212);
                                                            crapy_repet("P.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:9: ( DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt242=2;
                                                            int LA242_0 = input.LA(1);

                                                            if ( (LA242_0==DELIMITER1) ) {
                                                                alt242=1;
                                                            }
                                                            switch (alt242) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:938:10: DELIMITER1 crapy_repet[\"P.8\"] ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5224); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5226);
                                                                    crapy_repet("P.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:939:10: ( DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt241=2;
                                                                    int LA241_0 = input.LA(1);

                                                                    if ( (LA241_0==DELIMITER1) ) {
                                                                        alt241=1;
                                                                    }
                                                                    switch (alt241) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:939:11: DELIMITER1 crapy_repet[\"P.9\"] ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5239); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5241);
                                                                            crapy_repet("P.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:940:11: ( DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt240=2;
                                                                            int LA240_0 = input.LA(1);

                                                                            if ( (LA240_0==DELIMITER1) ) {
                                                                                alt240=1;
                                                                            }
                                                                            switch (alt240) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:940:12: DELIMITER1 crapy_repet[\"P.10\"] ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5255); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5257);
                                                                                    crapy_repet("P.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:941:12: ( DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt239=2;
                                                                                    int LA239_0 = input.LA(1);

                                                                                    if ( (LA239_0==DELIMITER1) ) {
                                                                                        alt239=1;
                                                                                    }
                                                                                    switch (alt239) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:941:13: DELIMITER1 crapy_repet[\"P.11\"] ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5272); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5274);
                                                                                            crapy_repet("P.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:942:13: ( DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt238=2;
                                                                                            int LA238_0 = input.LA(1);

                                                                                            if ( (LA238_0==DELIMITER1) ) {
                                                                                                alt238=1;
                                                                                            }
                                                                                            switch (alt238) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:942:14: DELIMITER1 crapy_repet[\"P.12\"] ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5290); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5292);
                                                                                                    crapy_repet("P.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:14: ( DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt237=2;
                                                                                                    int LA237_0 = input.LA(1);

                                                                                                    if ( (LA237_0==DELIMITER1) ) {
                                                                                                        alt237=1;
                                                                                                    }
                                                                                                    switch (alt237) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:943:15: DELIMITER1 crapy_repet[\"P.13\"] ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5309); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5311);
                                                                                                            crapy_repet("P.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:15: ( DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt236=2;
                                                                                                            int LA236_0 = input.LA(1);

                                                                                                            if ( (LA236_0==DELIMITER1) ) {
                                                                                                                alt236=1;
                                                                                                            }
                                                                                                            switch (alt236) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:944:16: DELIMITER1 crapy_repet[\"P.14\"] ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5329); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5331);
                                                                                                                    crapy_repet("P.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:16: ( DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt235=2;
                                                                                                                    int LA235_0 = input.LA(1);

                                                                                                                    if ( (LA235_0==DELIMITER1) ) {
                                                                                                                        alt235=1;
                                                                                                                    }
                                                                                                                    switch (alt235) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:945:17: DELIMITER1 crapy_repet[\"P.15\"] ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5350); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5352);
                                                                                                                            crapy_repet("P.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:946:17: ( DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt234=2;
                                                                                                                            int LA234_0 = input.LA(1);

                                                                                                                            if ( (LA234_0==DELIMITER1) ) {
                                                                                                                                alt234=1;
                                                                                                                            }
                                                                                                                            switch (alt234) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:946:18: DELIMITER1 crapy_repet[\"P.16\"] ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5372); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5374);
                                                                                                                                    crapy_repet("P.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:947:18: ( DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt233=2;
                                                                                                                                    int LA233_0 = input.LA(1);

                                                                                                                                    if ( (LA233_0==DELIMITER1) ) {
                                                                                                                                        alt233=1;
                                                                                                                                    }
                                                                                                                                    switch (alt233) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:947:19: DELIMITER1 crapy_repet[\"P.17\"] ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5395); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5397);
                                                                                                                                            crapy_repet("P.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:19: ( DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt232=2;
                                                                                                                                            int LA232_0 = input.LA(1);

                                                                                                                                            if ( (LA232_0==DELIMITER1) ) {
                                                                                                                                                alt232=1;
                                                                                                                                            }
                                                                                                                                            switch (alt232) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:948:20: DELIMITER1 crapy_repet[\"P.18\"] ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5419); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5421);
                                                                                                                                                    crapy_repet("P.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:20: ( DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt231=2;
                                                                                                                                                    int LA231_0 = input.LA(1);

                                                                                                                                                    if ( (LA231_0==DELIMITER1) ) {
                                                                                                                                                        alt231=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt231) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:949:21: DELIMITER1 crapy_repet[\"P.19\"] ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5444); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5446);
                                                                                                                                                            crapy_repet("P.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:21: ( DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt230=2;
                                                                                                                                                            int LA230_0 = input.LA(1);

                                                                                                                                                            if ( (LA230_0==DELIMITER1) ) {
                                                                                                                                                                alt230=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt230) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:950:22: DELIMITER1 crapy_repet[\"P.20\"] ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5470); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5472);
                                                                                                                                                                    crapy_repet("P.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:951:22: ( DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt229=2;
                                                                                                                                                                    int LA229_0 = input.LA(1);

                                                                                                                                                                    if ( (LA229_0==DELIMITER1) ) {
                                                                                                                                                                        alt229=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt229) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:951:23: DELIMITER1 crapy_repet[\"P.21\"] ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5497); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5499);
                                                                                                                                                                            crapy_repet("P.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:23: ( DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt228=2;
                                                                                                                                                                            int LA228_0 = input.LA(1);

                                                                                                                                                                            if ( (LA228_0==DELIMITER1) ) {
                                                                                                                                                                                alt228=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt228) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:952:24: DELIMITER1 crapy_repet[\"P.22\"] ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5525); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5527);
                                                                                                                                                                                    crapy_repet("P.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:953:24: ( DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt227=2;
                                                                                                                                                                                    int LA227_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA227_0==DELIMITER1) ) {
                                                                                                                                                                                        alt227=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt227) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:953:25: DELIMITER1 crapy_repet[\"P.23\"] ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5554); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5556);
                                                                                                                                                                                            crapy_repet("P.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:25: ( DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt226=2;
                                                                                                                                                                                            int LA226_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA226_0==DELIMITER1) ) {
                                                                                                                                                                                                alt226=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt226) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:954:26: DELIMITER1 crapy_repet[\"P.24\"] ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5584); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5586);
                                                                                                                                                                                                    crapy_repet("P.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:26: ( DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt225=2;
                                                                                                                                                                                                    int LA225_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA225_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt225=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt225) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:955:27: DELIMITER1 crapy_repet[\"P.25\"] ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5615); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5617);
                                                                                                                                                                                                            crapy_repet("P.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:27: ( DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt224=2;
                                                                                                                                                                                                            int LA224_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA224_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt224=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt224) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:956:28: DELIMITER1 crapy_repet[\"P.26\"] ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5647); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5649);
                                                                                                                                                                                                                    crapy_repet("P.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:957:28: ( DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt223=2;
                                                                                                                                                                                                                    int LA223_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA223_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt223=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt223) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:957:29: DELIMITER1 crapy_repet[\"P.27\"] ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5680); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5682);
                                                                                                                                                                                                                            crapy_repet("P.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:958:29: ( DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt222=2;
                                                                                                                                                                                                                            int LA222_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA222_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt222=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt222) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:958:30: DELIMITER1 crapy_repet[\"P.28\"] ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5714); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5716);
                                                                                                                                                                                                                                    crapy_repet("P.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:959:30: ( DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt221=2;
                                                                                                                                                                                                                                    int LA221_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA221_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt221=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt221) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:959:31: DELIMITER1 crapy_repet[\"P.29\"] ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5749); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5751);
                                                                                                                                                                                                                                            crapy_repet("P.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:31: ( DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt220=2;
                                                                                                                                                                                                                                            int LA220_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA220_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt220=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt220) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:960:32: DELIMITER1 crapy_repet[\"P.30\"] ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5785); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5787);
                                                                                                                                                                                                                                                    crapy_repet("P.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:961:32: ( DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt219=2;
                                                                                                                                                                                                                                                    int LA219_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA219_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt219=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt219) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:961:33: DELIMITER1 crapy_repet[\"P.31\"] ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5822); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5824);
                                                                                                                                                                                                                                                            crapy_repet("P.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:962:33: ( DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                            int alt218=2;
                                                                                                                                                                                                                                                            int LA218_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA218_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt218=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt218) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:962:34: DELIMITER1 crapy_repet[\"P.32\"] ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5860); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5862);
                                                                                                                                                                                                                                                                    crapy_repet("P.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:963:34: ( DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                    int alt217=2;
                                                                                                                                                                                                                                                                    int LA217_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA217_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt217=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt217) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:963:35: DELIMITER1 crapy_repet[\"P.33\"] ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5899); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5901);
                                                                                                                                                                                                                                                                            crapy_repet("P.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:964:35: ( DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                            int alt216=2;
                                                                                                                                                                                                                                                                            int LA216_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA216_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt216=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt216) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:964:36: DELIMITER1 crapy_repet[\"P.34\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5939); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_p_crapy5941);
                                                                                                                                                                                                                                                                                    crapy_repet("P.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:36: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                    int alt215=2;
                                                                                                                                                                                                                                                                                    int LA215_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA215_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt215=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt215) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:965:36: DELIMITER1
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p_crapy5979); 

                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p_crapy"



    // $ANTLR start "line_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:968:1: line_reg : ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? ;
    public final void line_reg() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:970:23: ( ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:971:3: ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:971:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:971:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg6066); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg6068); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg6070); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg6072); 

            }


            startElement("REG.1");content("REG");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6079); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_reg6081);
            nm_integer_sized_mandatory("REG.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6086); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_reg6088);
            st_sized_mandatory("REG.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6093); 

            pushFollow(FOLLOW_spec_reg_4_in_line_reg6095);
            spec_reg_4("REG.4", 11);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6100); 

            pushFollow(FOLLOW_spec_p_or_m_in_line_reg6102);
            spec_p_or_m("REG.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6107); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_reg6109);
            ts_sized_mandatory("REG.6", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:978:3: ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==DELIMITER1) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:978:4: DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6118); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6120);
                    st_sized_optionnal("REG.7", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:979:4: ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==DELIMITER1) ) {
                        alt250=1;
                    }
                    switch (alt250) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:979:5: DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6127); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_reg6129);
                            st_sized_optionnal("REG.8", 10);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:5: ( DELIMITER1 )?
                            int alt249=2;
                            int LA249_0 = input.LA(1);

                            if ( (LA249_0==DELIMITER1) ) {
                                alt249=1;
                            }
                            switch (alt249) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:980:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg6136); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg"



    // $ANTLR start "line_reg_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:982:1: line_reg_crapy : ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_reg_crapy() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:984:23: ( ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:985:3: ( CR CHARR CHARE CHARG ) ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:985:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:985:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg_crapy6160); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg_crapy6162); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg_crapy6164); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg_crapy6166); 

            }


            startElement("REG.1");content("REG");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:986:3: ( DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==DELIMITER1) ) {
                alt259=1;
            }
            switch (alt259) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:986:4: DELIMITER1 crapy_repet[\"REG.2\"] ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6174); 

                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6176);
                    crapy_repet("REG.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:4: ( DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt258=2;
                    int LA258_0 = input.LA(1);

                    if ( (LA258_0==DELIMITER1) ) {
                        alt258=1;
                    }
                    switch (alt258) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:987:5: DELIMITER1 crapy_repet[\"REG.3\"] ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6183); 

                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6185);
                            crapy_repet("REG.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:988:5: ( DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )? )?
                            int alt257=2;
                            int LA257_0 = input.LA(1);

                            if ( (LA257_0==DELIMITER1) ) {
                                alt257=1;
                            }
                            switch (alt257) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:988:6: DELIMITER1 crapy_repet[\"REG.4\"] ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6193); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6195);
                                    crapy_repet("REG.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:989:6: ( DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )? )?
                                    int alt256=2;
                                    int LA256_0 = input.LA(1);

                                    if ( (LA256_0==DELIMITER1) ) {
                                        alt256=1;
                                    }
                                    switch (alt256) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:989:7: DELIMITER1 crapy_repet[\"REG.5\"] ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6204); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6206);
                                            crapy_repet("REG.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:990:7: ( DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )? )?
                                            int alt255=2;
                                            int LA255_0 = input.LA(1);

                                            if ( (LA255_0==DELIMITER1) ) {
                                                alt255=1;
                                            }
                                            switch (alt255) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:990:8: DELIMITER1 crapy_repet[\"REG.6\"] ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6216); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6218);
                                                    crapy_repet("REG.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:8: ( DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )? )?
                                                    int alt254=2;
                                                    int LA254_0 = input.LA(1);

                                                    if ( (LA254_0==DELIMITER1) ) {
                                                        alt254=1;
                                                    }
                                                    switch (alt254) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:991:9: DELIMITER1 crapy_repet[\"REG.7\"] ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6229); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6231);
                                                            crapy_repet("REG.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:9: ( DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )? )?
                                                            int alt253=2;
                                                            int LA253_0 = input.LA(1);

                                                            if ( (LA253_0==DELIMITER1) ) {
                                                                alt253=1;
                                                            }
                                                            switch (alt253) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:992:10: DELIMITER1 crapy_repet[\"REG.8\"] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6243); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_reg_crapy6245);
                                                                    crapy_repet("REG.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:10: ( DELIMITER1 )?
                                                                    int alt252=2;
                                                                    int LA252_0 = input.LA(1);

                                                                    if ( (LA252_0==DELIMITER1) ) {
                                                                        alt252=1;
                                                                    }
                                                                    switch (alt252) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:993:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg_crapy6257); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg_crapy"



    // $ANTLR start "line_obr"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:996:1: line_obr : ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:998:23: ( ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:3: ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:999:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr6292); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr6294); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr6296); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr6298); 

            }


            startElement("OBR.1");content("OBR");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6305); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obr6307);
            nm_integer_sized_mandatory("OBR.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6312); 

            pushFollow(FOLLOW_spec_sized_9_3_in_line_obr6314);
            spec_sized_9_3("OBR.3", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6319); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6321);
            spec_sized_mult_lvl1_st_optionnal_2("OBR.4", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6326); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6328);
            spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 640000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:67: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )*
            loop260:
            do {
                int alt260=2;
                int LA260_0 = input.LA(1);

                if ( (LA260_0==REPETITEUR) ) {
                    alt260=1;
                }


                switch (alt260) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1003:68: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6332); 

            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6334);
            	    spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop260;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6344); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6346);
            st_sized_optionnal("OBR.6", 2);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1005:45: ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )*
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==REPETITEUR) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1005:46: REPETITEUR st_sized_optionnal[\"OBR.6\", 2]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6350); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6352);
            	    st_sized_optionnal("OBR.6", 2);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6359); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6361);
            ts_sized_optionnal("OBR.7", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6366); 

            pushFollow(FOLLOW_spec_non_sized_9_8_in_line_obr6368);
            spec_non_sized_9_8("OBR.8");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6373); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6375);
            ts_sized_optionnal("OBR.9", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6383); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6385);
            st_sized_optionnal("OBR.10", 20);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6390); 

            pushFollow(FOLLOW_spec_sized_cna_in_line_obr6392);
            spec_sized_cna("OBR.11", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6400); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6402);
            st_sized_optionnal("OBR.12", 1);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1015:3: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==DELIMITER1) ) {
                alt289=1;
            }
            switch (alt289) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1015:4: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6411); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6413);
                    spec_sized_mult_lvl1_st_optionnal_2("OBR.13", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1016:4: ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt288=2;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==DELIMITER1) ) {
                        alt288=1;
                    }
                    switch (alt288) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1016:5: DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6420); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6422);
                            st_sized_optionnal("OBR.14", 300);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1017:5: ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt287=2;
                            int LA287_0 = input.LA(1);

                            if ( (LA287_0==DELIMITER1) ) {
                                alt287=1;
                            }
                            switch (alt287) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1017:6: DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6430); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6432);
                                    ts_sized_optionnal("OBR.15", 26);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1018:6: ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt286=2;
                                    int LA286_0 = input.LA(1);

                                    if ( (LA286_0==DELIMITER1) ) {
                                        alt286=1;
                                    }
                                    switch (alt286) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1018:7: DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6441); 

                                            pushFollow(FOLLOW_spec_sized_9_16_in_line_obr6443);
                                            spec_sized_9_16("OBR.16", 300);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1019:7: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt285=2;
                                            int LA285_0 = input.LA(1);

                                            if ( (LA285_0==DELIMITER1) ) {
                                                alt285=1;
                                            }
                                            switch (alt285) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1019:8: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6453); 

                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6455);
                                                    spec_sized_mult_lvl1_st_optionnal_6("OBR.17", 60);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1020:8: ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt284=2;
                                                    int LA284_0 = input.LA(1);

                                                    if ( (LA284_0==DELIMITER1) ) {
                                                        alt284=1;
                                                    }
                                                    switch (alt284) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1020:9: DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6466); 

                                                            pushFollow(FOLLOW_spec_sized_tn_in_line_obr6468);
                                                            spec_sized_tn("OBR.18", 40);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1021:9: ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt283=2;
                                                            int LA283_0 = input.LA(1);

                                                            if ( (LA283_0==DELIMITER1) ) {
                                                                alt283=1;
                                                            }
                                                            switch (alt283) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1021:10: DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6480); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6482);
                                                                    st_sized_optionnal("OBR.19", 60);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1022:10: ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt282=2;
                                                                    int LA282_0 = input.LA(1);

                                                                    if ( (LA282_0==DELIMITER1) ) {
                                                                        alt282=1;
                                                                    }
                                                                    switch (alt282) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1022:11: DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6495); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6497);
                                                                            st_sized_optionnal("OBR.20", 60);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1023:11: ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt281=2;
                                                                            int LA281_0 = input.LA(1);

                                                                            if ( (LA281_0==DELIMITER1) ) {
                                                                                alt281=1;
                                                                            }
                                                                            switch (alt281) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1023:12: DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6511); 

                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6513);
                                                                                    st_sized_optionnal("OBR.21", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1024:12: ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt280=2;
                                                                                    int LA280_0 = input.LA(1);

                                                                                    if ( (LA280_0==DELIMITER1) ) {
                                                                                        alt280=1;
                                                                                    }
                                                                                    switch (alt280) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1024:13: DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6528); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6530);
                                                                                            st_sized_optionnal("OBR.22", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1025:13: ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt279=2;
                                                                                            int LA279_0 = input.LA(1);

                                                                                            if ( (LA279_0==DELIMITER1) ) {
                                                                                                alt279=1;
                                                                                            }
                                                                                            switch (alt279) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1025:14: DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6546); 

                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6548);
                                                                                                    ts_sized_optionnal("OBR.23", 26);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1026:14: ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt278=2;
                                                                                                    int LA278_0 = input.LA(1);

                                                                                                    if ( (LA278_0==DELIMITER1) ) {
                                                                                                        alt278=1;
                                                                                                    }
                                                                                                    switch (alt278) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1026:15: DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6565); 

                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr6567);
                                                                                                            spec_const_race("OBR.24");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:15: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt277=2;
                                                                                                            int LA277_0 = input.LA(1);

                                                                                                            if ( (LA277_0==DELIMITER1) ) {
                                                                                                                alt277=1;
                                                                                                            }
                                                                                                            switch (alt277) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1027:16: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6585); 

                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6587);
                                                                                                                    spec_sized_mult_lvl1_st_optionnal_2("OBR.25", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:16: ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt276=2;
                                                                                                                    int LA276_0 = input.LA(1);

                                                                                                                    if ( (LA276_0==DELIMITER1) ) {
                                                                                                                        alt276=1;
                                                                                                                    }
                                                                                                                    switch (alt276) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1028:17: DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6606); 

                                                                                                                            pushFollow(FOLLOW_spec_const_9_26_in_line_obr6608);
                                                                                                                            spec_const_9_26("OBR.26");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:17: ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt275=2;
                                                                                                                            int LA275_0 = input.LA(1);

                                                                                                                            if ( (LA275_0==DELIMITER1) ) {
                                                                                                                                alt275=1;
                                                                                                                            }
                                                                                                                            switch (alt275) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1029:18: DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6628); 

                                                                                                                                    pushFollow(FOLLOW_spec_const_race_in_line_obr6630);
                                                                                                                                    spec_const_race("OBR.27");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1030:18: ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt274=2;
                                                                                                                                    int LA274_0 = input.LA(1);

                                                                                                                                    if ( (LA274_0==DELIMITER1) ) {
                                                                                                                                        alt274=1;
                                                                                                                                    }
                                                                                                                                    switch (alt274) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1030:19: DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6651); 

                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr6653);
                                                                                                                                            spec_const_race("OBR.28");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:19: ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt273=2;
                                                                                                                                            int LA273_0 = input.LA(1);

                                                                                                                                            if ( (LA273_0==DELIMITER1) ) {
                                                                                                                                                alt273=1;
                                                                                                                                            }
                                                                                                                                            switch (alt273) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:20: DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6675); 

                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6677);
                                                                                                                                                    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:61: ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )*
                                                                                                                                                    loop262:
                                                                                                                                                    do {
                                                                                                                                                        int alt262=2;
                                                                                                                                                        int LA262_0 = input.LA(1);

                                                                                                                                                        if ( (LA262_0==REPETITEUR) ) {
                                                                                                                                                            alt262=1;
                                                                                                                                                        }


                                                                                                                                                        switch (alt262) {
                                                                                                                                                    	case 1 :
                                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1031:62: REPETITEUR spec_sized_cna[\"OBR.29\", 150]
                                                                                                                                                    	    {
                                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6681); 

                                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6683);
                                                                                                                                                    	    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    	    state._fsp--;


                                                                                                                                                    	    }
                                                                                                                                                    	    break;

                                                                                                                                                    	default :
                                                                                                                                                    	    break loop262;
                                                                                                                                                        }
                                                                                                                                                    } while (true);


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1032:20: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt272=2;
                                                                                                                                                    int LA272_0 = input.LA(1);

                                                                                                                                                    if ( (LA272_0==DELIMITER1) ) {
                                                                                                                                                        alt272=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt272) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1032:21: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6708); 

                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr6710);
                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_4("OBR.30", 150);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1033:21: ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt271=2;
                                                                                                                                                            int LA271_0 = input.LA(1);

                                                                                                                                                            if ( (LA271_0==DELIMITER1) ) {
                                                                                                                                                                alt271=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt271) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1033:22: DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6734); 

                                                                                                                                                                    pushFollow(FOLLOW_spec_const_9_31_in_line_obr6736);
                                                                                                                                                                    spec_const_9_31("OBR.31");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:22: ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    int alt270=2;
                                                                                                                                                                    int LA270_0 = input.LA(1);

                                                                                                                                                                    if ( (LA270_0==DELIMITER1) ) {
                                                                                                                                                                        alt270=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt270) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:23: DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6783); 

                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6785);
                                                                                                                                                                            st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:68: ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )*
                                                                                                                                                                            loop263:
                                                                                                                                                                            do {
                                                                                                                                                                                int alt263=2;
                                                                                                                                                                                int LA263_0 = input.LA(1);

                                                                                                                                                                                if ( (LA263_0==REPETITEUR) ) {
                                                                                                                                                                                    alt263=1;
                                                                                                                                                                                }


                                                                                                                                                                                switch (alt263) {
                                                                                                                                                                            	case 1 :
                                                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1035:69: REPETITEUR st_sized_optionnal[\"OBR.32\", 300]
                                                                                                                                                                            	    {
                                                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr6789); 

                                                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr6791);
                                                                                                                                                                            	    st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            	    state._fsp--;


                                                                                                                                                                            	    }
                                                                                                                                                                            	    break;

                                                                                                                                                                            	default :
                                                                                                                                                                            	    break loop263;
                                                                                                                                                                                }
                                                                                                                                                                            } while (true);


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:23: ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            int alt269=2;
                                                                                                                                                                            int LA269_0 = input.LA(1);

                                                                                                                                                                            if ( (LA269_0==DELIMITER1) ) {
                                                                                                                                                                                alt269=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt269) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1036:24: DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6819); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6821);
                                                                                                                                                                                    spec_sized_cna("OBR.33", 60);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:24: ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    int alt268=2;
                                                                                                                                                                                    int LA268_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA268_0==DELIMITER1) ) {
                                                                                                                                                                                        alt268=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt268) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1037:25: DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6848); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr6850);
                                                                                                                                                                                            spec_sized_cna("OBR.34", 60);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:25: ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            int alt267=2;
                                                                                                                                                                                            int LA267_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA267_0==DELIMITER1) ) {
                                                                                                                                                                                                alt267=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt267) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1038:26: DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6878); 

                                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr6880);
                                                                                                                                                                                                    spec_sized_cna("OBR.35", 60);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:26: ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    int alt266=2;
                                                                                                                                                                                                    int LA266_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA266_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt266=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt266) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1039:27: DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6909); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr6911);
                                                                                                                                                                                                            spec_sized_cna("OBR.36", 60);

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:27: ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            int alt265=2;
                                                                                                                                                                                                            int LA265_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA265_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt265=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt265) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1040:28: DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6941); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr6943);
                                                                                                                                                                                                                    ts_sized_optionnal("OBR.37", 26);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:29: ( DELIMITER1 )?
                                                                                                                                                                                                                    int alt264=2;
                                                                                                                                                                                                                    int LA264_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA264_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt264=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt264) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1041:29: DELIMITER1
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr6974); 

                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr"



    // $ANTLR start "line_obr_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1043:1: line_obr_crapy : ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr_crapy() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1045:23: ( ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1046:3: ( CR CHARO CHARB CHARR ) ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1046:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1046:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr_crapy7044); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr_crapy7046); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr_crapy7048); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr_crapy7050); 

            }


            startElement("OBR.1");content("OBR");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1047:3: ( DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==DELIMITER1) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1047:4: DELIMITER1 crapy_repet[\"OBR.2\"] ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7058); 

                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7060);
                    crapy_repet("OBR.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:4: ( DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt325=2;
                    int LA325_0 = input.LA(1);

                    if ( (LA325_0==DELIMITER1) ) {
                        alt325=1;
                    }
                    switch (alt325) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1048:5: DELIMITER1 crapy_repet[\"OBR.3\"] ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7067); 

                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7069);
                            crapy_repet("OBR.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1049:5: ( DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt324=2;
                            int LA324_0 = input.LA(1);

                            if ( (LA324_0==DELIMITER1) ) {
                                alt324=1;
                            }
                            switch (alt324) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1049:6: DELIMITER1 crapy_repet[\"OBR.4\"] ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7077); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7079);
                                    crapy_repet("OBR.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1050:6: ( DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt323=2;
                                    int LA323_0 = input.LA(1);

                                    if ( (LA323_0==DELIMITER1) ) {
                                        alt323=1;
                                    }
                                    switch (alt323) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1050:7: DELIMITER1 crapy_repet[\"OBR.5\"] ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7088); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7090);
                                            crapy_repet("OBR.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1051:7: ( DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt322=2;
                                            int LA322_0 = input.LA(1);

                                            if ( (LA322_0==DELIMITER1) ) {
                                                alt322=1;
                                            }
                                            switch (alt322) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1051:8: DELIMITER1 crapy_repet[\"OBR.6\"] ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7100); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7102);
                                                    crapy_repet("OBR.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:8: ( DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt321=2;
                                                    int LA321_0 = input.LA(1);

                                                    if ( (LA321_0==DELIMITER1) ) {
                                                        alt321=1;
                                                    }
                                                    switch (alt321) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1052:9: DELIMITER1 crapy_repet[\"OBR.7\"] ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7113); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7115);
                                                            crapy_repet("OBR.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1053:9: ( DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt320=2;
                                                            int LA320_0 = input.LA(1);

                                                            if ( (LA320_0==DELIMITER1) ) {
                                                                alt320=1;
                                                            }
                                                            switch (alt320) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1053:10: DELIMITER1 crapy_repet[\"OBR.8\"] ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7127); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7129);
                                                                    crapy_repet("OBR.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:10: ( DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt319=2;
                                                                    int LA319_0 = input.LA(1);

                                                                    if ( (LA319_0==DELIMITER1) ) {
                                                                        alt319=1;
                                                                    }
                                                                    switch (alt319) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1054:11: DELIMITER1 crapy_repet[\"OBR.9\"] ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7142); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7144);
                                                                            crapy_repet("OBR.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1055:11: ( DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt318=2;
                                                                            int LA318_0 = input.LA(1);

                                                                            if ( (LA318_0==DELIMITER1) ) {
                                                                                alt318=1;
                                                                            }
                                                                            switch (alt318) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1055:12: DELIMITER1 crapy_repet[\"OBR.10\"] ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7158); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7160);
                                                                                    crapy_repet("OBR.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1056:12: ( DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt317=2;
                                                                                    int LA317_0 = input.LA(1);

                                                                                    if ( (LA317_0==DELIMITER1) ) {
                                                                                        alt317=1;
                                                                                    }
                                                                                    switch (alt317) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1056:13: DELIMITER1 crapy_repet[\"OBR.11\"] ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7175); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7177);
                                                                                            crapy_repet("OBR.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1057:13: ( DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt316=2;
                                                                                            int LA316_0 = input.LA(1);

                                                                                            if ( (LA316_0==DELIMITER1) ) {
                                                                                                alt316=1;
                                                                                            }
                                                                                            switch (alt316) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1057:14: DELIMITER1 crapy_repet[\"OBR.12\"] ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7193); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7195);
                                                                                                    crapy_repet("OBR.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1058:14: ( DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt315=2;
                                                                                                    int LA315_0 = input.LA(1);

                                                                                                    if ( (LA315_0==DELIMITER1) ) {
                                                                                                        alt315=1;
                                                                                                    }
                                                                                                    switch (alt315) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1058:15: DELIMITER1 crapy_repet[\"OBR.13\"] ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7212); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7214);
                                                                                                            crapy_repet("OBR.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1059:15: ( DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt314=2;
                                                                                                            int LA314_0 = input.LA(1);

                                                                                                            if ( (LA314_0==DELIMITER1) ) {
                                                                                                                alt314=1;
                                                                                                            }
                                                                                                            switch (alt314) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1059:16: DELIMITER1 crapy_repet[\"OBR.14\"] ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7232); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7234);
                                                                                                                    crapy_repet("OBR.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1060:16: ( DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt313=2;
                                                                                                                    int LA313_0 = input.LA(1);

                                                                                                                    if ( (LA313_0==DELIMITER1) ) {
                                                                                                                        alt313=1;
                                                                                                                    }
                                                                                                                    switch (alt313) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1060:17: DELIMITER1 crapy_repet[\"OBR.15\"] ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7253); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7255);
                                                                                                                            crapy_repet("OBR.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1061:17: ( DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt312=2;
                                                                                                                            int LA312_0 = input.LA(1);

                                                                                                                            if ( (LA312_0==DELIMITER1) ) {
                                                                                                                                alt312=1;
                                                                                                                            }
                                                                                                                            switch (alt312) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1061:18: DELIMITER1 crapy_repet[\"OBR.16\"] ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7275); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7277);
                                                                                                                                    crapy_repet("OBR.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1062:18: ( DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt311=2;
                                                                                                                                    int LA311_0 = input.LA(1);

                                                                                                                                    if ( (LA311_0==DELIMITER1) ) {
                                                                                                                                        alt311=1;
                                                                                                                                    }
                                                                                                                                    switch (alt311) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1062:19: DELIMITER1 crapy_repet[\"OBR.17\"] ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7298); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7300);
                                                                                                                                            crapy_repet("OBR.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1063:19: ( DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt310=2;
                                                                                                                                            int LA310_0 = input.LA(1);

                                                                                                                                            if ( (LA310_0==DELIMITER1) ) {
                                                                                                                                                alt310=1;
                                                                                                                                            }
                                                                                                                                            switch (alt310) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1063:20: DELIMITER1 crapy_repet[\"OBR.18\"] ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7322); 

                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7324);
                                                                                                                                                    crapy_repet("OBR.18");

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:20: ( DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt309=2;
                                                                                                                                                    int LA309_0 = input.LA(1);

                                                                                                                                                    if ( (LA309_0==DELIMITER1) ) {
                                                                                                                                                        alt309=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt309) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1064:21: DELIMITER1 crapy_repet[\"OBR.19\"] ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7347); 

                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7349);
                                                                                                                                                            crapy_repet("OBR.19");

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:21: ( DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt308=2;
                                                                                                                                                            int LA308_0 = input.LA(1);

                                                                                                                                                            if ( (LA308_0==DELIMITER1) ) {
                                                                                                                                                                alt308=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt308) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1065:22: DELIMITER1 crapy_repet[\"OBR.20\"] ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7373); 

                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7375);
                                                                                                                                                                    crapy_repet("OBR.20");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:22: ( DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt307=2;
                                                                                                                                                                    int LA307_0 = input.LA(1);

                                                                                                                                                                    if ( (LA307_0==DELIMITER1) ) {
                                                                                                                                                                        alt307=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt307) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1066:23: DELIMITER1 crapy_repet[\"OBR.21\"] ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7400); 

                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7402);
                                                                                                                                                                            crapy_repet("OBR.21");

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:23: ( DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt306=2;
                                                                                                                                                                            int LA306_0 = input.LA(1);

                                                                                                                                                                            if ( (LA306_0==DELIMITER1) ) {
                                                                                                                                                                                alt306=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt306) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1067:24: DELIMITER1 crapy_repet[\"OBR.22\"] ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7428); 

                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7430);
                                                                                                                                                                                    crapy_repet("OBR.22");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:24: ( DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt305=2;
                                                                                                                                                                                    int LA305_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA305_0==DELIMITER1) ) {
                                                                                                                                                                                        alt305=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt305) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1068:25: DELIMITER1 crapy_repet[\"OBR.23\"] ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7457); 

                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7459);
                                                                                                                                                                                            crapy_repet("OBR.23");

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1069:25: ( DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt304=2;
                                                                                                                                                                                            int LA304_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA304_0==DELIMITER1) ) {
                                                                                                                                                                                                alt304=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt304) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1069:26: DELIMITER1 crapy_repet[\"OBR.24\"] ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7487); 

                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7489);
                                                                                                                                                                                                    crapy_repet("OBR.24");

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1070:26: ( DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt303=2;
                                                                                                                                                                                                    int LA303_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA303_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt303=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt303) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1070:27: DELIMITER1 crapy_repet[\"OBR.25\"] ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7518); 

                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7520);
                                                                                                                                                                                                            crapy_repet("OBR.25");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1071:27: ( DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt302=2;
                                                                                                                                                                                                            int LA302_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA302_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt302=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt302) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1071:28: DELIMITER1 crapy_repet[\"OBR.26\"] ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7550); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7552);
                                                                                                                                                                                                                    crapy_repet("OBR.26");

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1072:28: ( DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt301=2;
                                                                                                                                                                                                                    int LA301_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA301_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt301=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt301) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1072:29: DELIMITER1 crapy_repet[\"OBR.27\"] ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7583); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7585);
                                                                                                                                                                                                                            crapy_repet("OBR.27");

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1073:29: ( DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                            int alt300=2;
                                                                                                                                                                                                                            int LA300_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA300_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt300=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt300) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1073:30: DELIMITER1 crapy_repet[\"OBR.28\"] ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7617); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7619);
                                                                                                                                                                                                                                    crapy_repet("OBR.28");

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:30: ( DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                    int alt299=2;
                                                                                                                                                                                                                                    int LA299_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA299_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt299=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt299) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1074:31: DELIMITER1 crapy_repet[\"OBR.29\"] ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7652); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7654);
                                                                                                                                                                                                                                            crapy_repet("OBR.29");

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1075:31: ( DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                            int alt298=2;
                                                                                                                                                                                                                                            int LA298_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA298_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt298=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt298) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1075:32: DELIMITER1 crapy_repet[\"OBR.30\"] ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7688); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7690);
                                                                                                                                                                                                                                                    crapy_repet("OBR.30");

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1076:32: ( DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                    int alt297=2;
                                                                                                                                                                                                                                                    int LA297_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA297_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt297=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt297) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1076:33: DELIMITER1 crapy_repet[\"OBR.31\"] ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7725); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7727);
                                                                                                                                                                                                                                                            crapy_repet("OBR.31");

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1077:33: ( DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                                                                            int alt296=2;
                                                                                                                                                                                                                                                            int LA296_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA296_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt296=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt296) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1077:34: DELIMITER1 crapy_repet[\"OBR.32\"] ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7763); 

                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7765);
                                                                                                                                                                                                                                                                    crapy_repet("OBR.32");

                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1078:34: ( DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                                                                    int alt295=2;
                                                                                                                                                                                                                                                                    int LA295_0 = input.LA(1);

                                                                                                                                                                                                                                                                    if ( (LA295_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                        alt295=1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (alt295) {
                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1078:35: DELIMITER1 crapy_repet[\"OBR.33\"] ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7802); 

                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7804);
                                                                                                                                                                                                                                                                            crapy_repet("OBR.33");

                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1079:35: ( DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                                                                            int alt294=2;
                                                                                                                                                                                                                                                                            int LA294_0 = input.LA(1);

                                                                                                                                                                                                                                                                            if ( (LA294_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                alt294=1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            switch (alt294) {
                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1079:36: DELIMITER1 crapy_repet[\"OBR.34\"] ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7842); 

                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7844);
                                                                                                                                                                                                                                                                                    crapy_repet("OBR.34");

                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:36: ( DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                                                                    int alt293=2;
                                                                                                                                                                                                                                                                                    int LA293_0 = input.LA(1);

                                                                                                                                                                                                                                                                                    if ( (LA293_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                        alt293=1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    switch (alt293) {
                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1080:37: DELIMITER1 crapy_repet[\"OBR.35\"] ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7883); 

                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7885);
                                                                                                                                                                                                                                                                                            crapy_repet("OBR.35");

                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:37: ( DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                                                                            int alt292=2;
                                                                                                                                                                                                                                                                                            int LA292_0 = input.LA(1);

                                                                                                                                                                                                                                                                                            if ( (LA292_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                alt292=1;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            switch (alt292) {
                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1081:38: DELIMITER1 crapy_repet[\"OBR.36\"] ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7925); 

                                                                                                                                                                                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7927);
                                                                                                                                                                                                                                                                                                    crapy_repet("OBR.36");

                                                                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:38: ( DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                                                                    int alt291=2;
                                                                                                                                                                                                                                                                                                    int LA291_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                    if ( (LA291_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                        alt291=1;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    switch (alt291) {
                                                                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1082:39: DELIMITER1 crapy_repet[\"OBR.37\"] ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy7968); 

                                                                                                                                                                                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obr_crapy7970);
                                                                                                                                                                                                                                                                                                            crapy_repet("OBR.37");

                                                                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1083:40: ( DELIMITER1 )?
                                                                                                                                                                                                                                                                                                            int alt290=2;
                                                                                                                                                                                                                                                                                                            int LA290_0 = input.LA(1);

                                                                                                                                                                                                                                                                                                            if ( (LA290_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                                                                alt290=1;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            switch (alt290) {
                                                                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1083:40: DELIMITER1
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr_crapy8012); 

                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr_crapy"



    // $ANTLR start "line_obx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1086:1: line_obx : ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) ;
    public final void line_obx() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1088:23: ( ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:3: ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1089:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx8105); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx8107); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx8109); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx8111); 

            }


            startElement("OBX.1");content("OBX");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8118); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obx8120);
            nm_integer_sized_mandatory("OBX.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8125); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:5: ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            int alt361=7;
            switch ( input.LA(1) ) {
            case CHARN:
                {
                alt361=1;
                }
                break;
            case CHARC:
                {
                int LA361_2 = input.LA(2);

                if ( (LA361_2==CHARE) ) {
                    alt361=2;
                }
                else if ( (LA361_2==CHARK||LA361_2==CHARN) ) {
                    alt361=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 361, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARF:
                {
                alt361=3;
                }
                break;
            case CHARS:
                {
                alt361=4;
                }
                break;
            case CHARG:
                {
                int LA361_5 = input.LA(2);

                if ( (LA361_5==CHARC) ) {
                    alt361=5;
                }
                else if ( (LA361_5==CHARB||LA361_5==CHARN) ) {
                    alt361=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 361, 5, input);

                    throw nvae;

                }
                }
                break;
            case CHART:
                {
                int LA361_6 = input.LA(2);

                if ( (LA361_6==CHARX) ) {
                    alt361=6;
                }
                else if ( (LA361_6==CHARN) ) {
                    alt361=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 361, 6, input);

                    throw nvae;

                }
                }
                break;
            case CHARA:
            case CHARD:
            case CHARP:
                {
                alt361=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 361, 0, input);

                throw nvae;

            }

            switch (alt361) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1092:7: spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_nm_in_line_obx8133);
                    spec_const_10_3_nm("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1093:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt331=2;
                    int LA331_0 = input.LA(1);

                    if ( (LA331_0==DELIMITER1) ) {
                        alt331=1;
                    }
                    switch (alt331) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1093:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8142); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8144);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1094:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt330=2;
                            int LA330_0 = input.LA(1);

                            if ( (LA330_0==DELIMITER1) ) {
                                alt330=1;
                            }
                            switch (alt330) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1094:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8154); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8156);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt329=2;
                                    int LA329_0 = input.LA(1);

                                    if ( (LA329_0==DELIMITER1) ) {
                                        alt329=1;
                                    }
                                    switch (alt329) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:9: DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8167); 

                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8169);
                                            nm_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:55: ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop327:
                                            do {
                                                int alt327=2;
                                                int LA327_0 = input.LA(1);

                                                if ( (LA327_0==REPETITEUR) ) {
                                                    alt327=1;
                                                }


                                                switch (alt327) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1095:56: REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8173); 

                                            	    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx8175);
                                            	    nm_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop327;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:9: ( line_obx2_1_post10_6 )?
                                            int alt328=2;
                                            int LA328_0 = input.LA(1);

                                            if ( (LA328_0==DELIMITER1) ) {
                                                alt328=1;
                                            }
                                            switch (alt328) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1096:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8188);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1097:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1097:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1097:8: spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_ce_in_line_obx8205);
                    spec_const_10_3_ce("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1098:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt336=2;
                    int LA336_0 = input.LA(1);

                    if ( (LA336_0==DELIMITER1) ) {
                        alt336=1;
                    }
                    switch (alt336) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1098:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8214); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8216);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1099:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt335=2;
                            int LA335_0 = input.LA(1);

                            if ( (LA335_0==DELIMITER1) ) {
                                alt335=1;
                            }
                            switch (alt335) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1099:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8226); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8228);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt334=2;
                                    int LA334_0 = input.LA(1);

                                    if ( (LA334_0==DELIMITER1) ) {
                                        alt334=1;
                                    }
                                    switch (alt334) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8239); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8241);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop332:
                                            do {
                                                int alt332=2;
                                                int LA332_0 = input.LA(1);

                                                if ( (LA332_0==REPETITEUR) ) {
                                                    alt332=1;
                                                }


                                                switch (alt332) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1100:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8245); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8247);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop332;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1101:9: ( line_obx2_1_post10_6 )?
                                            int alt333=2;
                                            int LA333_0 = input.LA(1);

                                            if ( (LA333_0==DELIMITER1) ) {
                                                alt333=1;
                                            }
                                            switch (alt333) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1101:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8260);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1102:8: spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_fic_in_line_obx8277);
                    spec_const_10_3_fic("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1103:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt341=2;
                    int LA341_0 = input.LA(1);

                    if ( (LA341_0==DELIMITER1) ) {
                        alt341=1;
                    }
                    switch (alt341) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1103:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8286); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8288);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1104:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt340=2;
                            int LA340_0 = input.LA(1);

                            if ( (LA340_0==DELIMITER1) ) {
                                alt340=1;
                            }
                            switch (alt340) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1104:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8298); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8300);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt339=2;
                                    int LA339_0 = input.LA(1);

                                    if ( (LA339_0==DELIMITER1) ) {
                                        alt339=1;
                                    }
                                    switch (alt339) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8311); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8313);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop337:
                                            do {
                                                int alt337=2;
                                                int LA337_0 = input.LA(1);

                                                if ( (LA337_0==REPETITEUR) ) {
                                                    alt337=1;
                                                }


                                                switch (alt337) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1105:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8317); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx8319);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop337;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:9: ( line_obx2_1_post10_6 )?
                                            int alt338=2;
                                            int LA338_0 = input.LA(1);

                                            if ( (LA338_0==DELIMITER1) ) {
                                                alt338=1;
                                            }
                                            switch (alt338) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1106:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8332);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1107:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1107:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1107:8: spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_st_in_line_obx8349);
                    spec_const_10_3_st("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt346=2;
                    int LA346_0 = input.LA(1);

                    if ( (LA346_0==DELIMITER1) ) {
                        alt346=1;
                    }
                    switch (alt346) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1108:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8358); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8360);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1109:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt345=2;
                            int LA345_0 = input.LA(1);

                            if ( (LA345_0==DELIMITER1) ) {
                                alt345=1;
                            }
                            switch (alt345) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1109:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8370); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8372);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:8: ( DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt344=2;
                                    int LA344_0 = input.LA(1);

                                    if ( (LA344_0==DELIMITER1) ) {
                                        alt344=1;
                                    }
                                    switch (alt344) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:9: DELIMITER1 st_sized_mandatory[\"OBX.6\", 64000] ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8383); 

                                            pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8385);
                                            st_sized_mandatory("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:55: ( REPETITEUR st_sized_mandatory[\"OBX.6\", 64000] )*
                                            loop342:
                                            do {
                                                int alt342=2;
                                                int LA342_0 = input.LA(1);

                                                if ( (LA342_0==REPETITEUR) ) {
                                                    alt342=1;
                                                }


                                                switch (alt342) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1110:56: REPETITEUR st_sized_mandatory[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8389); 

                                            	    pushFollow(FOLLOW_st_sized_mandatory_in_line_obx8391);
                                            	    st_sized_mandatory("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop342;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1111:9: ( line_obx2_1_post10_6 )?
                                            int alt343=2;
                                            int LA343_0 = input.LA(1);

                                            if ( (LA343_0==DELIMITER1) ) {
                                                alt343=1;
                                            }
                                            switch (alt343) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1111:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8404);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1112:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1112:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1112:8: spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_gc_in_line_obx8421);
                    spec_const_10_3_gc("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1113:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt351=2;
                    int LA351_0 = input.LA(1);

                    if ( (LA351_0==DELIMITER1) ) {
                        alt351=1;
                    }
                    switch (alt351) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1113:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8430); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8432);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1114:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt350=2;
                            int LA350_0 = input.LA(1);

                            if ( (LA350_0==DELIMITER1) ) {
                                alt350=1;
                            }
                            switch (alt350) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1114:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8442); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8444);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:8: ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt349=2;
                                    int LA349_0 = input.LA(1);

                                    if ( (LA349_0==DELIMITER1) ) {
                                        alt349=1;
                                    }
                                    switch (alt349) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:9: DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8455); 

                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8457);
                                            spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:72: ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )*
                                            loop347:
                                            do {
                                                int alt347=2;
                                                int LA347_0 = input.LA(1);

                                                if ( (LA347_0==REPETITEUR) ) {
                                                    alt347=1;
                                                }


                                                switch (alt347) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1115:73: REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8461); 

                                            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8463);
                                            	    spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop347;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1116:9: ( line_obx2_1_post10_6 )?
                                            int alt348=2;
                                            int LA348_0 = input.LA(1);

                                            if ( (LA348_0==DELIMITER1) ) {
                                                alt348=1;
                                            }
                                            switch (alt348) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1116:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8476);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1117:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1117:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1117:8: spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_tx_in_line_obx8493);
                    spec_const_10_3_tx("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )? )?
                    int alt355=2;
                    int LA355_0 = input.LA(1);

                    if ( (LA355_0==DELIMITER1) ) {
                        alt355=1;
                    }
                    switch (alt355) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1118:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8502); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8504);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )? )?
                            int alt354=2;
                            int LA354_0 = input.LA(1);

                            if ( (LA354_0==DELIMITER1) ) {
                                alt354=1;
                            }
                            switch (alt354) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1119:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8514); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8516);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:8: ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )? )?
                                    int alt353=2;
                                    int LA353_0 = input.LA(1);

                                    if ( (LA353_0==DELIMITER1) ) {
                                        alt353=1;
                                    }
                                    switch (alt353) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1120:9: DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8527); 

                                            pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx8529);
                                            spec_sized_10_6_tx("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:9: ( line_obx2_1_post10_6 )?
                                            int alt352=2;
                                            int LA352_0 = input.LA(1);

                                            if ( (LA352_0==DELIMITER1) ) {
                                                alt352=1;
                                            }
                                            switch (alt352) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1121:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8540);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1122:8: spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_std_in_line_obx8557);
                    spec_const_10_3_std("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt360=2;
                    int LA360_0 = input.LA(1);

                    if ( (LA360_0==DELIMITER1) ) {
                        alt360=1;
                    }
                    switch (alt360) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1123:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8566); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx8568);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt359=2;
                            int LA359_0 = input.LA(1);

                            if ( (LA359_0==DELIMITER1) ) {
                                alt359=1;
                            }
                            switch (alt359) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1124:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8578); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8580);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:8: ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt358=2;
                                    int LA358_0 = input.LA(1);

                                    if ( (LA358_0==DELIMITER1) ) {
                                        alt358=1;
                                    }
                                    switch (alt358) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:9: DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx8591); 

                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8593);
                                            st_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:55: ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop356:
                                            do {
                                                int alt356=2;
                                                int LA356_0 = input.LA(1);

                                                if ( (LA356_0==REPETITEUR) ) {
                                                    alt356=1;
                                                }


                                                switch (alt356) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1125:56: REPETITEUR st_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx8597); 

                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx8599);
                                            	    st_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop356;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:9: ( line_obx2_1_post10_6 )?
                                            int alt357=2;
                                            int LA357_0 = input.LA(1);

                                            if ( (LA357_0==DELIMITER1) ) {
                                                alt357=1;
                                            }
                                            switch (alt357) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1126:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx8612);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx"



    // $ANTLR start "line_obx2_1_post10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:1: line_obx2_1_post10_6 : ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) ;
    public final void line_obx2_1_post10_6() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1128:21: ( ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1129:6: DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68633); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68635);
            st_sized_optionnal("OBX.7", 20);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:6: ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( (LA375_0==DELIMITER1) ) {
                alt375=1;
            }
            switch (alt375) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:7: DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68644); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68646);
                    st_sized_optionnal("OBX.8", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:50: ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )*
                    loop362:
                    do {
                        int alt362=2;
                        int LA362_0 = input.LA(1);

                        if ( (LA362_0==REPETITEUR) ) {
                            alt362=1;
                        }


                        switch (alt362) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1130:51: REPETITEUR st_sized_optionnal[\"OBX.8\", 60]
                    	    {
                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68650); 

                    	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68652);
                    	    st_sized_optionnal("OBX.8", 60);

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop362;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:7: ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt374=2;
                    int LA374_0 = input.LA(1);

                    if ( (LA374_0==DELIMITER1) ) {
                        alt374=1;
                    }
                    switch (alt374) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:8: DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68664); 

                            pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68666);
                            spec_const_10_9("OBX.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:44: ( REPETITEUR spec_const_10_9[\"OBX.9\"] )*
                            loop363:
                            do {
                                int alt363=2;
                                int LA363_0 = input.LA(1);

                                if ( (LA363_0==REPETITEUR) ) {
                                    alt363=1;
                                }


                                switch (alt363) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1131:45: REPETITEUR spec_const_10_9[\"OBX.9\"]
                            	    {
                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68670); 

                            	    pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68672);
                            	    spec_const_10_9("OBX.9");

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop363;
                                }
                            } while (true);


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt373=2;
                            int LA373_0 = input.LA(1);

                            if ( (LA373_0==DELIMITER1) ) {
                                alt373=1;
                            }
                            switch (alt373) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1132:9: DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68685); 

                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_68687);
                                    nm_sized_optionnal("OBX.10", 5);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:9: ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt372=2;
                                    int LA372_0 = input.LA(1);

                                    if ( (LA372_0==DELIMITER1) ) {
                                        alt372=1;
                                    }
                                    switch (alt372) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:10: DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68699); 

                                            pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68701);
                                            spec_const_10_11("OBX.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:48: ( REPETITEUR spec_const_10_11[\"OBX.11\"] )*
                                            loop364:
                                            do {
                                                int alt364=2;
                                                int LA364_0 = input.LA(1);

                                                if ( (LA364_0==REPETITEUR) ) {
                                                    alt364=1;
                                                }


                                                switch (alt364) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1133:49: REPETITEUR spec_const_10_11[\"OBX.11\"]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_68705); 

                                            	    pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68707);
                                            	    spec_const_10_11("OBX.11");

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop364;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:10: ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt371=2;
                                            int LA371_0 = input.LA(1);

                                            if ( (LA371_0==DELIMITER1) ) {
                                                alt371=1;
                                            }
                                            switch (alt371) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1134:11: DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68722); 

                                                    pushFollow(FOLLOW_spec_const_10_12_in_line_obx2_1_post10_68724);
                                                    spec_const_10_12("OBX.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1135:11: ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt370=2;
                                                    int LA370_0 = input.LA(1);

                                                    if ( (LA370_0==DELIMITER1) ) {
                                                        alt370=1;
                                                    }
                                                    switch (alt370) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1135:12: DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68739); 

                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68741);
                                                            ts_sized_optionnal("OBX.13", 26);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1136:12: ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            int alt369=2;
                                                            int LA369_0 = input.LA(1);

                                                            if ( (LA369_0==DELIMITER1) ) {
                                                                alt369=1;
                                                            }
                                                            switch (alt369) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1136:13: DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68757); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68759);
                                                                    st_sized_optionnal("OBX.14", 20);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1137:13: ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    int alt368=2;
                                                                    int LA368_0 = input.LA(1);

                                                                    if ( (LA368_0==DELIMITER1) ) {
                                                                        alt368=1;
                                                                    }
                                                                    switch (alt368) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1137:14: DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68775); 

                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68777);
                                                                            ts_sized_optionnal("OBX.15", 26);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:14: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            int alt367=2;
                                                                            int LA367_0 = input.LA(1);

                                                                            if ( (LA367_0==DELIMITER1) ) {
                                                                                alt367=1;
                                                                            }
                                                                            switch (alt367) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1138:15: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68794); 

                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_68796);
                                                                                    spec_sized_mult_lvl1_st_optionnal_6("OBX.16", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:15: ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    int alt366=2;
                                                                                    int LA366_0 = input.LA(1);

                                                                                    if ( (LA366_0==DELIMITER1) ) {
                                                                                        alt366=1;
                                                                                    }
                                                                                    switch (alt366) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:16: DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68814); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68816);
                                                                                            st_sized_optionnal("OBX.17", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:60: ( DELIMITER1 )?
                                                                                            int alt365=2;
                                                                                            int LA365_0 = input.LA(1);

                                                                                            if ( (LA365_0==DELIMITER1) ) {
                                                                                                alt365=1;
                                                                                            }
                                                                                            switch (alt365) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1139:60: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_68819); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx2_1_post10_6"



    // $ANTLR start "line_obx_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1141:1: line_obx_crapy : ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obx_crapy() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1143:23: ( ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:3: ( CR CHARO CHARB CHARX ) ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1144:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx_crapy8860); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx_crapy8862); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx_crapy8864); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx_crapy8866); 

            }


            startElement("OBX.1");content("OBX");endElement();

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1145:3: ( DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==DELIMITER1) ) {
                alt392=1;
            }
            switch (alt392) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1145:4: DELIMITER1 crapy_repet[\"OBX.2\"] ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8874); 

                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8876);
                    crapy_repet("OBX.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:4: ( DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt391=2;
                    int LA391_0 = input.LA(1);

                    if ( (LA391_0==DELIMITER1) ) {
                        alt391=1;
                    }
                    switch (alt391) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1146:5: DELIMITER1 crapy_repet[\"OBX.3\"] ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8883); 

                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8885);
                            crapy_repet("OBX.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1147:5: ( DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt390=2;
                            int LA390_0 = input.LA(1);

                            if ( (LA390_0==DELIMITER1) ) {
                                alt390=1;
                            }
                            switch (alt390) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1147:6: DELIMITER1 crapy_repet[\"OBX.4\"] ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8893); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8895);
                                    crapy_repet("OBX.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1148:6: ( DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt389=2;
                                    int LA389_0 = input.LA(1);

                                    if ( (LA389_0==DELIMITER1) ) {
                                        alt389=1;
                                    }
                                    switch (alt389) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1148:7: DELIMITER1 crapy_repet[\"OBX.5\"] ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8904); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8906);
                                            crapy_repet("OBX.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:7: ( DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt388=2;
                                            int LA388_0 = input.LA(1);

                                            if ( (LA388_0==DELIMITER1) ) {
                                                alt388=1;
                                            }
                                            switch (alt388) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1149:8: DELIMITER1 crapy_repet[\"OBX.6\"] ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8916); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8918);
                                                    crapy_repet("OBX.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:8: ( DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt387=2;
                                                    int LA387_0 = input.LA(1);

                                                    if ( (LA387_0==DELIMITER1) ) {
                                                        alt387=1;
                                                    }
                                                    switch (alt387) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1150:9: DELIMITER1 crapy_repet[\"OBX.7\"] ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8929); 

                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8931);
                                                            crapy_repet("OBX.7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:9: ( DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt386=2;
                                                            int LA386_0 = input.LA(1);

                                                            if ( (LA386_0==DELIMITER1) ) {
                                                                alt386=1;
                                                            }
                                                            switch (alt386) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1151:10: DELIMITER1 crapy_repet[\"OBX.8\"] ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8943); 

                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8945);
                                                                    crapy_repet("OBX.8");

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:10: ( DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                    int alt385=2;
                                                                    int LA385_0 = input.LA(1);

                                                                    if ( (LA385_0==DELIMITER1) ) {
                                                                        alt385=1;
                                                                    }
                                                                    switch (alt385) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1152:11: DELIMITER1 crapy_repet[\"OBX.9\"] ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8958); 

                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8960);
                                                                            crapy_repet("OBX.9");

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:11: ( DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                            int alt384=2;
                                                                            int LA384_0 = input.LA(1);

                                                                            if ( (LA384_0==DELIMITER1) ) {
                                                                                alt384=1;
                                                                            }
                                                                            switch (alt384) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1153:12: DELIMITER1 crapy_repet[\"OBX.10\"] ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8974); 

                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8976);
                                                                                    crapy_repet("OBX.10");

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:12: ( DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                    int alt383=2;
                                                                                    int LA383_0 = input.LA(1);

                                                                                    if ( (LA383_0==DELIMITER1) ) {
                                                                                        alt383=1;
                                                                                    }
                                                                                    switch (alt383) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1154:13: DELIMITER1 crapy_repet[\"OBX.11\"] ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy8991); 

                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy8993);
                                                                                            crapy_repet("OBX.11");

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:13: ( DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                            int alt382=2;
                                                                                            int LA382_0 = input.LA(1);

                                                                                            if ( (LA382_0==DELIMITER1) ) {
                                                                                                alt382=1;
                                                                                            }
                                                                                            switch (alt382) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1155:14: DELIMITER1 crapy_repet[\"OBX.12\"] ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9009); 

                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9011);
                                                                                                    crapy_repet("OBX.12");

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:14: ( DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                    int alt381=2;
                                                                                                    int LA381_0 = input.LA(1);

                                                                                                    if ( (LA381_0==DELIMITER1) ) {
                                                                                                        alt381=1;
                                                                                                    }
                                                                                                    switch (alt381) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1156:15: DELIMITER1 crapy_repet[\"OBX.13\"] ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9029); 

                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9031);
                                                                                                            crapy_repet("OBX.13");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:15: ( DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )? )?
                                                                                                            int alt380=2;
                                                                                                            int LA380_0 = input.LA(1);

                                                                                                            if ( (LA380_0==DELIMITER1) ) {
                                                                                                                alt380=1;
                                                                                                            }
                                                                                                            switch (alt380) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1157:16: DELIMITER1 crapy_repet[\"OBX.14\"] ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9050); 

                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9052);
                                                                                                                    crapy_repet("OBX.14");

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:16: ( DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )? )?
                                                                                                                    int alt379=2;
                                                                                                                    int LA379_0 = input.LA(1);

                                                                                                                    if ( (LA379_0==DELIMITER1) ) {
                                                                                                                        alt379=1;
                                                                                                                    }
                                                                                                                    switch (alt379) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1158:17: DELIMITER1 crapy_repet[\"OBX.15\"] ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9071); 

                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9073);
                                                                                                                            crapy_repet("OBX.15");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:17: ( DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )? )?
                                                                                                                            int alt378=2;
                                                                                                                            int LA378_0 = input.LA(1);

                                                                                                                            if ( (LA378_0==DELIMITER1) ) {
                                                                                                                                alt378=1;
                                                                                                                            }
                                                                                                                            switch (alt378) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1159:18: DELIMITER1 crapy_repet[\"OBX.16\"] ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9093); 

                                                                                                                                    pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9095);
                                                                                                                                    crapy_repet("OBX.16");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:18: ( DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )? )?
                                                                                                                                    int alt377=2;
                                                                                                                                    int LA377_0 = input.LA(1);

                                                                                                                                    if ( (LA377_0==DELIMITER1) ) {
                                                                                                                                        alt377=1;
                                                                                                                                    }
                                                                                                                                    switch (alt377) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1160:19: DELIMITER1 crapy_repet[\"OBX.17\"] ( DELIMITER1 )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9116); 

                                                                                                                                            pushFollow(FOLLOW_crapy_repet_in_line_obx_crapy9118);
                                                                                                                                            crapy_repet("OBX.17");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:19: ( DELIMITER1 )?
                                                                                                                                            int alt376=2;
                                                                                                                                            int LA376_0 = input.LA(1);

                                                                                                                                            if ( (LA376_0==DELIMITER1) ) {
                                                                                                                                                alt376=1;
                                                                                                                                            }
                                                                                                                                            switch (alt376) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1161:19: DELIMITER1
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx_crapy9139); 

                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx_crapy"



    // $ANTLR start "line_c"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1164:1: line_c : CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? ;
    public final void line_c() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1166:22: ( CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1167:3: CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )?
            {
            match(input,CR,FOLLOW_CR_in_line_c9190); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c9192); 

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9196); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_c9198);
            nm_integer_sized_mandatory("C.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9203); 

            pushFollow(FOLLOW_spec_const_12_3_in_line_c9205);
            spec_const_12_3("C.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9210); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_c9212);
            st_sized_optionnal("C.4", 64000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:47: ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )*
            loop393:
            do {
                int alt393=2;
                int LA393_0 = input.LA(1);

                if ( (LA393_0==REPETITEUR) ) {
                    alt393=1;
                }


                switch (alt393) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1170:48: REPETITEUR st_sized_optionnal[\"C.4\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_c9216); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_c9218);
            	    st_sized_optionnal("C.4", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop393;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:3: ( DELIMITER1 )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==DELIMITER1) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1171:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c9227); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c"



    // $ANTLR start "line_c_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1173:1: line_c_crapy : CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_c_crapy() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1175:22: ( CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1176:3: CR CHARC ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_c_crapy9245); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c_crapy9247); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:3: ( DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )? )?
            int alt398=2;
            int LA398_0 = input.LA(1);

            if ( (LA398_0==DELIMITER1) ) {
                alt398=1;
            }
            switch (alt398) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1177:4: DELIMITER1 crapy_repet[\"C.2\"] ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9252); 

                    pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9254);
                    crapy_repet("C.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:4: ( DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )? )?
                    int alt397=2;
                    int LA397_0 = input.LA(1);

                    if ( (LA397_0==DELIMITER1) ) {
                        alt397=1;
                    }
                    switch (alt397) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1178:5: DELIMITER1 crapy_repet[\"C.3\"] ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9261); 

                            pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9263);
                            crapy_repet("C.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:5: ( DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )? )?
                            int alt396=2;
                            int LA396_0 = input.LA(1);

                            if ( (LA396_0==DELIMITER1) ) {
                                alt396=1;
                            }
                            switch (alt396) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1179:6: DELIMITER1 crapy_repet[\"C.4\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9271); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_c_crapy9273);
                                    crapy_repet("C.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:6: ( DELIMITER1 )?
                                    int alt395=2;
                                    int LA395_0 = input.LA(1);

                                    if ( (LA395_0==DELIMITER1) ) {
                                        alt395=1;
                                    }
                                    switch (alt395) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1180:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c_crapy9283); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c_crapy"



    // $ANTLR start "line_l"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1183:1: line_l : CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1185:22: ( CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1186:3: CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l9308); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l9310); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1187:3: ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==DELIMITER1) ) {
                alt404=1;
            }
            switch (alt404) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1187:4: DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9315); 

                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9317);
                    nm_integer_sized_optionnal("L.2", 1);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:4: ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    int alt403=2;
                    int LA403_0 = input.LA(1);

                    if ( (LA403_0==DELIMITER1) ) {
                        alt403=1;
                    }
                    switch (alt403) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1188:5: DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9324); 

                            pushFollow(FOLLOW_spec_const_race_in_line_l9326);
                            spec_const_race("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1189:5: ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            int alt402=2;
                            int LA402_0 = input.LA(1);

                            if ( (LA402_0==DELIMITER1) ) {
                                alt402=1;
                            }
                            switch (alt402) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1189:6: DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9334); 

                                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9336);
                                    nm_integer_sized_optionnal("L.4", 4);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1190:6: ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    int alt401=2;
                                    int LA401_0 = input.LA(1);

                                    if ( (LA401_0==DELIMITER1) ) {
                                        alt401=1;
                                    }
                                    switch (alt401) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1190:7: DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9345); 

                                            pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l9347);
                                            nm_integer_sized_optionnal("L.5", 10);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1191:7: ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            int alt400=2;
                                            int LA400_0 = input.LA(1);

                                            if ( (LA400_0==DELIMITER1) ) {
                                                alt400=1;
                                            }
                                            switch (alt400) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1191:8: DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9357); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_l9359);
                                                    st_sized_optionnal("L.6", 12);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1191:49: ( DELIMITER1 )?
                                                    int alt399=2;
                                                    int LA399_0 = input.LA(1);

                                                    if ( (LA399_0==DELIMITER1) ) {
                                                        alt399=1;
                                                    }
                                                    switch (alt399) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1191:49: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l9362); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l"



    // $ANTLR start "line_l_crapy"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1193:1: line_l_crapy : CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l_crapy() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1195:22: ( CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1196:3: CR CHARL ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l_crapy9390); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l_crapy9392); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:3: ( DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )? )?
            int alt410=2;
            int LA410_0 = input.LA(1);

            if ( (LA410_0==DELIMITER1) ) {
                alt410=1;
            }
            switch (alt410) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1197:4: DELIMITER1 crapy_repet[\"L.2\"] ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9397); 

                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9399);
                    crapy_repet("L.2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:4: ( DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )? )?
                    int alt409=2;
                    int LA409_0 = input.LA(1);

                    if ( (LA409_0==DELIMITER1) ) {
                        alt409=1;
                    }
                    switch (alt409) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1198:5: DELIMITER1 crapy_repet[\"L.3\"] ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9406); 

                            pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9408);
                            crapy_repet("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1199:5: ( DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )? )?
                            int alt408=2;
                            int LA408_0 = input.LA(1);

                            if ( (LA408_0==DELIMITER1) ) {
                                alt408=1;
                            }
                            switch (alt408) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1199:6: DELIMITER1 crapy_repet[\"L.4\"] ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9416); 

                                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9418);
                                    crapy_repet("L.4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1200:6: ( DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )? )?
                                    int alt407=2;
                                    int LA407_0 = input.LA(1);

                                    if ( (LA407_0==DELIMITER1) ) {
                                        alt407=1;
                                    }
                                    switch (alt407) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1200:7: DELIMITER1 crapy_repet[\"L.5\"] ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9427); 

                                            pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9429);
                                            crapy_repet("L.5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1201:7: ( DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )? )?
                                            int alt406=2;
                                            int LA406_0 = input.LA(1);

                                            if ( (LA406_0==DELIMITER1) ) {
                                                alt406=1;
                                            }
                                            switch (alt406) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1201:8: DELIMITER1 crapy_repet[\"L.6\"] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9439); 

                                                    pushFollow(FOLLOW_crapy_repet_in_line_l_crapy9441);
                                                    crapy_repet("L.6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1202:8: ( DELIMITER1 )?
                                                    int alt405=2;
                                                    int LA405_0 = input.LA(1);

                                                    if ( (LA405_0==DELIMITER1) ) {
                                                        alt405=1;
                                                    }
                                                    switch (alt405) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1202:8: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l_crapy9451); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l_crapy"



    // $ANTLR start "crapy_repet"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:1: crapy_repet[String nameElement] : crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? ;
    public final void crapy_repet(String nameElement) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1206:33: ( crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:3: crapy_champ_full[$nameElement] ( REPETITEUR crapy_repet[$nameElement] )?
            {
            pushFollow(FOLLOW_crapy_champ_full_in_crapy_repet9475);
            crapy_champ_full(nameElement);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:34: ( REPETITEUR crapy_repet[$nameElement] )?
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==REPETITEUR) ) {
                alt411=1;
            }
            switch (alt411) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1207:35: REPETITEUR crapy_repet[$nameElement]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_crapy_repet9479); 

                    pushFollow(FOLLOW_crapy_repet_in_crapy_repet9481);
                    crapy_repet(nameElement);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_repet"



    // $ANTLR start "crapy_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1209:1: crapy_champ_full[String nameElement] : ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1211:22: ( ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?
            int alt412=3;
            alt412 = dfa412.predict(input);
            switch (alt412) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1212:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_champ_full9503);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:4: ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1213:5: crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9511);
                    crapy_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_full9518);
                    crapy_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_full"



    // $ANTLR start "crapy_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:1: crapy_champ_ordered[String nameElement, int order] : DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1217:52: ( DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1218:3: DELIMITER2 crapy_sous_champ_full[$nameElement + \".\" + $order] ( crapy_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_crapy_champ_ordered9536); 

            pushFollow(FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9538);
            crapy_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1219:3: ( crapy_champ_ordered[$nameElement, $order + 1] )?
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==DELIMITER2) ) {
                alt413=1;
            }
            switch (alt413) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1219:3: crapy_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9543);
                    crapy_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_champ_ordered"



    // $ANTLR start "crapy_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1221:1: crapy_sous_champ_full[String nameElement] : ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? ;
    public final void crapy_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1223:22: ( ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?
            int alt414=3;
            alt414 = dfa414.predict(input);
            switch (alt414) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1224:4: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_crapy_sous_champ_full9566);
                    final_st();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:4: ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1225:5: crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2]
                    {
                    pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9574);
                    crapy_sous_sous_champ_full(nameElement + ".1");

                    state._fsp--;


                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9580);
                    crapy_sous_champ_ordered(nameElement, 2);

                    state._fsp--;


                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_full"



    // $ANTLR start "crapy_sous_champ_ordered"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:1: crapy_sous_champ_ordered[String nameElement, int order] : DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? ;
    public final void crapy_sous_champ_ordered(String nameElement, int order) throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1229:57: ( DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1230:3: DELIMITER3 crapy_sous_sous_champ_full[$nameElement + \".\" + $order] ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            {
            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered9598); 

            pushFollow(FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered9600);
            crapy_sous_sous_champ_full(nameElement + "." + order);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1231:5: ( crapy_sous_champ_ordered[$nameElement, $order + 1] )?
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==DELIMITER3) ) {
                alt415=1;
            }
            switch (alt415) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1231:5: crapy_sous_champ_ordered[$nameElement, $order + 1]
                    {
                    pushFollow(FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered9607);
                    crapy_sous_champ_ordered(nameElement, order + 1);

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_champ_ordered"



    // $ANTLR start "crapy_sous_sous_champ_full"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1233:1: crapy_sous_sous_champ_full[String nameElement] : final_st ;
    public final void crapy_sous_sous_champ_full(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1235:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1236:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_crapy_sous_sous_champ_full9627);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "crapy_sous_sous_champ_full"



    // $ANTLR start "spec_act_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1245:1: spec_act_11[String nameElement] : ( final_HR | final_RX | final_charR );
    public final void spec_act_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1247:22: ( final_HR | final_RX | final_charR )
            int alt416=3;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==CHARH) ) {
                alt416=1;
            }
            else if ( (LA416_0==CHARR) ) {
                int LA416_2 = input.LA(2);

                if ( (LA416_2==CHARX) ) {
                    alt416=2;
                }
                else if ( ((LA416_2 >= CR && LA416_2 <= DELIMITER1)) ) {
                    alt416=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 416, 2, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 416, 0, input);

                throw nvae;

            }
            switch (alt416) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1248:3: final_HR
                    {
                    pushFollow(FOLLOW_final_HR_in_spec_act_119654);
                    final_HR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1248:14: final_RX
                    {
                    pushFollow(FOLLOW_final_RX_in_spec_act_119658);
                    final_RX();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1248:25: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_act_119662);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_act_11"



    // $ANTLR start "spec_p_or_m"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1250:1: spec_p_or_m[String nameElement] : ( final_symbol_plus | final_symbol_moins );
    public final void spec_p_or_m(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1252:22: ( final_symbol_plus | final_symbol_moins )
            int alt417=2;
            int LA417_0 = input.LA(1);

            if ( (LA417_0==PLUS) ) {
                alt417=1;
            }
            else if ( (LA417_0==MOINS) ) {
                alt417=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 417, 0, input);

                throw nvae;

            }
            switch (alt417) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:3: final_symbol_plus
                    {
                    pushFollow(FOLLOW_final_symbol_plus_in_spec_p_or_m9680);
                    final_symbol_plus();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1253:23: final_symbol_moins
                    {
                    pushFollow(FOLLOW_final_symbol_moins_in_spec_p_or_m9684);
                    final_symbol_moins();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_p_or_m"


    public static class spec_ac_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_ac_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1255:1: spec_ac_8[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] ;
    public final HPRIMSParser.spec_ac_8_return spec_ac_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_ac_8_return retval = new HPRIMSParser.spec_ac_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1257:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1258:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_89704);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_89709); 

            pushFollow(FOLLOW_spec_ac_8_2_in_spec_ac_89711);
            spec_ac_8_2(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_89716); 

            pushFollow(FOLLOW_spec_ac_8_3_in_spec_ac_89718);
            spec_ac_8_3(nameElement + ".3");

            state._fsp--;


            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_89723);
            nm_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_ac_8"



    // $ANTLR start "spec_ac_8_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1264:1: spec_ac_8_2[String nameElement] : ( final_TM | final_TR | final_FR );
    public final void spec_ac_8_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1266:22: ( final_TM | final_TR | final_FR )
            int alt418=3;
            int LA418_0 = input.LA(1);

            if ( (LA418_0==CHART) ) {
                int LA418_1 = input.LA(2);

                if ( (LA418_1==CHARM) ) {
                    alt418=1;
                }
                else if ( (LA418_1==CHARR) ) {
                    alt418=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 418, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA418_0==CHARF) ) {
                alt418=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 418, 0, input);

                throw nvae;

            }
            switch (alt418) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1267:3: final_TM
                    {
                    pushFollow(FOLLOW_final_TM_in_spec_ac_8_29746);
                    final_TM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1267:14: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_29750);
                    final_TR();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1267:25: final_FR
                    {
                    pushFollow(FOLLOW_final_FR_in_spec_ac_8_29754);
                    final_FR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_2"



    // $ANTLR start "spec_ac_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1269:1: spec_ac_8_3[String nameElement] : ( final_PF | final_SS | final_TR );
    public final void spec_ac_8_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1271:22: ( final_PF | final_SS | final_TR )
            int alt419=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt419=1;
                }
                break;
            case CHARS:
                {
                alt419=2;
                }
                break;
            case CHART:
                {
                alt419=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 419, 0, input);

                throw nvae;

            }

            switch (alt419) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:3: final_PF
                    {
                    pushFollow(FOLLOW_final_PF_in_spec_ac_8_39774);
                    final_PF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:14: final_SS
                    {
                    pushFollow(FOLLOW_final_SS_in_spec_ac_8_39778);
                    final_SS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1272:25: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_39782);
                    final_TR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_3"



    // $ANTLR start "spec_on_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1274:1: spec_on_optionnal[String nameElement] : ( final_charO | final_charN )? ;
    public final void spec_on_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1276:22: ( ( final_charO | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: ( final_charO | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: ( final_charO | final_charN )?
            int alt420=3;
            int LA420_0 = input.LA(1);

            if ( (LA420_0==CHARO) ) {
                alt420=1;
            }
            else if ( (LA420_0==CHARN) ) {
                alt420=2;
            }
            switch (alt420) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:4: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_on_optionnal9801);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1277:18: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_on_optionnal9805);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_on_optionnal"



    // $ANTLR start "spec_const_sexe"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1279:1: spec_const_sexe[String nameElement] : ( final_charM | final_charF | final_charU )? ;
    public final void spec_const_sexe(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1281:22: ( ( final_charM | final_charF | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:3: ( final_charM | final_charF | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:3: ( final_charM | final_charF | final_charU )?
            int alt421=4;
            switch ( input.LA(1) ) {
                case CHARM:
                    {
                    alt421=1;
                    }
                    break;
                case CHARF:
                    {
                    alt421=2;
                    }
                    break;
                case CHARU:
                    {
                    alt421=3;
                    }
                    break;
            }

            switch (alt421) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:4: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_sexe9826);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:18: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_sexe9830);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1282:32: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_sexe9834);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_sexe"



    // $ANTLR start "spec_const_race"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1284:1: spec_const_race[String nameElement] :;
    public final void spec_const_race(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1286:22: ()
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: 
            {
            }

            endElement();
        }
        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_race"



    // $ANTLR start "spec_const_7_13_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1289:1: spec_const_7_13_version_2_0[String nameElement] : spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1291:22: ( spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1292:3: spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_09871);
            spec_const_7_13_1_version_2_0(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_09874); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_09876);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_0"



    // $ANTLR start "spec_const_7_13_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1294:1: spec_const_7_13_version_2_1[String nameElement] : spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1296:22: ( spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1297:3: spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_19897);
            spec_const_7_13_1_version_2_1(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_19900); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_19902);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_1"



    // $ANTLR start "spec_const_7_13_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1299:1: spec_const_7_13_version_2_2[String nameElement] : spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1301:22: ( spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1302:3: spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_29921);
            spec_const_7_13_1_version_2_2(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_29924); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_29926);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_2"



    // $ANTLR start "spec_const_7_13_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1304:1: spec_const_7_13_2[String nameElement] : ( final_charC | final_charL | final_charR );
    public final void spec_const_7_13_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1306:22: ( final_charC | final_charL | final_charR )
            int alt422=3;
            switch ( input.LA(1) ) {
            case CHARC:
                {
                alt422=1;
                }
                break;
            case CHARL:
                {
                alt422=2;
                }
                break;
            case CHARR:
                {
                alt422=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 422, 0, input);

                throw nvae;

            }

            switch (alt422) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1307:3: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_7_13_29945);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1307:17: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_7_13_29949);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1307:31: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_7_13_29953);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_2"



    // $ANTLR start "spec_const_7_7_contexte_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1309:1: spec_const_7_7_contexte_ORU[String nameElement] : final_ORU ;
    public final void spec_const_7_7_contexte_ORU(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1311:22: ( final_ORU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1312:3: final_ORU
            {
            pushFollow(FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU9971);
            final_ORU();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORU"



    // $ANTLR start "spec_const_7_7_contexte_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1314:1: spec_const_7_7_contexte_ORM[String nameElement] : final_ORM ;
    public final void spec_const_7_7_contexte_ORM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1316:22: ( final_ORM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1317:3: final_ORM
            {
            pushFollow(FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM9989);
            final_ORM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORM"



    // $ANTLR start "spec_const_7_7_contexte_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1319:1: spec_const_7_7_contexte_ORA[String nameElement] : final_ORA ;
    public final void spec_const_7_7_contexte_ORA(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1321:22: ( final_ORA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1322:3: final_ORA
            {
            pushFollow(FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA10007);
            final_ORA();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORA"



    // $ANTLR start "spec_const_7_7_contexte_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1324:1: spec_const_7_7_contexte_ADM[String nameElement] : final_ADM ;
    public final void spec_const_7_7_contexte_ADM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1326:22: ( final_ADM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1327:3: final_ADM
            {
            pushFollow(FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM10025);
            final_ADM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ADM"



    // $ANTLR start "spec_const_7_7_contexte_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1329:1: spec_const_7_7_contexte_FAC[String nameElement] : final_FAC ;
    public final void spec_const_7_7_contexte_FAC(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1331:22: ( final_FAC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1332:3: final_FAC
            {
            pushFollow(FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC10045);
            final_FAC();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_FAC"



    // $ANTLR start "spec_const_7_7_contexte_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1334:1: spec_const_7_7_contexte_REG[String nameElement] : final_REG ;
    public final void spec_const_7_7_contexte_REG(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1336:22: ( final_REG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1337:3: final_REG
            {
            pushFollow(FOLLOW_final_REG_in_spec_const_7_7_contexte_REG10063);
            final_REG();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_REG"



    // $ANTLR start "spec_const_7_7_contexte_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1339:1: spec_const_7_7_contexte_NS[String nameElement] : final_NS ;
    public final void spec_const_7_7_contexte_NS(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1341:22: ( final_NS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1342:3: final_NS
            {
            pushFollow(FOLLOW_final_NS_in_spec_const_7_7_contexte_NS10081);
            final_NS();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_NS"



    // $ANTLR start "spec_const_7_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1344:1: spec_const_7_12[String nameElement] : ( final_charP | final_charD | final_charT ) ;
    public final void spec_const_7_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1346:22: ( ( final_charP | final_charD | final_charT ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:3: ( final_charP | final_charD | final_charT )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:3: ( final_charP | final_charD | final_charT )
            int alt423=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt423=1;
                }
                break;
            case CHARD:
                {
                alt423=2;
                }
                break;
            case CHART:
                {
                alt423=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 423, 0, input);

                throw nvae;

            }

            switch (alt423) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_7_1210100);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:18: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_7_1210104);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1347:32: final_charT
                    {
                    pushFollow(FOLLOW_final_charT_in_spec_const_7_1210108);
                    final_charT();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_12"



    // $ANTLR start "spec_const_9_31"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1349:1: spec_const_9_31[String nameElement] : ( final_PORT | final_CART | final_WHLC | final_WALK )? ;
    public final void spec_const_9_31(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1351:22: ( ( final_PORT | final_CART | final_WHLC | final_WALK )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            int alt424=5;
            switch ( input.LA(1) ) {
                case CHARP:
                    {
                    alt424=1;
                    }
                    break;
                case CHARC:
                    {
                    alt424=2;
                    }
                    break;
                case CHARW:
                    {
                    int LA424_3 = input.LA(2);

                    if ( (LA424_3==CHARH) ) {
                        alt424=3;
                    }
                    else if ( (LA424_3==CHARA) ) {
                        alt424=4;
                    }
                    }
                    break;
            }

            switch (alt424) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:4: final_PORT
                    {
                    pushFollow(FOLLOW_final_PORT_in_spec_const_9_3110128);
                    final_PORT();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:17: final_CART
                    {
                    pushFollow(FOLLOW_final_CART_in_spec_const_9_3110132);
                    final_CART();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:30: final_WHLC
                    {
                    pushFollow(FOLLOW_final_WHLC_in_spec_const_9_3110136);
                    final_WHLC();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1352:43: final_WALK
                    {
                    pushFollow(FOLLOW_final_WALK_in_spec_const_9_3110140);
                    final_WALK();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_31"



    // $ANTLR start "spec_const_8_25"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1354:1: spec_const_8_25[String nameElement] : ( final_OP | final_IP | final_ER | final_PA | final_MP )? ;
    public final void spec_const_8_25(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1356:22: ( ( final_OP | final_IP | final_ER | final_PA | final_MP )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            int alt425=6;
            switch ( input.LA(1) ) {
                case CHARO:
                    {
                    alt425=1;
                    }
                    break;
                case CHARI:
                    {
                    alt425=2;
                    }
                    break;
                case CHARE:
                    {
                    alt425=3;
                    }
                    break;
                case CHARP:
                    {
                    alt425=4;
                    }
                    break;
                case CHARM:
                    {
                    alt425=5;
                    }
                    break;
            }

            switch (alt425) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:4: final_OP
                    {
                    pushFollow(FOLLOW_final_OP_in_spec_const_8_2510161);
                    final_OP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:15: final_IP
                    {
                    pushFollow(FOLLOW_final_IP_in_spec_const_8_2510165);
                    final_IP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:26: final_ER
                    {
                    pushFollow(FOLLOW_final_ER_in_spec_const_8_2510169);
                    final_ER();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:37: final_PA
                    {
                    pushFollow(FOLLOW_final_PA_in_spec_const_8_2510173);
                    final_PA();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1357:48: final_MP
                    {
                    pushFollow(FOLLOW_final_MP_in_spec_const_8_2510177);
                    final_MP();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_8_25"



    // $ANTLR start "spec_const_9_26"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1359:1: spec_const_9_26[String nameElement] : ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? ;
    public final void spec_const_9_26(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1361:22: ( ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            int alt426=10;
            switch ( input.LA(1) ) {
                case CHARF:
                    {
                    alt426=1;
                    }
                    break;
                case CHARP:
                    {
                    alt426=2;
                    }
                    break;
                case CHARM:
                    {
                    alt426=3;
                    }
                    break;
                case CHARI:
                    {
                    alt426=4;
                    }
                    break;
                case CHARR:
                    {
                    alt426=5;
                    }
                    break;
                case CHARC:
                    {
                    alt426=6;
                    }
                    break;
                case CHARO:
                    {
                    alt426=7;
                    }
                    break;
                case CHARD:
                    {
                    alt426=8;
                    }
                    break;
                case CHARX:
                    {
                    alt426=9;
                    }
                    break;
            }

            switch (alt426) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:4: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_9_2610198);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_9_2610202);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:32: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_9_2610206);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:46: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_9_2610210);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:60: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_9_2610214);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:74: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_9_2610218);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1362:88: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_const_9_2610222);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1363:3: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_9_2610228);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1363:17: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_9_2610232);
                    final_charX();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_26"


    public static class spec_const_10_3_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1365:1: spec_const_10_3_nm[String nameElement] : CHARN CHARM ;
    public final HPRIMSParser.spec_const_10_3_nm_return spec_const_10_3_nm(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_nm_return retval = new HPRIMSParser.spec_const_10_3_nm_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1367:22: ( CHARN CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1368:3: CHARN CHARM
            {
            match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_nm10253); 

            match(input,CHARM,FOLLOW_CHARM_in_spec_const_10_3_nm10255); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_nm"


    public static class spec_const_10_3_ce_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_ce"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1370:1: spec_const_10_3_ce[String nameElement] : CHARC CHARE ;
    public final HPRIMSParser.spec_const_10_3_ce_return spec_const_10_3_ce(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_ce_return retval = new HPRIMSParser.spec_const_10_3_ce_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1372:22: ( CHARC CHARE )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1373:3: CHARC CHARE
            {
            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_ce10276); 

            match(input,CHARE,FOLLOW_CHARE_in_spec_const_10_3_ce10278); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_ce"


    public static class spec_const_10_3_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1375:1: spec_const_10_3_st[String nameElement] : CHARS CHART ;
    public final HPRIMSParser.spec_const_10_3_st_return spec_const_10_3_st(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_st_return retval = new HPRIMSParser.spec_const_10_3_st_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1377:22: ( CHARS CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1378:3: CHARS CHART
            {
            match(input,CHARS,FOLLOW_CHARS_in_spec_const_10_3_st10299); 

            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_st10301); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_st"


    public static class spec_const_10_3_gc_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_gc"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1380:1: spec_const_10_3_gc[String nameElement] : CHARG CHARC ;
    public final HPRIMSParser.spec_const_10_3_gc_return spec_const_10_3_gc(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_gc_return retval = new HPRIMSParser.spec_const_10_3_gc_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1382:22: ( CHARG CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1383:3: CHARG CHARC
            {
            match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_gc10322); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_gc10324); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_gc"


    public static class spec_const_10_3_tx_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1385:1: spec_const_10_3_tx[String nameElement] : CHART CHARX ;
    public final HPRIMSParser.spec_const_10_3_tx_return spec_const_10_3_tx(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_tx_return retval = new HPRIMSParser.spec_const_10_3_tx_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1387:22: ( CHART CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1388:3: CHART CHARX
            {
            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_tx10346); 

            match(input,CHARX,FOLLOW_CHARX_in_spec_const_10_3_tx10348); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_tx"


    public static class spec_const_10_3_fic_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_fic"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1390:1: spec_const_10_3_fic[String nameElement] : ( CHARF CHARI CHARC ) ;
    public final HPRIMSParser.spec_const_10_3_fic_return spec_const_10_3_fic(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_fic_return retval = new HPRIMSParser.spec_const_10_3_fic_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1392:22: ( ( CHARF CHARI CHARC ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1393:3: ( CHARF CHARI CHARC )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1393:3: ( CHARF CHARI CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1393:4: CHARF CHARI CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_spec_const_10_3_fic10369); 

            match(input,CHARI,FOLLOW_CHARI_in_spec_const_10_3_fic10371); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_fic10373); 

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_fic"


    public static class spec_const_10_3_std_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_std"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1395:1: spec_const_10_3_std[String nameElement] : ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) );
    public final HPRIMSParser.spec_const_10_3_std_return spec_const_10_3_std(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_std_return retval = new HPRIMSParser.spec_const_10_3_std_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1397:22: ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) )
            int alt427=8;
            switch ( input.LA(1) ) {
            case CHARA:
                {
                alt427=1;
                }
                break;
            case CHARC:
                {
                int LA427_2 = input.LA(2);

                if ( (LA427_2==CHARK) ) {
                    alt427=2;
                }
                else if ( (LA427_2==CHARN) ) {
                    alt427=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 427, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARD:
                {
                alt427=4;
                }
                break;
            case CHARP:
                {
                alt427=5;
                }
                break;
            case CHART:
                {
                alt427=6;
                }
                break;
            case CHARG:
                {
                int LA427_6 = input.LA(2);

                if ( (LA427_6==CHARB) ) {
                    alt427=7;
                }
                else if ( (LA427_6==CHARN) ) {
                    alt427=8;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 427, 6, input);

                    throw nvae;

                }
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 427, 0, input);

                throw nvae;

            }

            switch (alt427) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:3: ( CHARA CHARD )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:3: ( CHARA CHARD )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:4: CHARA CHARD
                    {
                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10395); 

                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10397); 

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:19: ( CHARC CHARK )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:19: ( CHARC CHARK )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:20: CHARC CHARK
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10403); 

                    match(input,CHARK,FOLLOW_CHARK_in_spec_const_10_3_std10405); 

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:35: ( CHARC CHARN CHARA )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:35: ( CHARC CHARN CHARA )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:36: CHARC CHARN CHARA
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std10411); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10413); 

                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std10415); 

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:57: ( CHARD CHART )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:57: ( CHARD CHART )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1398:58: CHARD CHART
                    {
                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std10421); 

                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10423); 

                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:3: ( CHARP CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:3: ( CHARP CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:4: CHARP CHARN
                    {
                    match(input,CHARP,FOLLOW_CHARP_in_spec_const_10_3_std10431); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10433); 

                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:19: ( CHART CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:19: ( CHART CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1399:20: CHART CHARN
                    {
                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std10439); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10441); 

                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:3: ( CHARG CHARB )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:3: ( CHARG CHARB )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:4: CHARG CHARB
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10449); 

                    match(input,CHARB,FOLLOW_CHARB_in_spec_const_10_3_std10451); 

                    }


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:19: ( CHARG CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:19: ( CHARG CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1400:20: CHARG CHARN
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std10457); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std10459); 

                    }


                    content(input.toString(retval.start,input.LT(-1)));

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_std"


    public static class spec_act_10_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_act_10"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1403:1: spec_act_10[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_act_10_return spec_act_10(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_act_10_return retval = new HPRIMSParser.spec_act_10_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1405:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1406:3: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010481);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1406:47: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )*
            loop428:
            do {
                int alt428=2;
                int LA428_0 = input.LA(1);

                if ( (LA428_0==REPETITEUR) ) {
                    alt428=1;
                }


                switch (alt428) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1406:48: REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_act_1010485); 

            	    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010487);
            	    st_non_sized_optionnal(nameElement + ".1");

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop428;
                }
            } while (true);


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_act_1010494); 

            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_1010496);
            st_non_sized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_act_10"


    public static class spec_fac_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_fac_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1410:1: spec_fac_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? ;
    public final HPRIMSParser.spec_fac_6_return spec_fac_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_fac_6_return retval = new HPRIMSParser.spec_fac_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1412:22: ( st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1413:3: st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610520);
            st_sized_optionnal(nameElement + ".1", 9);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1414:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            int alt430=2;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==DELIMITER2) ) {
                alt430=1;
            }
            switch (alt430) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1414:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610526); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610528);
                    st_sized_optionnal(nameElement + ".2", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1415:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    int alt429=2;
                    int LA429_0 = input.LA(1);

                    if ( (LA429_0==DELIMITER2) ) {
                        alt429=1;
                    }
                    switch (alt429) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1415:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_610535); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_610537);
                            st_sized_optionnal(nameElement + ".3", 40);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_fac_6"


    public static class spec_reg_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_reg_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1418:1: spec_reg_4[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_reg_4_return spec_reg_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_reg_4_return retval = new HPRIMSParser.spec_reg_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1420:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1421:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_reg_410564);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_reg_410569); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_reg_410571);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_reg_4"


    public static class spec_sized_10_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1426:1: spec_sized_10_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? ;
    public final HPRIMSParser.spec_sized_10_6_return spec_sized_10_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_6_return retval = new HPRIMSParser.spec_sized_10_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1428:22: ( st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1429:3: st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610595);
            st_sized_optionnal(nameElement + ".1", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1430:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            int alt432=2;
            int LA432_0 = input.LA(1);

            if ( (LA432_0==DELIMITER2) ) {
                alt432=1;
            }
            switch (alt432) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1430:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_610601); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610603);
                    st_sized_optionnal(nameElement + ".2", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1431:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    int alt431=2;
                    int LA431_0 = input.LA(1);

                    if ( (LA431_0==DELIMITER2) ) {
                        alt431=1;
                    }
                    switch (alt431) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1431:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_610610); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_610612);
                            st_sized_optionnal(nameElement + ".3", 10);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_6"



    // $ANTLR start "spec_const_10_9"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1434:1: spec_const_10_9[String nameElement] : ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? ;
    public final void spec_const_10_9(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1436:22: ( ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            int alt433=20;
            switch ( input.LA(1) ) {
                case CHARL:
                    {
                    int LA433_1 = input.LA(2);

                    if ( (LA433_1==CHARL) ) {
                        alt433=3;
                    }
                    else if ( ((LA433_1 >= CR && LA433_1 <= DELIMITER1)||LA433_1==REPETITEUR) ) {
                        alt433=1;
                    }
                    }
                    break;
                case CHARH:
                    {
                    int LA433_2 = input.LA(2);

                    if ( (LA433_2==CHARH) ) {
                        alt433=4;
                    }
                    else if ( ((LA433_2 >= CR && LA433_2 <= DELIMITER1)||LA433_2==REPETITEUR) ) {
                        alt433=2;
                    }
                    }
                    break;
                case CHAR_SYMBOL_INF:
                    {
                    alt433=5;
                    }
                    break;
                case CHAR_SYMBOL_SUP:
                    {
                    alt433=6;
                    }
                    break;
                case CHARN:
                    {
                    int LA433_5 = input.LA(2);

                    if ( (LA433_5==CHARu) ) {
                        alt433=10;
                    }
                    else if ( ((LA433_5 >= CR && LA433_5 <= DELIMITER1)||LA433_5==REPETITEUR) ) {
                        alt433=7;
                    }
                    }
                    break;
                case CHARA:
                    {
                    int LA433_6 = input.LA(2);

                    if ( (LA433_6==CHARA) ) {
                        alt433=9;
                    }
                    else if ( ((LA433_6 >= CR && LA433_6 <= DELIMITER1)||LA433_6==REPETITEUR) ) {
                        alt433=8;
                    }
                    }
                    break;
                case CHARU:
                    {
                    alt433=11;
                    }
                    break;
                case CHARD:
                    {
                    alt433=12;
                    }
                    break;
                case CHARB:
                    {
                    alt433=13;
                    }
                    break;
                case CHARW:
                    {
                    alt433=14;
                    }
                    break;
                case CHARR:
                    {
                    alt433=15;
                    }
                    break;
                case CHARI:
                    {
                    alt433=16;
                    }
                    break;
                case CHARS:
                    {
                    alt433=17;
                    }
                    break;
                case CHARM:
                    {
                    alt433=18;
                    }
                    break;
                case CHARV:
                    {
                    alt433=19;
                    }
                    break;
            }

            switch (alt433) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:4: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_10_910640);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:18: final_charH
                    {
                    pushFollow(FOLLOW_final_charH_in_spec_const_10_910644);
                    final_charH();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:32: final_LL
                    {
                    pushFollow(FOLLOW_final_LL_in_spec_const_10_910648);
                    final_LL();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:43: final_HH
                    {
                    pushFollow(FOLLOW_final_HH_in_spec_const_10_910652);
                    final_HH();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:54: final_symbol_inf
                    {
                    pushFollow(FOLLOW_final_symbol_inf_in_spec_const_10_910656);
                    final_symbol_inf();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1437:73: final_symbol_sup
                    {
                    pushFollow(FOLLOW_final_symbol_sup_in_spec_const_10_910660);
                    final_symbol_sup();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:3: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_910666);
                    final_charN();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:17: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_910670);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:31: final_AA
                    {
                    pushFollow(FOLLOW_final_AA_in_spec_const_10_910674);
                    final_AA();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:42: final_Null
                    {
                    pushFollow(FOLLOW_final_Null_in_spec_const_10_910678);
                    final_Null();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:55: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_910682);
                    final_charU();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:69: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_910686);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1438:83: final_charB
                    {
                    pushFollow(FOLLOW_final_charB_in_spec_const_10_910690);
                    final_charB();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:3: final_charW
                    {
                    pushFollow(FOLLOW_final_charW_in_spec_const_10_910696);
                    final_charW();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:17: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_910700);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:31: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_910704);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:45: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_910708);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:59: final_MS
                    {
                    pushFollow(FOLLOW_final_MS_in_spec_const_10_910712);
                    final_MS();

                    state._fsp--;


                    }
                    break;
                case 19 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1439:70: final_VS
                    {
                    pushFollow(FOLLOW_final_VS_in_spec_const_10_910716);
                    final_VS();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_9"



    // $ANTLR start "spec_const_10_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1441:1: spec_const_10_11[String nameElement] : ( final_charA | final_charS | final_charR | final_charN )? ;
    public final void spec_const_10_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1443:22: ( ( final_charA | final_charS | final_charR | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:3: ( final_charA | final_charS | final_charR | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:3: ( final_charA | final_charS | final_charR | final_charN )?
            int alt434=5;
            switch ( input.LA(1) ) {
                case CHARA:
                    {
                    alt434=1;
                    }
                    break;
                case CHARS:
                    {
                    alt434=2;
                    }
                    break;
                case CHARR:
                    {
                    alt434=3;
                    }
                    break;
                case CHARN:
                    {
                    alt434=4;
                    }
                    break;
            }

            switch (alt434) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:4: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_1110737);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:18: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_1110741);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:32: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1110745);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1444:46: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_1110749);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_11"



    // $ANTLR start "spec_const_10_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1446:1: spec_const_10_12[String nameElement] : ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? ;
    public final void spec_const_10_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1448:22: ( ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            int alt435=9;
            switch ( input.LA(1) ) {
                case CHARR:
                    {
                    alt435=1;
                    }
                    break;
                case CHARP:
                    {
                    alt435=2;
                    }
                    break;
                case CHARF:
                    {
                    alt435=3;
                    }
                    break;
                case CHARC:
                    {
                    alt435=4;
                    }
                    break;
                case CHARI:
                    {
                    alt435=5;
                    }
                    break;
                case CHARD:
                    {
                    alt435=6;
                    }
                    break;
                case CHARX:
                    {
                    alt435=7;
                    }
                    break;
                case CHARU:
                    {
                    alt435=8;
                    }
                    break;
            }

            switch (alt435) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:4: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_1210770);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_10_1210774);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:32: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_10_1210778);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:46: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_10_1210782);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:60: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_1210786);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1449:74: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_1210790);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:4: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_10_1210797);
                    final_charX();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1450:18: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_1210801);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_12"



    // $ANTLR start "spec_const_12_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1452:1: spec_const_12_3[String nameElement] : ( final_charP | final_charL )? ;
    public final void spec_const_12_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1454:22: ( ( final_charP | final_charL )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:3: ( final_charP | final_charL )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:3: ( final_charP | final_charL )?
            int alt436=3;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==CHARP) ) {
                alt436=1;
            }
            else if ( (LA436_0==CHARL) ) {
                alt436=2;
            }
            switch (alt436) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_12_310822);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1455:18: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_12_310826);
                    final_charL();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_12_3"


    public static class spec_sized_mult_lvl1_st_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1457:1: spec_sized_mult_lvl1_st_mandatory_2[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return spec_sized_mult_lvl1_st_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1459:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1460:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210846);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_210852); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210854);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_2"


    public static class spec_sized_mult_lvl1_st_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1464:1: spec_sized_mult_lvl1_st_optionnal_2[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return spec_sized_mult_lvl1_st_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1466:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1467:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210877);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1468:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt437=2;
            int LA437_0 = input.LA(1);

            if ( (LA437_0==DELIMITER2) ) {
                alt437=1;
            }
            switch (alt437) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1468:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_210883); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210885);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_2"


    public static class spec_sized_mult_lvl1_st_optionnal_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1472:1: spec_sized_mult_lvl1_st_optionnal_4[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return spec_sized_mult_lvl1_st_optionnal_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1474:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1475:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410910);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1476:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( (LA440_0==DELIMITER2) ) {
                alt440=1;
            }
            switch (alt440) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1476:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410916); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410918);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1477:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    int alt439=2;
                    int LA439_0 = input.LA(1);

                    if ( (LA439_0==DELIMITER2) ) {
                        alt439=1;
                    }
                    switch (alt439) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1477:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410925); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410927);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1478:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            int alt438=2;
                            int LA438_0 = input.LA(1);

                            if ( (LA438_0==DELIMITER2) ) {
                                alt438=1;
                            }
                            switch (alt438) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1478:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410935); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410937);
                                    st_non_sized_optionnal(nameElement + ".2");

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_4"


    public static class spec_sized_mult_lvl1_st_mandatory_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1482:1: spec_sized_mult_lvl1_st_mandatory_6[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return spec_sized_mult_lvl1_st_mandatory_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1484:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1485:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610966);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610972); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610974);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610981); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610983);
            st_nonsized_mandatory(nameElement + ".3");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610991); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610993);
            st_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611002); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611004);
            st_nonsized_mandatory(nameElement + ".5");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611014); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611016);
            st_nonsized_mandatory(nameElement + ".6");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_6"


    public static class spec_sized_mult_lvl1_st_optionnal_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1493:1: spec_sized_mult_lvl1_st_optionnal_6[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return spec_sized_mult_lvl1_st_optionnal_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1495:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1496:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611039);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1497:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt445=2;
            int LA445_0 = input.LA(1);

            if ( (LA445_0==DELIMITER2) ) {
                alt445=1;
            }
            switch (alt445) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1497:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611046); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611048);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1498:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt444=2;
                    int LA444_0 = input.LA(1);

                    if ( (LA444_0==DELIMITER2) ) {
                        alt444=1;
                    }
                    switch (alt444) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1498:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611056); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611058);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1499:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt443=2;
                            int LA443_0 = input.LA(1);

                            if ( (LA443_0==DELIMITER2) ) {
                                alt443=1;
                            }
                            switch (alt443) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1499:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611067); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611069);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1500:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt442=2;
                                    int LA442_0 = input.LA(1);

                                    if ( (LA442_0==DELIMITER2) ) {
                                        alt442=1;
                                    }
                                    switch (alt442) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1500:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611079); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611081);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt441=2;
                                            int LA441_0 = input.LA(1);

                                            if ( (LA441_0==DELIMITER2) ) {
                                                alt441=1;
                                            }
                                            switch (alt441) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1501:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611092); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611094);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_6"


    public static class spec_sized_mult_lvl1_st_optionnal_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1505:1: spec_sized_mult_lvl1_st_optionnal_8[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return spec_sized_mult_lvl1_st_optionnal_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1507:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1508:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811127);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1509:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==DELIMITER2) ) {
                alt452=1;
            }
            switch (alt452) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1509:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811133); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811135);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1510:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    int alt451=2;
                    int LA451_0 = input.LA(1);

                    if ( (LA451_0==DELIMITER2) ) {
                        alt451=1;
                    }
                    switch (alt451) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1510:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811142); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811144);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1511:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            int alt450=2;
                            int LA450_0 = input.LA(1);

                            if ( (LA450_0==DELIMITER2) ) {
                                alt450=1;
                            }
                            switch (alt450) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1511:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811152); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811154);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1512:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    int alt449=2;
                                    int LA449_0 = input.LA(1);

                                    if ( (LA449_0==DELIMITER2) ) {
                                        alt449=1;
                                    }
                                    switch (alt449) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1512:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811163); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811165);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1513:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            int alt448=2;
                                            int LA448_0 = input.LA(1);

                                            if ( (LA448_0==DELIMITER2) ) {
                                                alt448=1;
                                            }
                                            switch (alt448) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1513:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811175); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811177);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1514:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    int alt447=2;
                                                    int LA447_0 = input.LA(1);

                                                    if ( (LA447_0==DELIMITER2) ) {
                                                        alt447=1;
                                                    }
                                                    switch (alt447) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1514:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            {
                                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811188); 

                                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811190);
                                                            st_non_sized_optionnal(nameElement + ".7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1515:9: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            int alt446=2;
                                                            int LA446_0 = input.LA(1);

                                                            if ( (LA446_0==DELIMITER2) ) {
                                                                alt446=1;
                                                            }
                                                            switch (alt446) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1515:10: DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"]
                                                                    {
                                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811202); 

                                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811204);
                                                                    st_non_sized_optionnal(nameElement + ".8");

                                                                    state._fsp--;


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_8"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1519:1: spec_sized_mult_lvl2_st_optionnal_3[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1521:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1522:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311241);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1523:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==DELIMITER3) ) {
                alt454=1;
            }
            switch (alt454) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1523:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311247); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311249);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1524:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt453=2;
                    int LA453_0 = input.LA(1);

                    if ( (LA453_0==DELIMITER3) ) {
                        alt453=1;
                    }
                    switch (alt453) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1524:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311256); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311258);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_3"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1526:1: spec_sized_mult_lvl2_st_optionnal_6[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_6(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1528:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1529:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611281);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1530:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( (LA459_0==DELIMITER3) ) {
                alt459=1;
            }
            switch (alt459) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1530:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611287); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611289);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1531:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt458=2;
                    int LA458_0 = input.LA(1);

                    if ( (LA458_0==DELIMITER3) ) {
                        alt458=1;
                    }
                    switch (alt458) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1531:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611296); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611298);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1532:5: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt457=2;
                            int LA457_0 = input.LA(1);

                            if ( (LA457_0==DELIMITER3) ) {
                                alt457=1;
                            }
                            switch (alt457) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1532:6: DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611306); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611308);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1533:6: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt456=2;
                                    int LA456_0 = input.LA(1);

                                    if ( (LA456_0==DELIMITER3) ) {
                                        alt456=1;
                                    }
                                    switch (alt456) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1533:7: DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611317); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611319);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1534:7: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt455=2;
                                            int LA455_0 = input.LA(1);

                                            if ( (LA455_0==DELIMITER3) ) {
                                                alt455=1;
                                            }
                                            switch (alt455) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1534:8: DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611329); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611331);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_6"


    public static class spec_sized_mult_lvl1_nm_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1536:1: spec_sized_mult_lvl1_nm_optionnal_2[String nameElement, int maxSize] : nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return spec_sized_mult_lvl1_nm_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1538:22: ( nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1539:3: nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211360);
            nm_nonsized_optionnal(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211365); 

            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211367);
            nm_nonsized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_optionnal_2"


    public static class spec_sized_mult_lvl1_nm_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1543:1: spec_sized_mult_lvl1_nm_mandatory_2[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return spec_sized_mult_lvl1_nm_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1545:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1546:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211392);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211397); 

            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211399);
            nm_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_mandatory_2"


    public static class spec_sized_cna_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_cna"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1550:1: spec_sized_cna[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_cna_return spec_sized_cna(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_cna_return retval = new HPRIMSParser.spec_sized_cna_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1552:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1553:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11422);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1554:4: ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==DELIMITER2) ) {
                alt461=1;
            }
            switch (alt461) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1554:5: DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11429); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11431);
                    spec_sized_mult_lvl2_st_optionnal_6(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1555:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt460=2;
                    int LA460_0 = input.LA(1);

                    if ( (LA460_0==DELIMITER2) ) {
                        alt460=1;
                    }
                    switch (alt460) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1555:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna11439); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11441);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_cna"


    public static class spec_sized_8_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1563:1: spec_sized_8_3[String nameElement, int maxSize] : ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_8_3_return spec_sized_8_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_8_3_return retval = new HPRIMSParser.spec_sized_8_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1565:22: ( ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1566:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1566:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( ((LA463_0 >= CHARA && LA463_0 <= CHIFFRE9)||(LA463_0 >= LETTRE && LA463_0 <= POINT)) ) {
                alt463=1;
            }
            switch (alt463) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1566:4: st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    pushFollow(FOLLOW_st_sized_mandatory_in_spec_sized_8_311473);
                    st_sized_mandatory(nameElement + ".1", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1567:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt462=2;
                    int LA462_0 = input.LA(1);

                    if ( (LA462_0==DELIMITER2) ) {
                        alt462=1;
                    }
                    switch (alt462) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1567:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311480); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311482);
                            st_non_sized_optionnal(nameElement + ".2");

                            state._fsp--;


                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_311490); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311492);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_8_3"


    public static class spec_sized_9_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1579:1: spec_sized_9_3[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? ;
    public final HPRIMSParser.spec_sized_9_3_return spec_sized_9_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_3_return retval = new HPRIMSParser.spec_sized_9_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1581:22: ( st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1583:3: st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311532);
            st_sized_optionnal(nameElement + ".1", 12);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1584:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            int alt464=2;
            int LA464_0 = input.LA(1);

            if ( (LA464_0==DELIMITER2) ) {
                alt464=1;
            }
            switch (alt464) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1584:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_311538); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_311540);
                    st_sized_optionnal(nameElement + ".2", 10);

                    state._fsp--;


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_3"



    // $ANTLR start "spec_non_sized_9_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1587:1: spec_non_sized_9_8[String nameElement] : ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? ;
    public final void spec_non_sized_9_8(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1589:22: ( ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1590:3: ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            {
            pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811565);
            ts_sized_optionnal(nameElement + ".1", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1591:4: ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( (LA465_0==REPETITEUR) ) {
                alt465=1;
            }
            switch (alt465) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1591:5: REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_non_sized_9_811572); 

                    pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811574);
                    ts_sized_optionnal(nameElement + ".2", 26);

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_non_sized_9_8"


    public static class spec_sized_9_16_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_16"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1593:1: spec_sized_9_16[String nameElement, int maxSize] : spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_9_16_return spec_sized_9_16(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_16_return retval = new HPRIMSParser.spec_sized_9_16_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1595:22: ( spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1596:3: spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1611595);
            spec_sized_mult_lvl2_st_optionnal_3(nameElement + ".2");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1597:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt467=2;
            int LA467_0 = input.LA(1);

            if ( (LA467_0==DELIMITER2) ) {
                alt467=1;
            }
            switch (alt467) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1597:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1611601); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611603);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1598:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt466=2;
                    int LA466_0 = input.LA(1);

                    if ( (LA466_0==DELIMITER2) ) {
                        alt466=1;
                    }
                    switch (alt466) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1598:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_1611610); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611612);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_16"


    public static class spec_sized_10_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1601:1: spec_sized_10_4[String nameElement, int maxsize] : st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_10_4_return spec_sized_10_4(String nameElement, int maxsize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_4_return retval = new HPRIMSParser.spec_sized_10_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1603:22: ( st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1604:3: st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_10_411639);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1605:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt472=2;
            int LA472_0 = input.LA(1);

            if ( (LA472_0==DELIMITER2) ) {
                alt472=1;
            }
            switch (alt472) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1605:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411645); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411647);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1606:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt471=2;
                    int LA471_0 = input.LA(1);

                    if ( (LA471_0==DELIMITER2) ) {
                        alt471=1;
                    }
                    switch (alt471) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1606:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411654); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411656);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1607:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt470=2;
                            int LA470_0 = input.LA(1);

                            if ( (LA470_0==DELIMITER2) ) {
                                alt470=1;
                            }
                            switch (alt470) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1607:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411664); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411666);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1608:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt469=2;
                                    int LA469_0 = input.LA(1);

                                    if ( (LA469_0==DELIMITER2) ) {
                                        alt469=1;
                                    }
                                    switch (alt469) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1608:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411675); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411677);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1609:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt468=2;
                                            int LA468_0 = input.LA(1);

                                            if ( (LA468_0==DELIMITER2) ) {
                                                alt468=1;
                                            }
                                            switch (alt468) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1609:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_411687); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411689);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxsize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_4"



    // $ANTLR start "spec_sized_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1612:1: spec_sized_10_6_tx[String nameElement, int maxSize] : (g= final_spec_10_6_tx )? ;
    public final void spec_sized_10_6_tx(String nameElement, int maxSize) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1617:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1618:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1618:4: (g= final_spec_10_6_tx )?
            int alt473=2;
            int LA473_0 = input.LA(1);

            if ( ((LA473_0 >= CHARA && LA473_0 <= CHIFFRE9)||LA473_0==DELIMITER2||(LA473_0 >= LETTRE && LA473_0 <= POINT)) ) {
                alt473=1;
            }
            switch (alt473) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1618:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx11724);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            if (g != null)
                matchRegex(g, "^.{0," + maxSize + "}$", retval.start);

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_10_6_tx"



    // $ANTLR start "spec_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1622:1: spec_tx[String nameElement] : (g= final_spec_10_6_tx )? ;
    public final void spec_tx(String nameElement) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1627:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1628:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1628:4: (g= final_spec_10_6_tx )?
            int alt474=2;
            int LA474_0 = input.LA(1);

            if ( ((LA474_0 >= CHARA && LA474_0 <= CHIFFRE9)||LA474_0==DELIMITER2||(LA474_0 >= LETTRE && LA474_0 <= POINT)) ) {
                alt474=1;
            }
            switch (alt474) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1628:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_tx11749);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_tx"


    public static class spec_sized_tn_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_tn"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1630:1: spec_sized_tn[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_tn_return spec_sized_tn(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_tn_return retval = new HPRIMSParser.spec_sized_tn_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1632:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1633:2: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11767);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1634:3: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt475=2;
            int LA475_0 = input.LA(1);

            if ( (LA475_0==REPETITEUR) ) {
                alt475=1;
            }
            switch (alt475) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1634:4: REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_sized_tn11773); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11775);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_tn"


    public static class st_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1640:1: st_sized_optionnal[String nameElement, int maxSize] : ( final_st )? ;
    public final HPRIMSParser.st_sized_optionnal_return st_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_optionnal_return retval = new HPRIMSParser.st_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1642:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1643:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1643:3: ( final_st )?
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( ((LA476_0 >= CHARA && LA476_0 <= CHIFFRE9)||(LA476_0 >= LETTRE && LA476_0 <= POINT)) ) {
                alt476=1;
            }
            switch (alt476) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1643:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_sized_optionnal11803);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_optionnal"


    public static class st_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1647:1: st_sized_mandatory[String nameElement, int maxSize] : final_st ;
    public final HPRIMSParser.st_sized_mandatory_return st_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_mandatory_return retval = new HPRIMSParser.st_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1649:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1650:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_sized_mandatory11826);
            final_st();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_mandatory"



    // $ANTLR start "st_non_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1653:1: st_non_sized_optionnal[String nameElement] : ( final_st )? ;
    public final void st_non_sized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1655:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1656:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1656:3: ( final_st )?
            int alt477=2;
            int LA477_0 = input.LA(1);

            if ( ((LA477_0 >= CHARA && LA477_0 <= CHIFFRE9)||(LA477_0 >= LETTRE && LA477_0 <= POINT)) ) {
                alt477=1;
            }
            switch (alt477) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1656:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_non_sized_optionnal11848);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_non_sized_optionnal"



    // $ANTLR start "st_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1658:1: st_nonsized_mandatory[String nameElement] : final_st ;
    public final void st_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1660:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1661:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_nonsized_mandatory11867);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_nonsized_mandatory"


    public static class nm_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1663:1: nm_sized_optionnal[String nameElement, int maxSize] : ( final_nm )? ;
    public final HPRIMSParser.nm_sized_optionnal_return nm_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_optionnal_return retval = new HPRIMSParser.nm_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1665:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1666:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1666:3: ( final_nm )?
            int alt478=2;
            int LA478_0 = input.LA(1);

            if ( ((LA478_0 >= CHIFFRE0 && LA478_0 <= CHIFFRE9)||(LA478_0 >= MOINS && LA478_0 <= POINT)) ) {
                alt478=1;
            }
            switch (alt478) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1666:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_sized_optionnal11885);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_optionnal"


    public static class nm_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1670:1: nm_sized_mandatory[String nameElement, int maxSize] : final_nm ;
    public final HPRIMSParser.nm_sized_mandatory_return nm_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_mandatory_return retval = new HPRIMSParser.nm_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1672:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1673:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_sized_mandatory11908);
            final_nm();

            state._fsp--;


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_mandatory"


    public static class nm_integer_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1677:1: nm_integer_sized_optionnal[String nameElement, int maxSize] : ( final_nm_integer )? ;
    public final HPRIMSParser.nm_integer_sized_optionnal_return nm_integer_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_optionnal_return retval = new HPRIMSParser.nm_integer_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1679:22: ( ( final_nm_integer )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1680:3: ( final_nm_integer )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1680:3: ( final_nm_integer )?
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( ((LA479_0 >= CHIFFRE0 && LA479_0 <= CHIFFRE9)) ) {
                alt479=1;
            }
            switch (alt479) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1680:3: final_nm_integer
                    {
                    pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal11930);
                    final_nm_integer();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_optionnal"


    public static class nm_integer_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1684:1: nm_integer_sized_mandatory[String nameElement, int maxSize] : final_nm_integer ;
    public final HPRIMSParser.nm_integer_sized_mandatory_return nm_integer_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_mandatory_return retval = new HPRIMSParser.nm_integer_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1686:22: ( final_nm_integer )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1687:3: final_nm_integer
            {
            pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory11958);
            final_nm_integer();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_mandatory"


    public static class ts_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1691:1: ts_sized_optionnal[String nameElement, int maxSize] : ( final_ts )? ;
    public final HPRIMSParser.ts_sized_optionnal_return ts_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_optionnal_return retval = new HPRIMSParser.ts_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1693:22: ( ( final_ts )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1694:3: ( final_ts )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1694:3: ( final_ts )?
            int alt480=2;
            int LA480_0 = input.LA(1);

            if ( ((LA480_0 >= CHIFFRE0 && LA480_0 <= CHIFFRE9)) ) {
                alt480=1;
            }
            switch (alt480) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1694:3: final_ts
                    {
                    pushFollow(FOLLOW_final_ts_in_ts_sized_optionnal11981);
                    final_ts();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_optionnal"


    public static class ts_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1698:1: ts_sized_mandatory[String nameElement, int maxSize] : final_ts ;
    public final HPRIMSParser.ts_sized_mandatory_return ts_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_mandatory_return retval = new HPRIMSParser.ts_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1700:22: ( final_ts )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1701:3: final_ts
            {
            pushFollow(FOLLOW_final_ts_in_ts_sized_mandatory12004);
            final_ts();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_mandatory"



    // $ANTLR start "nm_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1704:1: nm_nonsized_mandatory[String nameElement] : final_nm ;
    public final void nm_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1706:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1707:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_nonsized_mandatory12026);
            final_nm();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_mandatory"



    // $ANTLR start "nm_nonsized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1709:1: nm_nonsized_optionnal[String nameElement] : ( final_nm )? ;
    public final void nm_nonsized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1711:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:3: ( final_nm )?
            int alt481=2;
            int LA481_0 = input.LA(1);

            if ( ((LA481_0 >= CHIFFRE0 && LA481_0 <= CHIFFRE9)||(LA481_0 >= MOINS && LA481_0 <= POINT)) ) {
                alt481=1;
            }
            switch (alt481) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1712:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_nonsized_optionnal12044);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_optionnal"



    // $ANTLR start "spec_const_7_13_1_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1714:1: spec_const_7_13_1_version_2_0[String nameElement] : final_version_2_0 ;
    public final void spec_const_7_13_1_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1716:22: ( final_version_2_0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1717:3: final_version_2_0
            {
            pushFollow(FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_012063);
            final_version_2_0();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_0"



    // $ANTLR start "spec_const_7_13_1_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1719:1: spec_const_7_13_1_version_2_1[String nameElement] : final_version_2_1 ;
    public final void spec_const_7_13_1_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1721:22: ( final_version_2_1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1722:3: final_version_2_1
            {
            pushFollow(FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_112081);
            final_version_2_1();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_1"



    // $ANTLR start "spec_const_7_13_1_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1724:1: spec_const_7_13_1_version_2_2[String nameElement] : final_version_2_2 ;
    public final void spec_const_7_13_1_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1726:22: ( final_version_2_2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1727:3: final_version_2_2
            {
            pushFollow(FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_212101);
            final_version_2_2();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_2"



    // $ANTLR start "final_spec_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:1: final_spec_10_6_tx returns [String consoText] : g= content_spec_10_6 ;
    public final String final_spec_10_6_tx() throws RecognitionException {
        String consoText = null;


        String g =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1731:46: (g= content_spec_10_6 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1732:3: g= content_spec_10_6
            {
            pushFollow(FOLLOW_content_spec_10_6_in_final_spec_10_6_tx12118);
            g=content_spec_10_6();

            state._fsp--;


            content(g);
               consoText = g;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "final_spec_10_6_tx"



    // $ANTLR start "content_spec_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1736:1: content_spec_10_6 returns [String consoText] : (r= character | DELIMITER2 ) (p= content_spec_10_6 )? ;
    public final String content_spec_10_6() throws RecognitionException {
        String consoText = null;


        HPRIMSParser.character_return r =null;

        String p =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1736:45: ( (r= character | DELIMITER2 ) (p= content_spec_10_6 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:3: (r= character | DELIMITER2 ) (p= content_spec_10_6 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:3: (r= character | DELIMITER2 )
            int alt482=2;
            int LA482_0 = input.LA(1);

            if ( ((LA482_0 >= CHARA && LA482_0 <= CHIFFRE9)||(LA482_0 >= LETTRE && LA482_0 <= POINT)) ) {
                alt482=1;
            }
            else if ( (LA482_0==DELIMITER2) ) {
                alt482=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 482, 0, input);

                throw nvae;

            }
            switch (alt482) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:4: r= character
                    {
                    pushFollow(FOLLOW_character_in_content_spec_10_612140);
                    r=character();

                    state._fsp--;


                    consoText = (r!=null?input.toString(r.start,r.stop):null);

                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1737:42: DELIMITER2
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_content_spec_10_612146); 

                    consoText = "\n";

                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1738:6: (p= content_spec_10_6 )?
            int alt483=2;
            int LA483_0 = input.LA(1);

            if ( ((LA483_0 >= CHARA && LA483_0 <= CHIFFRE9)||LA483_0==DELIMITER2||(LA483_0 >= LETTRE && LA483_0 <= POINT)) ) {
                alt483=1;
            }
            switch (alt483) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1738:6: p= content_spec_10_6
                    {
                    pushFollow(FOLLOW_content_spec_10_6_in_content_spec_10_612157);
                    p=content_spec_10_6();

                    state._fsp--;


                    }
                    break;

            }


            if (p != null) { consoText += p; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "content_spec_10_6"


    public static class final_ts_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ts"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1740:1: final_ts : chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? ;
    public final HPRIMSParser.final_ts_return final_ts() throws RecognitionException {
        HPRIMSParser.final_ts_return retval = new HPRIMSParser.final_ts_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1740:9: ( chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1741:3: chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            {
            pushFollow(FOLLOW_chiffre_in_final_ts12169);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12171);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12175);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12177);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12179);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts12183);
            chiffre();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1743:11: ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            int alt486=2;
            int LA486_0 = input.LA(1);

            if ( ((LA486_0 >= CHIFFRE0 && LA486_0 <= CHIFFRE9)) ) {
                alt486=1;
            }
            switch (alt486) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1743:12: chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    {
                    pushFollow(FOLLOW_chiffre_in_final_ts12186);
                    chiffre();

                    state._fsp--;


                    pushFollow(FOLLOW_chiffre_in_final_ts12188);
                    chiffre();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1744:3: ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    int alt485=2;
                    int LA485_0 = input.LA(1);

                    if ( ((LA485_0 >= CHIFFRE0 && LA485_0 <= CHIFFRE9)) ) {
                        alt485=1;
                    }
                    switch (alt485) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1744:4: chiffre chiffre chiffre chiffre ( chiffre chiffre )?
                            {
                            pushFollow(FOLLOW_chiffre_in_final_ts12193);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12195);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12197);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts12201);
                            chiffre();

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1745:11: ( chiffre chiffre )?
                            int alt484=2;
                            int LA484_0 = input.LA(1);

                            if ( ((LA484_0 >= CHIFFRE0 && LA484_0 <= CHIFFRE9)) ) {
                                alt484=1;
                            }
                            switch (alt484) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1745:12: chiffre chiffre
                                    {
                                    pushFollow(FOLLOW_chiffre_in_final_ts12204);
                                    chiffre();

                                    state._fsp--;


                                    pushFollow(FOLLOW_chiffre_in_final_ts12206);
                                    chiffre();

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ts"


    public static class final_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1748:1: final_st : ( character )+ ;
    public final HPRIMSParser.final_st_return final_st() throws RecognitionException {
        HPRIMSParser.final_st_return retval = new HPRIMSParser.final_st_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1748:9: ( ( character )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1749:3: ( character )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1749:3: ( character )+
            int cnt487=0;
            loop487:
            do {
                int alt487=2;
                int LA487_0 = input.LA(1);

                if ( ((LA487_0 >= CHARA && LA487_0 <= CHIFFRE9)||(LA487_0 >= LETTRE && LA487_0 <= POINT)) ) {
                    alt487=1;
                }


                switch (alt487) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1749:3: character
            	    {
            	    pushFollow(FOLLOW_character_in_final_st12225);
            	    character();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt487 >= 1 ) break loop487;
                        EarlyExitException eee =
                            new EarlyExitException(487, input);
                        throw eee;
                }
                cnt487++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_st"


    public static class final_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1752:1: final_nm : ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) ;
    public final HPRIMSParser.final_nm_return final_nm() throws RecognitionException {
        HPRIMSParser.final_nm_return retval = new HPRIMSParser.final_nm_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1752:9: ( ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:4: ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1753:4: ( PLUS | MOINS )?
            int alt488=2;
            int LA488_0 = input.LA(1);

            if ( ((LA488_0 >= MOINS && LA488_0 <= PLUS)) ) {
                alt488=1;
            }
            switch (alt488) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
                    {
                    if ( (input.LA(1) >= MOINS && input.LA(1) <= PLUS) ) {
                        input.consume();
                        state.errorRecovery=false;
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:3: ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            int alt493=2;
            int LA493_0 = input.LA(1);

            if ( ((LA493_0 >= CHIFFRE0 && LA493_0 <= CHIFFRE9)) ) {
                alt493=1;
            }
            else if ( (LA493_0==POINT) ) {
                alt493=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 493, 0, input);

                throw nvae;

            }
            switch (alt493) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:5: ( chiffre )+ ( POINT ( chiffre )* )?
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:5: ( chiffre )+
                    int cnt489=0;
                    loop489:
                    do {
                        int alt489=2;
                        int LA489_0 = input.LA(1);

                        if ( ((LA489_0 >= CHIFFRE0 && LA489_0 <= CHIFFRE9)) ) {
                            alt489=1;
                        }


                        switch (alt489) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:5: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm12254);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt489 >= 1 ) break loop489;
                                EarlyExitException eee =
                                    new EarlyExitException(489, input);
                                throw eee;
                        }
                        cnt489++;
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:14: ( POINT ( chiffre )* )?
                    int alt491=2;
                    int LA491_0 = input.LA(1);

                    if ( (LA491_0==POINT) ) {
                        alt491=1;
                    }
                    switch (alt491) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:15: POINT ( chiffre )*
                            {
                            match(input,POINT,FOLLOW_POINT_in_final_nm12258); 

                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:21: ( chiffre )*
                            loop490:
                            do {
                                int alt490=2;
                                int LA490_0 = input.LA(1);

                                if ( ((LA490_0 >= CHIFFRE0 && LA490_0 <= CHIFFRE9)) ) {
                                    alt490=1;
                                }


                                switch (alt490) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1754:21: chiffre
                            	    {
                            	    pushFollow(FOLLOW_chiffre_in_final_nm12260);
                            	    chiffre();

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop490;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1755:4: ( POINT ( chiffre )+ )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1755:4: ( POINT ( chiffre )+ )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1755:5: POINT ( chiffre )+
                    {
                    match(input,POINT,FOLLOW_POINT_in_final_nm12270); 

                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1755:11: ( chiffre )+
                    int cnt492=0;
                    loop492:
                    do {
                        int alt492=2;
                        int LA492_0 = input.LA(1);

                        if ( ((LA492_0 >= CHIFFRE0 && LA492_0 <= CHIFFRE9)) ) {
                            alt492=1;
                        }


                        switch (alt492) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1755:11: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm12272);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt492 >= 1 ) break loop492;
                                EarlyExitException eee =
                                    new EarlyExitException(492, input);
                                throw eee;
                        }
                        cnt492++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm"


    public static class final_nm_integer_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm_integer"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:1: final_nm_integer : ( chiffre )+ ;
    public final HPRIMSParser.final_nm_integer_return final_nm_integer() throws RecognitionException {
        HPRIMSParser.final_nm_integer_return retval = new HPRIMSParser.final_nm_integer_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1758:17: ( ( chiffre )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: ( chiffre )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: ( chiffre )+
            int cnt494=0;
            loop494:
            do {
                int alt494=2;
                int LA494_0 = input.LA(1);

                if ( ((LA494_0 >= CHIFFRE0 && LA494_0 <= CHIFFRE9)) ) {
                    alt494=1;
                }


                switch (alt494) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1759:3: chiffre
            	    {
            	    pushFollow(FOLLOW_chiffre_in_final_nm_integer12289);
            	    chiffre();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt494 >= 1 ) break loop494;
                        EarlyExitException eee =
                            new EarlyExitException(494, input);
                        throw eee;
                }
                cnt494++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm_integer"


    public static class final_ADM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1762:1: final_ADM : CHARA CHARD CHARM ;
    public final HPRIMSParser.final_ADM_return final_ADM() throws RecognitionException {
        HPRIMSParser.final_ADM_return retval = new HPRIMSParser.final_ADM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1762:10: ( CHARA CHARD CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1762:12: CHARA CHARD CHARM
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_ADM12301); 

            match(input,CHARD,FOLLOW_CHARD_in_final_ADM12303); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ADM12305); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ADM"


    public static class final_ORA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:1: final_ORA : CHARO CHARR CHARA ;
    public final HPRIMSParser.final_ORA_return final_ORA() throws RecognitionException {
        HPRIMSParser.final_ORA_return retval = new HPRIMSParser.final_ORA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:10: ( CHARO CHARR CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1763:12: CHARO CHARR CHARA
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORA12313); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORA12315); 

            match(input,CHARA,FOLLOW_CHARA_in_final_ORA12317); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORA"


    public static class final_ORU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:1: final_ORU : CHARO CHARR CHARU ;
    public final HPRIMSParser.final_ORU_return final_ORU() throws RecognitionException {
        HPRIMSParser.final_ORU_return retval = new HPRIMSParser.final_ORU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:10: ( CHARO CHARR CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1764:12: CHARO CHARR CHARU
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORU12325); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORU12327); 

            match(input,CHARU,FOLLOW_CHARU_in_final_ORU12329); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORU"


    public static class final_ORM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1765:1: final_ORM : CHARO CHARR CHARM ;
    public final HPRIMSParser.final_ORM_return final_ORM() throws RecognitionException {
        HPRIMSParser.final_ORM_return retval = new HPRIMSParser.final_ORM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1765:10: ( CHARO CHARR CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1765:12: CHARO CHARR CHARM
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORM12337); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORM12339); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ORM12341); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORM"


    public static class final_FAC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1766:1: final_FAC : CHARF CHARA CHARC ;
    public final HPRIMSParser.final_FAC_return final_FAC() throws RecognitionException {
        HPRIMSParser.final_FAC_return retval = new HPRIMSParser.final_FAC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1766:10: ( CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1766:12: CHARF CHARA CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FAC12349); 

            match(input,CHARA,FOLLOW_CHARA_in_final_FAC12351); 

            match(input,CHARC,FOLLOW_CHARC_in_final_FAC12353); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FAC"


    public static class final_REG_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_REG"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:1: final_REG : CHARR CHARE CHARG ;
    public final HPRIMSParser.final_REG_return final_REG() throws RecognitionException {
        HPRIMSParser.final_REG_return retval = new HPRIMSParser.final_REG_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:10: ( CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1767:12: CHARR CHARE CHARG
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_REG12361); 

            match(input,CHARE,FOLLOW_CHARE_in_final_REG12363); 

            match(input,CHARG,FOLLOW_CHARG_in_final_REG12365); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_REG"


    public static class final_CART_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_CART"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:1: final_CART : CHARC CHARA CHARR CHART ;
    public final HPRIMSParser.final_CART_return final_CART() throws RecognitionException {
        HPRIMSParser.final_CART_return retval = new HPRIMSParser.final_CART_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:11: ( CHARC CHARA CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1769:13: CHARC CHARA CHARR CHART
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_CART12374); 

            match(input,CHARA,FOLLOW_CHARA_in_final_CART12376); 

            match(input,CHARR,FOLLOW_CHARR_in_final_CART12378); 

            match(input,CHART,FOLLOW_CHART_in_final_CART12380); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_CART"


    public static class final_PORT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PORT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:1: final_PORT : CHARP CHARO CHARR CHART ;
    public final HPRIMSParser.final_PORT_return final_PORT() throws RecognitionException {
        HPRIMSParser.final_PORT_return retval = new HPRIMSParser.final_PORT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:11: ( CHARP CHARO CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1770:13: CHARP CHARO CHARR CHART
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PORT12388); 

            match(input,CHARO,FOLLOW_CHARO_in_final_PORT12390); 

            match(input,CHARR,FOLLOW_CHARR_in_final_PORT12392); 

            match(input,CHART,FOLLOW_CHART_in_final_PORT12394); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PORT"


    public static class final_WHLC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WHLC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:1: final_WHLC : CHARW CHARH CHARL CHARC ;
    public final HPRIMSParser.final_WHLC_return final_WHLC() throws RecognitionException {
        HPRIMSParser.final_WHLC_return retval = new HPRIMSParser.final_WHLC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:11: ( CHARW CHARH CHARL CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1771:13: CHARW CHARH CHARL CHARC
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WHLC12402); 

            match(input,CHARH,FOLLOW_CHARH_in_final_WHLC12404); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WHLC12406); 

            match(input,CHARC,FOLLOW_CHARC_in_final_WHLC12408); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WHLC"


    public static class final_WALK_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WALK"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:1: final_WALK : CHARW CHARA CHARL CHARK ;
    public final HPRIMSParser.final_WALK_return final_WALK() throws RecognitionException {
        HPRIMSParser.final_WALK_return retval = new HPRIMSParser.final_WALK_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:11: ( CHARW CHARA CHARL CHARK )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1772:13: CHARW CHARA CHARL CHARK
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WALK12416); 

            match(input,CHARA,FOLLOW_CHARA_in_final_WALK12418); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WALK12420); 

            match(input,CHARK,FOLLOW_CHARK_in_final_WALK12422); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WALK"


    public static class final_LL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_LL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:1: final_LL : CHARL CHARL ;
    public final HPRIMSParser.final_LL_return final_LL() throws RecognitionException {
        HPRIMSParser.final_LL_return retval = new HPRIMSParser.final_LL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:9: ( CHARL CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1774:11: CHARL CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_LL12431); 

            match(input,CHARL,FOLLOW_CHARL_in_final_LL12433); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_LL"


    public static class final_AA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_AA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:1: final_AA : CHARA CHARA ;
    public final HPRIMSParser.final_AA_return final_AA() throws RecognitionException {
        HPRIMSParser.final_AA_return retval = new HPRIMSParser.final_AA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:9: ( CHARA CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1775:11: CHARA CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_AA12441); 

            match(input,CHARA,FOLLOW_CHARA_in_final_AA12443); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_AA"


    public static class final_HH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:1: final_HH : CHARH CHARH ;
    public final HPRIMSParser.final_HH_return final_HH() throws RecognitionException {
        HPRIMSParser.final_HH_return retval = new HPRIMSParser.final_HH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:9: ( CHARH CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1776:11: CHARH CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HH12451); 

            match(input,CHARH,FOLLOW_CHARH_in_final_HH12453); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HH"


    public static class final_MS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:1: final_MS : CHARM CHARS ;
    public final HPRIMSParser.final_MS_return final_MS() throws RecognitionException {
        HPRIMSParser.final_MS_return retval = new HPRIMSParser.final_MS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:9: ( CHARM CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1777:11: CHARM CHARS
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MS12461); 

            match(input,CHARS,FOLLOW_CHARS_in_final_MS12463); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MS"


    public static class final_VS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_VS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1778:1: final_VS : CHARV CHARS ;
    public final HPRIMSParser.final_VS_return final_VS() throws RecognitionException {
        HPRIMSParser.final_VS_return retval = new HPRIMSParser.final_VS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1778:9: ( CHARV CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1778:11: CHARV CHARS
            {
            match(input,CHARV,FOLLOW_CHARV_in_final_VS12471); 

            match(input,CHARS,FOLLOW_CHARS_in_final_VS12473); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_VS"


    public static class final_Null_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_Null"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:1: final_Null : CHARN CHARu CHARl CHARl ;
    public final HPRIMSParser.final_Null_return final_Null() throws RecognitionException {
        HPRIMSParser.final_Null_return retval = new HPRIMSParser.final_Null_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:11: ( CHARN CHARu CHARl CHARl )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1779:13: CHARN CHARu CHARl CHARl
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_Null12481); 

            match(input,CHARu,FOLLOW_CHARu_in_final_Null12483); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12485); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null12487); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_Null"


    public static class final_symbol_inf_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_inf"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:1: final_symbol_inf : CHAR_SYMBOL_INF ;
    public final HPRIMSParser.final_symbol_inf_return final_symbol_inf() throws RecognitionException {
        HPRIMSParser.final_symbol_inf_return retval = new HPRIMSParser.final_symbol_inf_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:17: ( CHAR_SYMBOL_INF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1780:19: CHAR_SYMBOL_INF
            {
            match(input,CHAR_SYMBOL_INF,FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12495); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_inf"


    public static class final_symbol_sup_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_sup"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:1: final_symbol_sup : CHAR_SYMBOL_SUP ;
    public final HPRIMSParser.final_symbol_sup_return final_symbol_sup() throws RecognitionException {
        HPRIMSParser.final_symbol_sup_return retval = new HPRIMSParser.final_symbol_sup_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:17: ( CHAR_SYMBOL_SUP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1781:19: CHAR_SYMBOL_SUP
            {
            match(input,CHAR_SYMBOL_SUP,FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12503); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_sup"


    public static class final_symbol_plus_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_plus"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:1: final_symbol_plus : PLUS ;
    public final HPRIMSParser.final_symbol_plus_return final_symbol_plus() throws RecognitionException {
        HPRIMSParser.final_symbol_plus_return retval = new HPRIMSParser.final_symbol_plus_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:18: ( PLUS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1782:20: PLUS
            {
            match(input,PLUS,FOLLOW_PLUS_in_final_symbol_plus12511); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_plus"


    public static class final_symbol_moins_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_moins"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:1: final_symbol_moins : MOINS ;
    public final HPRIMSParser.final_symbol_moins_return final_symbol_moins() throws RecognitionException {
        HPRIMSParser.final_symbol_moins_return retval = new HPRIMSParser.final_symbol_moins_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:19: ( MOINS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1783:21: MOINS
            {
            match(input,MOINS,FOLLOW_MOINS_in_final_symbol_moins12519); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_moins"


    public static class final_version_2_0_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:1: final_version_2_0 : CHARH CHIFFRE2 POINT CHIFFRE0 ;
    public final HPRIMSParser.final_version_2_0_return final_version_2_0() throws RecognitionException {
        HPRIMSParser.final_version_2_0_return retval = new HPRIMSParser.final_version_2_0_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:18: ( CHARH CHIFFRE2 POINT CHIFFRE0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1785:20: CHARH CHIFFRE2 POINT CHIFFRE0
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_012528); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_012530); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_012532); 

            match(input,CHIFFRE0,FOLLOW_CHIFFRE0_in_final_version_2_012534); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_0"


    public static class final_version_2_1_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:1: final_version_2_1 : CHARH CHIFFRE2 POINT CHIFFRE1 ;
    public final HPRIMSParser.final_version_2_1_return final_version_2_1() throws RecognitionException {
        HPRIMSParser.final_version_2_1_return retval = new HPRIMSParser.final_version_2_1_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:18: ( CHARH CHIFFRE2 POINT CHIFFRE1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1786:20: CHARH CHIFFRE2 POINT CHIFFRE1
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_112542); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_112544); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_112546); 

            match(input,CHIFFRE1,FOLLOW_CHIFFRE1_in_final_version_2_112548); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_1"


    public static class final_version_2_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:1: final_version_2_2 : CHARH CHIFFRE2 POINT CHIFFRE2 ;
    public final HPRIMSParser.final_version_2_2_return final_version_2_2() throws RecognitionException {
        HPRIMSParser.final_version_2_2_return retval = new HPRIMSParser.final_version_2_2_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:18: ( CHARH CHIFFRE2 POINT CHIFFRE2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1787:20: CHARH CHIFFRE2 POINT CHIFFRE2
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_212556); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212558); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_212560); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_212562); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_2"


    public static class final_OP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_OP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1789:1: final_OP : CHARO CHARP ;
    public final HPRIMSParser.final_OP_return final_OP() throws RecognitionException {
        HPRIMSParser.final_OP_return retval = new HPRIMSParser.final_OP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1789:9: ( CHARO CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1789:11: CHARO CHARP
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_OP12571); 

            match(input,CHARP,FOLLOW_CHARP_in_final_OP12573); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_OP"


    public static class final_IP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_IP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:1: final_IP : CHARI CHARP ;
    public final HPRIMSParser.final_IP_return final_IP() throws RecognitionException {
        HPRIMSParser.final_IP_return retval = new HPRIMSParser.final_IP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:9: ( CHARI CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1790:11: CHARI CHARP
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_IP12581); 

            match(input,CHARP,FOLLOW_CHARP_in_final_IP12583); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_IP"


    public static class final_ER_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ER"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:1: final_ER : CHARE CHARR ;
    public final HPRIMSParser.final_ER_return final_ER() throws RecognitionException {
        HPRIMSParser.final_ER_return retval = new HPRIMSParser.final_ER_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:9: ( CHARE CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1791:11: CHARE CHARR
            {
            match(input,CHARE,FOLLOW_CHARE_in_final_ER12591); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ER12593); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ER"


    public static class final_PA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:1: final_PA : CHARP CHARA ;
    public final HPRIMSParser.final_PA_return final_PA() throws RecognitionException {
        HPRIMSParser.final_PA_return retval = new HPRIMSParser.final_PA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:9: ( CHARP CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1792:11: CHARP CHARA
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PA12601); 

            match(input,CHARA,FOLLOW_CHARA_in_final_PA12603); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PA"


    public static class final_MP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1793:1: final_MP : CHARM CHARP ;
    public final HPRIMSParser.final_MP_return final_MP() throws RecognitionException {
        HPRIMSParser.final_MP_return retval = new HPRIMSParser.final_MP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1793:9: ( CHARM CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1793:11: CHARM CHARP
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MP12611); 

            match(input,CHARP,FOLLOW_CHARP_in_final_MP12613); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MP"


    public static class final_TM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:1: final_TM : CHART CHARM ;
    public final HPRIMSParser.final_TM_return final_TM() throws RecognitionException {
        HPRIMSParser.final_TM_return retval = new HPRIMSParser.final_TM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:9: ( CHART CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1794:11: CHART CHARM
            {
            match(input,CHART,FOLLOW_CHART_in_final_TM12621); 

            match(input,CHARM,FOLLOW_CHARM_in_final_TM12623); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TM"


    public static class final_TR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:1: final_TR : CHART CHARR ;
    public final HPRIMSParser.final_TR_return final_TR() throws RecognitionException {
        HPRIMSParser.final_TR_return retval = new HPRIMSParser.final_TR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:9: ( CHART CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1795:11: CHART CHARR
            {
            match(input,CHART,FOLLOW_CHART_in_final_TR12631); 

            match(input,CHARR,FOLLOW_CHARR_in_final_TR12633); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TR"


    public static class final_FR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:1: final_FR : CHARF CHARR ;
    public final HPRIMSParser.final_FR_return final_FR() throws RecognitionException {
        HPRIMSParser.final_FR_return retval = new HPRIMSParser.final_FR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:9: ( CHARF CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1796:11: CHARF CHARR
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FR12641); 

            match(input,CHARR,FOLLOW_CHARR_in_final_FR12643); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FR"


    public static class final_PF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:1: final_PF : CHARP CHARF ;
    public final HPRIMSParser.final_PF_return final_PF() throws RecognitionException {
        HPRIMSParser.final_PF_return retval = new HPRIMSParser.final_PF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:9: ( CHARP CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1797:11: CHARP CHARF
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PF12651); 

            match(input,CHARF,FOLLOW_CHARF_in_final_PF12653); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PF"


    public static class final_SS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_SS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:1: final_SS : CHARS CHARS ;
    public final HPRIMSParser.final_SS_return final_SS() throws RecognitionException {
        HPRIMSParser.final_SS_return retval = new HPRIMSParser.final_SS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:9: ( CHARS CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1798:11: CHARS CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_SS12661); 

            match(input,CHARS,FOLLOW_CHARS_in_final_SS12663); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_SS"


    public static class final_RX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_RX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:1: final_RX : CHARR CHARX ;
    public final HPRIMSParser.final_RX_return final_RX() throws RecognitionException {
        HPRIMSParser.final_RX_return retval = new HPRIMSParser.final_RX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:9: ( CHARR CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1799:11: CHARR CHARX
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_RX12671); 

            match(input,CHARX,FOLLOW_CHARX_in_final_RX12673); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_RX"


    public static class final_HR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:1: final_HR : CHARH CHARR ;
    public final HPRIMSParser.final_HR_return final_HR() throws RecognitionException {
        HPRIMSParser.final_HR_return retval = new HPRIMSParser.final_HR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:9: ( CHARH CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1800:11: CHARH CHARR
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HR12681); 

            match(input,CHARR,FOLLOW_CHARR_in_final_HR12683); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HR"


    public static class final_NS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_NS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:1: final_NS : CHARN CHARS ;
    public final HPRIMSParser.final_NS_return final_NS() throws RecognitionException {
        HPRIMSParser.final_NS_return retval = new HPRIMSParser.final_NS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:9: ( CHARN CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1801:11: CHARN CHARS
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_NS12691); 

            match(input,CHARS,FOLLOW_CHARS_in_final_NS12693); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_NS"


    public static class final_charA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:1: final_charA : CHARA ;
    public final HPRIMSParser.final_charA_return final_charA() throws RecognitionException {
        HPRIMSParser.final_charA_return retval = new HPRIMSParser.final_charA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:12: ( CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1803:14: CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_charA12702); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charA"


    public static class final_charB_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charB"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:1: final_charB : CHARB ;
    public final HPRIMSParser.final_charB_return final_charB() throws RecognitionException {
        HPRIMSParser.final_charB_return retval = new HPRIMSParser.final_charB_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:12: ( CHARB )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1804:14: CHARB
            {
            match(input,CHARB,FOLLOW_CHARB_in_final_charB12710); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charB"


    public static class final_charC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:1: final_charC : CHARC ;
    public final HPRIMSParser.final_charC_return final_charC() throws RecognitionException {
        HPRIMSParser.final_charC_return retval = new HPRIMSParser.final_charC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:12: ( CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1805:14: CHARC
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_charC12718); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charC"


    public static class final_charD_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charD"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:1: final_charD : CHARD ;
    public final HPRIMSParser.final_charD_return final_charD() throws RecognitionException {
        HPRIMSParser.final_charD_return retval = new HPRIMSParser.final_charD_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:12: ( CHARD )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1806:14: CHARD
            {
            match(input,CHARD,FOLLOW_CHARD_in_final_charD12726); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charD"


    public static class final_charF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1807:1: final_charF : CHARF ;
    public final HPRIMSParser.final_charF_return final_charF() throws RecognitionException {
        HPRIMSParser.final_charF_return retval = new HPRIMSParser.final_charF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1807:12: ( CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1807:14: CHARF
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_charF12734); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charF"


    public static class final_charH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:1: final_charH : CHARH ;
    public final HPRIMSParser.final_charH_return final_charH() throws RecognitionException {
        HPRIMSParser.final_charH_return retval = new HPRIMSParser.final_charH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:12: ( CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1808:14: CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_charH12742); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charH"


    public static class final_charI_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charI"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:1: final_charI : CHARI ;
    public final HPRIMSParser.final_charI_return final_charI() throws RecognitionException {
        HPRIMSParser.final_charI_return retval = new HPRIMSParser.final_charI_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:12: ( CHARI )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1809:14: CHARI
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_charI12750); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charI"


    public static class final_charL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:1: final_charL : CHARL ;
    public final HPRIMSParser.final_charL_return final_charL() throws RecognitionException {
        HPRIMSParser.final_charL_return retval = new HPRIMSParser.final_charL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:12: ( CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1810:14: CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_charL12758); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charL"


    public static class final_charM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:1: final_charM : CHARM ;
    public final HPRIMSParser.final_charM_return final_charM() throws RecognitionException {
        HPRIMSParser.final_charM_return retval = new HPRIMSParser.final_charM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:12: ( CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1811:14: CHARM
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_charM12766); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charM"


    public static class final_charN_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charN"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:1: final_charN : CHARN ;
    public final HPRIMSParser.final_charN_return final_charN() throws RecognitionException {
        HPRIMSParser.final_charN_return retval = new HPRIMSParser.final_charN_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:12: ( CHARN )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1812:14: CHARN
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_charN12774); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charN"


    public static class final_charO_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charO"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:1: final_charO : CHARO ;
    public final HPRIMSParser.final_charO_return final_charO() throws RecognitionException {
        HPRIMSParser.final_charO_return retval = new HPRIMSParser.final_charO_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:12: ( CHARO )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1813:14: CHARO
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_charO12782); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charO"


    public static class final_charP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:1: final_charP : CHARP ;
    public final HPRIMSParser.final_charP_return final_charP() throws RecognitionException {
        HPRIMSParser.final_charP_return retval = new HPRIMSParser.final_charP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:12: ( CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1814:14: CHARP
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_charP12790); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charP"


    public static class final_charR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:1: final_charR : CHARR ;
    public final HPRIMSParser.final_charR_return final_charR() throws RecognitionException {
        HPRIMSParser.final_charR_return retval = new HPRIMSParser.final_charR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:12: ( CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1815:14: CHARR
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_charR12798); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charR"


    public static class final_charS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:1: final_charS : CHARS ;
    public final HPRIMSParser.final_charS_return final_charS() throws RecognitionException {
        HPRIMSParser.final_charS_return retval = new HPRIMSParser.final_charS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:12: ( CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1816:14: CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_charS12806); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charS"


    public static class final_charT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:1: final_charT : CHART ;
    public final HPRIMSParser.final_charT_return final_charT() throws RecognitionException {
        HPRIMSParser.final_charT_return retval = new HPRIMSParser.final_charT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:12: ( CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1817:14: CHART
            {
            match(input,CHART,FOLLOW_CHART_in_final_charT12814); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charT"


    public static class final_charU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:1: final_charU : CHARU ;
    public final HPRIMSParser.final_charU_return final_charU() throws RecognitionException {
        HPRIMSParser.final_charU_return retval = new HPRIMSParser.final_charU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:12: ( CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1818:14: CHARU
            {
            match(input,CHARU,FOLLOW_CHARU_in_final_charU12822); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charU"


    public static class final_charW_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charW"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:1: final_charW : CHARW ;
    public final HPRIMSParser.final_charW_return final_charW() throws RecognitionException {
        HPRIMSParser.final_charW_return retval = new HPRIMSParser.final_charW_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:12: ( CHARW )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1819:14: CHARW
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_charW12830); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charW"


    public static class final_charX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:1: final_charX : CHARX ;
    public final HPRIMSParser.final_charX_return final_charX() throws RecognitionException {
        HPRIMSParser.final_charX_return retval = new HPRIMSParser.final_charX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:12: ( CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1820:14: CHARX
            {
            match(input,CHARX,FOLLOW_CHARX_in_final_charX12838); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charX"


    public static class delimiters_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "delimiters"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1823:1: delimiters : DELIMITERS ;
    public final HPRIMSParser.delimiters_return delimiters() throws RecognitionException {
        HPRIMSParser.delimiters_return retval = new HPRIMSParser.delimiters_return();
        retval.start = input.LT(1);


        startElement("H.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1825:22: ( DELIMITERS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1826:3: DELIMITERS
            {
            match(input,DELIMITERS,FOLLOW_DELIMITERS_in_delimiters12859); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delimiters"


    public static class character_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "character"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1831:1: character : ( lettre | chiffre ) ;
    public final HPRIMSParser.character_return character() throws RecognitionException {
        HPRIMSParser.character_return retval = new HPRIMSParser.character_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1831:10: ( ( lettre | chiffre ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1832:3: ( lettre | chiffre )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1832:3: ( lettre | chiffre )
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( ((LA495_0 >= CHARA && LA495_0 <= CHARu)||(LA495_0 >= LETTRE && LA495_0 <= POINT)) ) {
                alt495=1;
            }
            else if ( ((LA495_0 >= CHIFFRE0 && LA495_0 <= CHIFFRE9)) ) {
                alt495=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 495, 0, input);

                throw nvae;

            }
            switch (alt495) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1832:4: lettre
                    {
                    pushFollow(FOLLOW_lettre_in_character12875);
                    lettre();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1832:13: chiffre
                    {
                    pushFollow(FOLLOW_chiffre_in_character12879);
                    chiffre();

                    state._fsp--;


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "character"



    // $ANTLR start "chiffre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1834:1: chiffre : ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) ;
    public final void chiffre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1834:8: ( ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHIFFRE0 && input.LA(1) <= CHIFFRE9) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "chiffre"



    // $ANTLR start "lettre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1838:1: lettre : ~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) ;
    public final void lettre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:1838:7: (~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\com\\github\\aiderpmsi\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHARA && input.LA(1) <= CHARu)||(input.LA(1) >= LETTRE && input.LA(1) <= POINT) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "lettre"

    // Delegated rules


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA412 dfa412 = new DFA412(this);
    protected DFA414 dfa414 = new DFA414(this);
    static final String DFA3_eotS =
        "\u00dd\uffff";
    static final String DFA3_eofS =
        "\u00dd\uffff";
    static final String DFA3_minS =
        "\1\54\1\51\24\4\1\23\1\7\1\4\1\10\4\4\1\17\1\6\1\12\3\4\6\51\147"+
        "\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\2\4\1\7\22\51\6\13\6\40\6"+
        "\60\6\36\22\uffff";
    static final String DFA3_maxS =
        "\1\54\1\51\20\60\1\23\3\60\1\23\1\7\1\4\1\10\3\60\1\26\1\17\1\6"+
        "\1\12\3\60\6\51\3\60\6\61\2\60\2\61\2\60\2\61\2\60\2\61\2\60\2\61"+
        "\2\60\2\61\2\60\2\61\106\60\1\25\2\60\1\25\2\60\1\25\2\60\1\25\2"+
        "\60\1\25\2\60\1\25\22\51\6\13\6\40\6\60\6\40\22\uffff";
    static final String DFA3_acceptS =
        "\u00cb\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22";
    static final String DFA3_specialS =
        "\u00dd\uffff}>";
    static final String[] DFA3_transitionS = {
            "\1\1",
            "\1\2",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\11\12\12\5\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\14\12\15\5\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\1\27\4\uffff\1\30\7\uffff\1\26\1\uffff\1\31",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\1\35",
            "\1\36",
            "\1\37",
            "\1\40",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\32\12\33\1\uffff\1\22\1\34\2\uffff\4\32",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\1\46\12\uffff\1\45\6\uffff\1\44",
            "\1\47",
            "\1\50",
            "\1\51",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\41\12\42\1\uffff\1\22\1\43\2\uffff\4\41",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\1\55",
            "\1\56",
            "\1\57",
            "\1\60",
            "\1\61",
            "\1\62",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\52\12\53\1\uffff\1\22\1\54\2\uffff\4\52",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\63\12\64\1\uffff\1\22\3\uffff\4\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\75\12\76\1\uffff\1\100\3\uffff\4\75\1\77",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\101\12\102\1\uffff\1\104\3\uffff\4\101\1\103",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\105\12\106\1\uffff\1\110\3\uffff\4\105\1\107",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\111\12\112\1\uffff\1\114\3\uffff\4\111\1\113",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\115\12\116\1\uffff\1\70\3\uffff\4\115",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\117\12\120\1\uffff\1\121\3\uffff\4\117",
            "\32\153\12\154\5\uffff\4\153",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\122\12\123\1\uffff\1\74\3\uffff\4\122",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\124\12\125\1\uffff\1\126\3\uffff\4\124",
            "\32\155\12\156\5\uffff\4\155",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\127\12\130\1\uffff\1\100\3\uffff\4\127",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\131\12\132\1\uffff\1\133\3\uffff\4\131",
            "\32\157\12\160\5\uffff\4\157",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\134\12\135\1\uffff\1\104\3\uffff\4\134",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\136\12\137\1\uffff\1\140\3\uffff\4\136",
            "\32\161\12\162\5\uffff\4\161",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\141\12\142\1\uffff\1\110\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\143\12\144\1\uffff\1\145\3\uffff\4\143",
            "\32\163\12\164\5\uffff\4\163",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\146\12\147\1\uffff\1\114\3\uffff\4\146",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\150\12\151\1\uffff\1\152\3\uffff\4\150",
            "\32\165\12\166\5\uffff\4\165",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\153\12\154\2\uffff\1\167\2\uffff\4\153",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\155\12\156\2\uffff\1\170\2\uffff\4\155",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\157\12\160\2\uffff\1\171\2\uffff\4\157",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\161\12\162\2\uffff\1\172\2\uffff\4\161",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\163\12\164\2\uffff\1\173\2\uffff\4\163",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\165\12\166\2\uffff\1\174\2\uffff\4\165",
            "\32\175\12\176\5\uffff\4\175",
            "\32\177\12\u0080\5\uffff\4\177",
            "\32\u0081\12\u0082\5\uffff\4\u0081",
            "\32\u0083\12\u0084\5\uffff\4\u0083",
            "\32\u0085\12\u0086\5\uffff\4\u0085",
            "\32\u0087\12\u0088\5\uffff\4\u0087",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\175\12\176\1\uffff\1\u0089\3\uffff\4\175",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\177\12\u0080\1\uffff\1\u008a\3\uffff\4\177",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0081\12\u0082\1\uffff\1\u008b\3\uffff\4\u0081",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0083\12\u0084\1\uffff\1\u008c\3\uffff\4\u0083",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0085\12\u0086\1\uffff\1\u008d\3\uffff\4\u0085",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u0087\12\u0088\1\uffff\1\u008e\3\uffff\4\u0087",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\32\u008f\12\u0090\1\uffff\1\u0091\3\uffff\4\u008f",
            "\1\u00a2\12\uffff\1\u00a1\2\uffff\1\u00a3",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\32\u0092\12\u0093\1\uffff\1\u0094\3\uffff\4\u0092",
            "\1\u00a5\12\uffff\1\u00a4\2\uffff\1\u00a6",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\32\u0095\12\u0096\1\uffff\1\u0097\3\uffff\4\u0095",
            "\1\u00a8\12\uffff\1\u00a7\2\uffff\1\u00a9",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\32\u0098\12\u0099\1\uffff\1\u009a\3\uffff\4\u0098",
            "\1\u00ab\12\uffff\1\u00aa\2\uffff\1\u00ac",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\32\u009b\12\u009c\1\uffff\1\u009d\3\uffff\4\u009b",
            "\1\u00ae\12\uffff\1\u00ad\2\uffff\1\u00af",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\32\u009e\12\u009f\1\uffff\1\u00a0\3\uffff\4\u009e",
            "\1\u00b1\12\uffff\1\u00b0\2\uffff\1\u00b2",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b3",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b4",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b5",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b6",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b7",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b8",
            "\1\u00b9",
            "\1\u00ba",
            "\1\u00bb",
            "\1\u00bc",
            "\1\u00bd",
            "\1\u00be",
            "\1\u00bf",
            "\1\u00c0",
            "\1\u00c1",
            "\1\u00c2",
            "\1\u00c3",
            "\1\u00c4",
            "\1\u00c5",
            "\1\u00c6",
            "\1\u00c7",
            "\1\u00c8",
            "\1\u00c9",
            "\1\u00ca",
            "\1\u00cd\1\u00cc\1\u00cb",
            "\1\u00d0\1\u00cf\1\u00ce",
            "\1\u00d3\1\u00d2\1\u00d1",
            "\1\u00d6\1\u00d5\1\u00d4",
            "\1\u00d9\1\u00d8\1\u00d7",
            "\1\u00dc\1\u00db\1\u00da",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
    static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
    static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
    static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
    static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
    static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
    static final short[][] DFA3_transition;

    static {
        int numStates = DFA3_transitionS.length;
        DFA3_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
        }
    }

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = DFA3_eot;
            this.eof = DFA3_eof;
            this.min = DFA3_min;
            this.max = DFA3_max;
            this.accept = DFA3_accept;
            this.special = DFA3_special;
            this.transition = DFA3_transition;
        }
        public String getDescription() {
            return "212:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 | hprim_fac_2_2 | hprim_fac_2_1 | hprim_fac_2_0 | hprim_reg_2_2 | hprim_reg_2_1 | hprim_reg_2_0 );";
        }
    }
    static final String DFA412_eotS =
        "\6\uffff";
    static final String DFA412_eofS =
        "\1\4\2\5\3\uffff";
    static final String DFA412_minS =
        "\3\4\3\uffff";
    static final String DFA412_maxS =
        "\3\61\3\uffff";
    static final String DFA412_acceptS =
        "\3\uffff\1\2\1\3\1\1";
    static final String DFA412_specialS =
        "\6\uffff}>";
    static final String[] DFA412_transitionS = {
            "\32\1\12\2\2\4\1\3\2\uffff\4\1\1\4",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "\32\1\12\2\2\5\2\3\1\uffff\4\1\1\5",
            "",
            "",
            ""
    };

    static final short[] DFA412_eot = DFA.unpackEncodedString(DFA412_eotS);
    static final short[] DFA412_eof = DFA.unpackEncodedString(DFA412_eofS);
    static final char[] DFA412_min = DFA.unpackEncodedStringToUnsignedChars(DFA412_minS);
    static final char[] DFA412_max = DFA.unpackEncodedStringToUnsignedChars(DFA412_maxS);
    static final short[] DFA412_accept = DFA.unpackEncodedString(DFA412_acceptS);
    static final short[] DFA412_special = DFA.unpackEncodedString(DFA412_specialS);
    static final short[][] DFA412_transition;

    static {
        int numStates = DFA412_transitionS.length;
        DFA412_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA412_transition[i] = DFA.unpackEncodedString(DFA412_transitionS[i]);
        }
    }

    class DFA412 extends DFA {

        public DFA412(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 412;
            this.eot = DFA412_eot;
            this.eof = DFA412_eof;
            this.min = DFA412_min;
            this.max = DFA412_max;
            this.accept = DFA412_accept;
            this.special = DFA412_special;
            this.transition = DFA412_transition;
        }
        public String getDescription() {
            return "1212:3: ( final_st | ( crapy_sous_champ_full[$nameElement + \".1\"] crapy_champ_ordered[$nameElement, 2] ) )?";
        }
    }
    static final String DFA414_eotS =
        "\6\uffff";
    static final String DFA414_eofS =
        "\1\3\2\4\3\uffff";
    static final String DFA414_minS =
        "\3\4\3\uffff";
    static final String DFA414_maxS =
        "\3\61\3\uffff";
    static final String DFA414_acceptS =
        "\3\uffff\1\3\1\1\1\2";
    static final String DFA414_specialS =
        "\6\uffff}>";
    static final String[] DFA414_transitionS = {
            "\32\1\12\2\3\3\2\uffff\4\1\1\3",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "\32\1\12\2\3\4\1\5\1\uffff\4\1\1\4",
            "",
            "",
            ""
    };

    static final short[] DFA414_eot = DFA.unpackEncodedString(DFA414_eotS);
    static final short[] DFA414_eof = DFA.unpackEncodedString(DFA414_eofS);
    static final char[] DFA414_min = DFA.unpackEncodedStringToUnsignedChars(DFA414_minS);
    static final char[] DFA414_max = DFA.unpackEncodedStringToUnsignedChars(DFA414_maxS);
    static final short[] DFA414_accept = DFA.unpackEncodedString(DFA414_acceptS);
    static final short[] DFA414_special = DFA.unpackEncodedString(DFA414_specialS);
    static final short[][] DFA414_transition;

    static {
        int numStates = DFA414_transitionS.length;
        DFA414_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA414_transition[i] = DFA.unpackEncodedString(DFA414_transitionS[i]);
        }
    }

    class DFA414 extends DFA {

        public DFA414(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 414;
            this.eot = DFA414_eot;
            this.eof = DFA414_eof;
            this.min = DFA414_min;
            this.max = DFA414_max;
            this.accept = DFA414_accept;
            this.special = DFA414_special;
            this.transition = DFA414_transition;
        }
        public String getDescription() {
            return "1224:3: ( final_st | ( crapy_sous_sous_champ_full[$nameElement + \".1\"] crapy_sous_champ_ordered[$nameElement, 2] ) )?";
        }
    }
 

    public static final BitSet FOLLOW_line_h_crapy_in_hprim_crapy67 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_crapy_in_hprim_crapy71 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_crapy76 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_crapy81 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_2_in_hprim98 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_1_in_hprim102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_0_in_hprim106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_2_in_hprim112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_1_in_hprim116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_0_in_hprim120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_2_in_hprim126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_1_in_hprim130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_0_in_hprim134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_2_in_hprim140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_1_in_hprim144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_0_in_hprim148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_2_in_hprim153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_1_in_hprim157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_fac_2_0_in_hprim161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_2_in_hprim166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_1_in_hprim170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_reg_2_0_in_hprim174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_oru_in_hprim_oru_2_2192 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_2196 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_2201 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_2205 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_2210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_oru_in_hprim_oru_2_1227 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_1231 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_1236 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_1240 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_1245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_oru_in_hprim_oru_2_0262 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_0266 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_0271 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_0275 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_0280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ora_in_hprim_ora_2_2298 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_2302 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_2307 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_2311 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_2316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ora_in_hprim_ora_2_1333 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_1337 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_1342 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_1346 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_1351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ora_in_hprim_ora_2_0368 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_0372 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_0377 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_0381 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_0386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_orm_in_hprim_orm_2_2404 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_2408 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_2413 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_2417 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_2422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_orm_in_hprim_orm_2_1439 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_1443 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_1448 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_1452 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_1457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_orm_in_hprim_orm_2_0474 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_0478 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_0483 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_0487 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_0492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_adm_in_hprim_adm_2_2510 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_2514 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_2519 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_2523 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_2528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_adm_in_hprim_adm_2_1545 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_1549 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_1554 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_1558 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_1563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_adm_in_hprim_adm_2_0580 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_0584 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_0589 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_0593 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_0598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_fac_in_hprim_fac_2_2616 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_2620 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_2625 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_2629 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_2634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_fac_in_hprim_fac_2_1651 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_1655 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_1660 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_1664 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_1669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_fac_in_hprim_fac_2_0686 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_0690 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_0695 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_0699 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_0704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_reg_in_hprim_reg_2_2722 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_2726 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_2731 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_2735 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_2740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_reg_in_hprim_reg_2_1757 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_1761 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_1766 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_1770 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_1775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_reg_in_hprim_reg_2_0792 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_reg_in_hprim_reg_2_0796 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_reg_2_0801 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_reg_2_0805 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_reg_2_0810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ns_in_hprim_ns_2_2828 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_2832 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_2836 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_2841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ns_in_hprim_ns_2_1858 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_1862 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_1866 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_1871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ns_in_hprim_ns_2_0888 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ns_2_0892 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ns_2_0896 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ns_2_0901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_crapy_in_line_crapy912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_c_crapy_in_line_crapy918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_ap_crapy_in_line_crapy924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_ac_crapy_in_line_crapy930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_obr_crapy_in_line_crapy936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_obx_crapy_in_line_crapy942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_fac_crapy_in_line_crapy948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_reg_crapy_in_line_crapy954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_act_crapy_in_line_crapy960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_l_crapy_in_line_crapy966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_orm977 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm980 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_orm987 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm990 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_orm998 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm1001 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_ora1021 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1024 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_ora1031 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1034 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_ora1042 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1045 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_ora1055 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1058 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_p_ora1067 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora1070 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_oru1096 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1099 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obr_in_body_p_oru1106 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1109 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_obx_in_body_p_oru1117 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru1120 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_adm1140 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1143 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_p_adm1150 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1153 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_p_adm1161 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm1164 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_fac1184 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1187 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ap_in_body_p_fac1194 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1197 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_ac_in_body_p_fac1205 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1208 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_fac_in_body_p_fac1222 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1225 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_reg_in_body_p_fac1233 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1236 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_act_in_body_p_fac1246 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1249 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_reg1269 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1272 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_reg_in_body_p_reg1279 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_reg1282 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h1301 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1305 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1307 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1312 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1314 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1319 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1321 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1326 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1340 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_midd_line_h1342 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1347 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1349 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1354 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1356 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1361 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1363 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1368 = new BitSet(new long[]{0x0000000000240080L});
    public static final BitSet FOLLOW_spec_const_7_12_in_midd_line_h1370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delimiters_in_line_h_crapy1383 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1387 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1389 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1395 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1397 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1402 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1404 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1409 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1411 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1416 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1418 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1424 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1426 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1433 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1435 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1443 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1445 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1454 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1456 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1466 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1468 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1479 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1481 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1493 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_h_crapy1495 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h_crapy1507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_oru1545 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1549 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1551 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_oru1556 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1560 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1562 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1567 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1569 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_oru1593 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1597 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1599 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_oru1604 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1608 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1610 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1615 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1617 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_oru1641 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1645 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1647 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_oru1652 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1656 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1658 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1663 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1665 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_orm1690 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1694 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1696 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_orm1701 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1705 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1707 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1712 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1714 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_orm1738 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1742 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1744 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_orm1749 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1753 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1755 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1760 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1762 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_orm1786 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1790 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1792 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_orm1797 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1801 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1803 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1808 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1810 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ora1835 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1839 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1841 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ora1846 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1850 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1852 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1857 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1859 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ora1883 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1887 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1889 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ora1894 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1898 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1900 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1905 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1907 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ora1931 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1935 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1937 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ora1942 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1946 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora1948 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1953 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ora1955 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_adm1980 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1984 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm1986 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_adm1991 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1995 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm1997 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2002 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_adm2004 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm2009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_adm2028 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2032 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm2034 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_adm2039 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2043 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm2045 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2050 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_adm2052 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm2057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_adm2076 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2080 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm2082 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_adm2087 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2091 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm2093 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2098 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_adm2100 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm2105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_fac2125 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2129 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac2131 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_fac2136 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2140 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac2142 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2147 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_fac2149 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac2154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_fac2173 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2177 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac2179 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_fac2184 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2188 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac2190 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2195 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_fac2197 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac2202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_fac2221 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2225 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac2227 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_fac2232 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2236 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac2238 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2243 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_fac2245 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac2250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_reg2270 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2274 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_2_reg2276 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_reg2281 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2285 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_reg2287 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2292 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_reg2294 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_reg2299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_reg2318 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2322 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_1_reg2324 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_reg2329 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2333 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_reg2335 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2340 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_reg2342 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_reg2347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_reg2366 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2370 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_REG_in_line_h2_0_reg2372 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_reg2377 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2381 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_reg2383 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2388 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_reg2390 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_reg2395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ns2415 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2419 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_2_ns2421 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ns2426 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2430 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ns2432 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2437 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ns2439 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ns2444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ns2463 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2467 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_1_ns2469 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ns2474 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2478 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ns2480 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2485 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ns2487 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ns2492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ns2511 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2515 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_NS_in_line_h2_0_ns2517 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ns2522 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2526 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ns2528 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2533 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ns2535 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ns2540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap2561 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap2563 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap2565 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2572 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap2574 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2579 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2581 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2586 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2588 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2593 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2600 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap2602 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2607 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2609 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2614 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2616 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2621 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2623 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2628 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2630 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2635 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2637 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2642 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2644 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2649 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2651 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2656 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2658 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2663 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2665 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2670 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2672 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2677 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2679 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2685 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_ap2687 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2694 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_ap2696 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2704 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2706 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2715 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2717 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2727 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2729 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2740 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2742 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2754 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2756 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap_crapy2802 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap_crapy2804 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap_crapy2806 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2814 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2816 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2823 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2825 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2833 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2835 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2844 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2846 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2856 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2858 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2869 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2871 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2883 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2885 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2898 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2900 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2914 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2916 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2931 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2933 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2949 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2951 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2968 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2970 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy2988 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy2990 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3009 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3011 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3031 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3033 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3054 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3056 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3078 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3080 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3103 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3105 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3129 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3131 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3156 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3158 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3184 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3186 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3213 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3215 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3243 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ap_crapy3245 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap_crapy3273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac3340 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac3342 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac3344 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3351 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ac3353 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3358 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3360 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3365 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac3367 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3372 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ac3374 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3379 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_ac3381 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3386 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3388 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3393 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_ac_8_in_line_ac3395 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3401 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac3403 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3410 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac3412 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac3419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac_crapy3443 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac_crapy3445 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac_crapy3447 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3455 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3457 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3464 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3466 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3474 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3476 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3485 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3487 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3497 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3499 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3510 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3512 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3524 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3526 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3539 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3541 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3555 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_ac_crapy3557 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac_crapy3571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act3610 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act3612 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act3614 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act3616 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3623 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_act3625 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3630 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_act3632 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3637 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3639 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3644 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3646 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3651 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act3653 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3658 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act3660 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3665 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act3667 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3672 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_act3674 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3679 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_act_10_in_line_act3681 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3686 = new BitSet(new long[]{0x0000000000080800L});
    public static final BitSet FOLLOW_spec_act_11_in_line_act3688 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act3693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act_crapy3713 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act_crapy3715 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act_crapy3717 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act_crapy3719 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3727 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3729 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3736 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3738 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3746 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3748 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3757 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3759 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3769 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3771 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3782 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3784 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3796 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3798 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3811 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3813 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3827 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3829 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3844 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_act_crapy3846 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act_crapy3861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac3902 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac3904 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac3906 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac3908 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3915 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_fac3917 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3922 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac3924 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3929 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac3931 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3936 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_fac3938 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3944 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac3946 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3953 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac3955 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3963 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_fac3965 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac3973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac_crapy4001 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac_crapy4003 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac_crapy4005 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac_crapy4007 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4015 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4017 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4024 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4026 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4034 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4036 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4045 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4047 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4057 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4059 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4070 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4072 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4084 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_fac_crapy4086 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac_crapy4098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p4133 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p4135 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4142 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_p4144 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4149 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_8_3_in_line_p4151 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4156 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4158 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4164 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4166 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4173 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4175 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4183 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4185 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4194 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4196 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4206 = new BitSet(new long[]{0x0000020000408200L});
    public static final BitSet FOLLOW_spec_const_sexe_in_line_p4208 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4219 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p4221 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4233 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4235 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4248 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4250 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4264 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_p4266 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4305 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4307 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4311 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p4313 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4331 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4333 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4350 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4352 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4385 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4387 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4422 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p4424 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4444 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4446 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4450 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p4452 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4475 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4477 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4481 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4483 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4507 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4509 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4532 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4534 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4558 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4560 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4585 = new BitSet(new long[]{0x000202FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4587 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p4591 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4593 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4621 = new BitSet(new long[]{0x0000020000069100L});
    public static final BitSet FOLLOW_spec_const_8_25_in_line_p4623 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4650 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p4652 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4705 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4707 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4736 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p4738 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4795 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4797 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4856 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4858 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4890 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4892 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4955 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p4957 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p4991 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p4993 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5028 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p5030 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p5065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p_crapy5145 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p_crapy5147 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5155 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5157 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5164 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5166 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5174 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5176 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5185 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5187 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5197 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5199 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5210 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5212 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5224 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5226 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5239 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5241 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5255 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5257 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5272 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5274 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5290 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5292 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5309 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5311 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5329 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5331 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5350 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5352 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5372 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5374 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5395 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5397 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5419 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5421 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5444 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5446 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5470 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5472 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5497 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5499 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5525 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5527 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5554 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5556 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5584 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5586 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5615 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5617 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5647 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5649 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5680 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5682 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5714 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5716 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5749 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5751 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5785 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5787 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5822 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5824 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5860 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5862 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5899 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5901 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5939 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_p_crapy5941 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p_crapy5979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg6066 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg6068 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg6070 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg6072 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6079 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_reg6081 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6086 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_reg6088 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6093 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_reg_4_in_line_reg6095 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6100 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_spec_p_or_m_in_line_reg6102 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6107 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_reg6109 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6118 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6120 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6127 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg6129 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg6136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg_crapy6160 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg_crapy6162 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg_crapy6164 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg_crapy6166 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6174 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6176 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6183 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6185 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6193 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6195 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6204 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6206 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6216 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6218 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6229 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6231 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6243 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_reg_crapy6245 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg_crapy6257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr6292 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr6294 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr6296 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr6298 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6305 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obr6307 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6312 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_3_in_line_obr6314 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6319 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6321 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6326 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6328 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6332 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6334 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6344 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6346 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6350 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6352 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6359 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6361 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6366 = new BitSet(new long[]{0x000200FFC0000000L});
    public static final BitSet FOLLOW_spec_non_sized_9_8_in_line_obr6368 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6373 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6375 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6383 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6385 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6390 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6392 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6400 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6402 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6411 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6413 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6420 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6422 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6430 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6432 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6441 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_16_in_line_obr6443 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6453 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr6455 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6466 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_obr6468 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6480 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6482 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6495 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6497 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6511 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6513 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6528 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6530 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6546 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6548 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6565 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6567 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6585 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr6587 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6606 = new BitSet(new long[]{0x00000200020E92C0L});
    public static final BitSet FOLLOW_spec_const_9_26_in_line_obr6608 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6628 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6630 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6651 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr6653 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6675 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6677 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6681 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6683 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6708 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr6710 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6734 = new BitSet(new long[]{0x0000020001040040L});
    public static final BitSet FOLLOW_spec_const_9_31_in_line_obr6736 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6783 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6785 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr6789 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr6791 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6819 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6821 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6848 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6850 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6878 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6880 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6909 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr6911 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6941 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr6943 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr6974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr_crapy7044 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr_crapy7046 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr_crapy7048 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr_crapy7050 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7058 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7060 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7067 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7069 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7077 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7079 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7088 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7090 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7100 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7102 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7113 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7115 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7127 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7129 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7142 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7144 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7158 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7160 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7175 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7177 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7193 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7195 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7212 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7214 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7232 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7234 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7253 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7255 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7275 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7277 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7298 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7300 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7322 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7324 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7347 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7349 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7373 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7375 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7400 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7402 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7428 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7430 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7457 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7459 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7487 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7489 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7518 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7520 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7550 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7552 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7583 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7585 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7617 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7619 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7652 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7654 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7688 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7690 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7725 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7727 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7763 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7765 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7802 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7804 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7842 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7844 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7883 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7885 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7925 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7927 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy7968 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obr_crapy7970 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr_crapy8012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx8105 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx8107 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx8109 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx8111 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8118 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obx8120 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8125 = new BitSet(new long[]{0x00000000003506D0L});
    public static final BitSet FOLLOW_spec_const_10_3_nm_in_line_obx8133 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8142 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8144 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8154 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8156 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8167 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8169 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8173 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx8175 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_ce_in_line_obx8205 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8214 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8216 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8226 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8228 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8239 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8241 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8245 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8247 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_fic_in_line_obx8277 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8286 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8288 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8298 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8300 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8311 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8313 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8317 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx8319 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_st_in_line_obx8349 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8358 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8360 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8370 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8372 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8383 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8385 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8389 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_obx8391 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_gc_in_line_obx8421 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8430 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8432 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8442 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8444 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8455 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8457 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8461 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx8463 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_tx_in_line_obx8493 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8502 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8504 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8514 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8516 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8527 = new BitSet(new long[]{0x0001E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx8529 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_std_in_line_obx8557 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8566 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx8568 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8578 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8580 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx8591 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8593 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx8597 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx8599 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx8612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68633 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68635 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68644 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68646 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68650 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68652 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68664 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68666 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68670 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_68672 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68685 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_68687 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68699 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68701 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_68705 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_68707 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68722 = new BitSet(new long[]{0x00000200024C12C0L});
    public static final BitSet FOLLOW_spec_const_10_12_in_line_obx2_1_post10_68724 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68739 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68741 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68757 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68759 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68775 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_68777 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68794 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_68796 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68814 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_68816 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_68819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx_crapy8860 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx_crapy8862 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx_crapy8864 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx_crapy8866 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8874 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8876 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8883 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8885 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8893 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8895 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8904 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8906 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8916 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8918 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8929 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8931 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8943 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8945 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8958 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8960 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8974 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8976 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy8991 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy8993 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9009 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9011 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9029 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9031 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9050 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9052 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9071 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9073 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9093 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9095 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9116 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_obx_crapy9118 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx_crapy9139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c9190 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c9192 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9196 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_c9198 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9203 = new BitSet(new long[]{0x0000020000044000L});
    public static final BitSet FOLLOW_spec_const_12_3_in_line_c9205 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9210 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9212 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_c9216 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c9218 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c9227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c_crapy9245 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c_crapy9247 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9252 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9254 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9261 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9263 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9271 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_c_crapy9273 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c_crapy9283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l9308 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l9310 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9315 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9317 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9324 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_l9326 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9334 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9336 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9345 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l9347 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9357 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_l9359 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l9362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l_crapy9390 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l_crapy9392 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9397 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9399 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9406 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9408 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9416 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9418 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9427 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9429 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9439 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_line_l_crapy9441 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l_crapy9451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_champ_full_in_crapy_repet9475 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_crapy_repet9479 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_repet_in_crapy_repet9481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_champ_full9503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_full9511 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_full9518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_crapy_champ_ordered9536 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_champ_full_in_crapy_champ_ordered9538 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_crapy_champ_ordered_in_crapy_champ_ordered9543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_champ_full9566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_full9574 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_full9580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_crapy_sous_champ_ordered9598 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_crapy_sous_sous_champ_full_in_crapy_sous_champ_ordered9600 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_crapy_sous_champ_ordered_in_crapy_sous_champ_ordered9607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_crapy_sous_sous_champ_full9627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HR_in_spec_act_119654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_RX_in_spec_act_119658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_act_119662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_plus_in_spec_p_or_m9680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_moins_in_spec_p_or_m9684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_89704 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_89709 = new BitSet(new long[]{0x0000000000200200L});
    public static final BitSet FOLLOW_spec_ac_8_2_in_spec_ac_89711 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_89716 = new BitSet(new long[]{0x0000000000340000L});
    public static final BitSet FOLLOW_spec_ac_8_3_in_spec_ac_89718 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_89723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TM_in_spec_ac_8_29746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_29750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FR_in_spec_ac_8_29754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PF_in_spec_ac_8_39774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_SS_in_spec_ac_8_39778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_39782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_on_optionnal9801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_on_optionnal9805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_sexe9826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_sexe9830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_sexe9834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_09871 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_09874 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_09876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_19897 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_19900 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_19902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_29921 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_29924 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_29926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_7_13_29945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_7_13_29949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_7_13_29953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU9971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM9989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA10007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM10025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC10045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_REG_in_spec_const_7_7_contexte_REG10063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_NS_in_spec_const_7_7_contexte_NS10081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_7_1210100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_7_1210104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charT_in_spec_const_7_1210108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PORT_in_spec_const_9_3110128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_CART_in_spec_const_9_3110132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WHLC_in_spec_const_9_3110136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WALK_in_spec_const_9_3110140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_OP_in_spec_const_8_2510161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_IP_in_spec_const_8_2510165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ER_in_spec_const_8_2510169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PA_in_spec_const_8_2510173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MP_in_spec_const_8_2510177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_9_2610198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_9_2610202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_9_2610206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_9_2610210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_9_2610214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_9_2610218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_const_9_2610222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_9_2610228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_9_2610232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_nm10253 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_spec_const_10_3_nm10255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_ce10276 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_spec_const_10_3_ce10278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_spec_const_10_3_st10299 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_st10301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_gc10322 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_gc10324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_tx10346 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_spec_const_10_3_tx10348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_spec_const_10_3_fic10369 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_CHARI_in_spec_const_10_3_fic10371 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_fic10373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10395 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10403 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_spec_const_10_3_std10405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std10411 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10413 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std10415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std10421 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_spec_const_10_3_std10431 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std10439 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10449 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_spec_const_10_3_std10451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std10457 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std10459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010481 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_act_1010485 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010487 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_act_1010494 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_1010496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610520 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610526 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610528 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_610535 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_610537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_reg_410564 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_reg_410569 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_reg_410571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610595 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_610601 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610603 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_610610 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_610612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_10_910640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charH_in_spec_const_10_910644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_LL_in_spec_const_10_910648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HH_in_spec_const_10_910652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_inf_in_spec_const_10_910656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_sup_in_spec_const_10_910660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_910666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_910670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_AA_in_spec_const_10_910674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_Null_in_spec_const_10_910678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_910682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_910686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charB_in_spec_const_10_910690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charW_in_spec_const_10_910696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_910700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_910704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_910708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MS_in_spec_const_10_910712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_VS_in_spec_const_10_910716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_1110737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_1110741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1110745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_1110749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_1210770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_10_1210774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_10_1210778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_10_1210782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_1210786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_1210790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_10_1210797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_1210801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_12_310822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_12_310826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210846 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_210852 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_210854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210877 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_210883 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_210885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410910 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410916 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410918 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410925 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410927 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_410935 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_410937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610966 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610972 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610974 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610981 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610983 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_610991 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_610993 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611002 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611004 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_611014 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_611016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611039 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611046 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611048 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611056 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611058 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611067 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611069 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611079 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611081 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_611092 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_611094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811127 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811133 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811135 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811142 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811144 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811152 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811154 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811163 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811165 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811175 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811177 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811188 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811190 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_811202 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_811204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311241 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311247 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311249 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_311256 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_311258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611281 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611287 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611289 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611296 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611298 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611306 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611308 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611317 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611319 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_611329 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_611331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211360 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_211365 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_211367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211392 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_211397 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_211399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11422 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11429 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna11431 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna11439 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna11441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_spec_sized_8_311473 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311480 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311482 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_311490 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_311492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311532 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_311538 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_311540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811565 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_non_sized_9_811572 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_811574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_1611595 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1611601 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611603 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_1611610 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_1611612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_10_411639 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411645 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411647 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411654 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411656 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411664 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411666 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411675 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411677 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_411687 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_411689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx11724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_tx11749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11767 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_sized_tn11773 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn11775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_optionnal11803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_mandatory11826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_non_sized_optionnal11848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_nonsized_mandatory11867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_optionnal11885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_mandatory11908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal11930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory11958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_optionnal11981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_mandatory12004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_mandatory12026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_optionnal12044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_012063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_112081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_212101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_content_spec_10_6_in_final_spec_10_6_tx12118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_content_spec_10_612140 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_DELIMITER2_in_content_spec_10_612146 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_content_spec_10_6_in_content_spec_10_612157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12169 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12171 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12175 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12177 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12179 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12183 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12186 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12188 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12193 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12195 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12197 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12201 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12204 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts12206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_final_st12225 = new BitSet(new long[]{0x0001E0FFFFFFFFF2L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12254 = new BitSet(new long[]{0x000100FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm12258 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12260 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm12270 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_nm12272 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm_integer12289 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_CHARA_in_final_ADM12301 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_final_ADM12303 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ADM12305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORA12313 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORA12315 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_ORA12317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORU12325 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORU12327 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_CHARU_in_final_ORU12329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORM12337 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORM12339 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ORM12341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FAC12349 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_FAC12351 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_FAC12353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_REG12361 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_final_REG12363 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_final_REG12365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_CART12374 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_CART12376 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_CART12378 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_CART12380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PORT12388 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_final_PORT12390 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_PORT12392 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_PORT12394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WHLC12402 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_WHLC12404 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WHLC12406 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_WHLC12408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WALK12416 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_WALK12418 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WALK12420 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_final_WALK12422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12431 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_LL12433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12441 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_AA12443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12451 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_HH12453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MS12461 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_MS12463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARV_in_final_VS12471 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_VS12473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_Null12481 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_CHARu_in_final_Null12483 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12485 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null12487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf12495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup12503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_final_symbol_plus12511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MOINS_in_final_symbol_moins12519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_012528 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_012530 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_012532 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_CHIFFRE0_in_final_version_2_012534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_112542 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_112544 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_112546 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_CHIFFRE1_in_final_version_2_112548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_212556 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212558 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_212560 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_212562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_OP12571 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_OP12573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_IP12581 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_IP12583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARE_in_final_ER12591 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ER12593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PA12601 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_PA12603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MP12611 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_MP12613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TM12621 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_TM12623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TR12631 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_TR12633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FR12641 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_FR12643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PF12651 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_final_PF12653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_SS12661 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_SS12663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_RX12671 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_final_RX12673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HR12681 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_HR12683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_NS12691 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_NS12693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_charA12702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARB_in_final_charB12710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_charC12718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_final_charD12726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_charF12734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_charH12742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_charI12750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_charL12758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_charM12766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_charN12774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_charO12782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_charP12790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_charR12798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_charS12806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_charT12814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARU_in_final_charU12822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_charW12830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARX_in_final_charX12838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITERS_in_delimiters12859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lettre_in_character12875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_character12879 = new BitSet(new long[]{0x0000000000000002L});

}