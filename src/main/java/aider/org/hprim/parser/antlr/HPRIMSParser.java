// $ANTLR 3.4 C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g 2013-04-06 13:28:48

package aider.org.hprim.parser.antlr;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.LinkedList;

import aider.org.hprim.parser.MatchRegexTokenException;
import aider.org.hprim.parser.ContentHandlerException;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.AttributesImpl;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class HPRIMSParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARA", "CHARB", "CHARC", "CHARD", "CHARE", "CHARF", "CHARG", "CHARH", "CHARI", "CHARK", "CHARL", "CHARM", "CHARN", "CHARO", "CHARP", "CHARR", "CHARS", "CHART", "CHARU", "CHARV", "CHARW", "CHARX", "CHAR_SYMBOL_INF", "CHAR_SYMBOL_SUP", "CHARl", "CHARu", "CHIFFRE0", "CHIFFRE1", "CHIFFRE2", "CHIFFRE3", "CHIFFRE4", "CHIFFRE5", "CHIFFRE6", "CHIFFRE7", "CHIFFRE8", "CHIFFRE9", "CR", "DELIMITER1", "DELIMITER2", "DELIMITER3", "DELIMITERS", "LETTRE", "MOINS", "PLUS", "POINT", "REPETITEUR", "TOKENMISMATCH"
    };

    public static final int EOF=-1;
    public static final int CHARA=4;
    public static final int CHARB=5;
    public static final int CHARC=6;
    public static final int CHARD=7;
    public static final int CHARE=8;
    public static final int CHARF=9;
    public static final int CHARG=10;
    public static final int CHARH=11;
    public static final int CHARI=12;
    public static final int CHARK=13;
    public static final int CHARL=14;
    public static final int CHARM=15;
    public static final int CHARN=16;
    public static final int CHARO=17;
    public static final int CHARP=18;
    public static final int CHARR=19;
    public static final int CHARS=20;
    public static final int CHART=21;
    public static final int CHARU=22;
    public static final int CHARV=23;
    public static final int CHARW=24;
    public static final int CHARX=25;
    public static final int CHAR_SYMBOL_INF=26;
    public static final int CHAR_SYMBOL_SUP=27;
    public static final int CHARl=28;
    public static final int CHARu=29;
    public static final int CHIFFRE0=30;
    public static final int CHIFFRE1=31;
    public static final int CHIFFRE2=32;
    public static final int CHIFFRE3=33;
    public static final int CHIFFRE4=34;
    public static final int CHIFFRE5=35;
    public static final int CHIFFRE6=36;
    public static final int CHIFFRE7=37;
    public static final int CHIFFRE8=38;
    public static final int CHIFFRE9=39;
    public static final int CR=40;
    public static final int DELIMITER1=41;
    public static final int DELIMITER2=42;
    public static final int DELIMITER3=43;
    public static final int DELIMITERS=44;
    public static final int LETTRE=45;
    public static final int MOINS=46;
    public static final int PLUS=47;
    public static final int POINT=48;
    public static final int REPETITEUR=49;
    public static final int TOKENMISMATCH=50;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public HPRIMSParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public HPRIMSParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
    }

    public String[] getTokenNames() { return HPRIMSParser.tokenNames; }
    public String getGrammarFileName() { return "C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g"; }



      /**
       * Collecteur utilisé dans cette classe
       */
      public ContentHandler contentHandler;

      /**
       * Logger de la classe
       */
      private static final Logger logger = Logger.getLogger(HPRIMSParser.class.getCanonicalName());
      
      /**
       * Type utilisé pour se souvenir du dernier élément
       */
      private class XmlElement {
          public String uri;
          public String localName;
          public String qName;
      }
      
      /**
       * Liste des éléments parcourus
       */
      private LinkedList<XmlElement> xmlElements = new LinkedList<XmlElement>(); 

      /**
       * Constructeur
       * @param lexer
       * @param my_col
       */
      public HPRIMSParser(TokenStream input, ContentHandler contentHandler) {
        this(input);
        this.contentHandler = contentHandler;
      }
      
      /**
       * Formate une erreur sous forme de chaine de caractères
       * @param err
       * @return
       */
      public String formatError(RecognitionException err) {
        return getErrorHeader(err) + " / " + getErrorMessage(err, this.getTokenNames());
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void startElement(String nameElement) throws ContentHandlerException {
          try {
              // Enregistrement de cet élément
              XmlElement xmlElement = new XmlElement();
              xmlElement.uri = "";
              xmlElement.localName = nameElement;
              xmlElement.qName = nameElement;
              xmlElements.add(xmlElement);
              // Ajout de ce élément
              contentHandler.startElement("", nameElement, nameElement, new AttributesImpl());
           } catch (SAXException e) {
              ContentHandlerException exc = new ContentHandlerException(e.getMessage());
              exc.setIntStream(input);
              exc.setStartToken(input.LT(1));
              throw exc;
           }
        }
       
      /**
       * Encadre l'appel du contentHandler
       */
      public void endElement() throws ContentHandlerException {
        try {
            XmlElement xmlElement = xmlElements.pollLast();
            contentHandler.endElement(xmlElement.uri,
                xmlElement.localName, xmlElement.qName);
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Début de document hprim
       */
      public void startDocument() throws ContentHandlerException {
        try {
            contentHandler.startDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Fin de document hprim
       */
      public void endDocument() throws ContentHandlerException {
        try {
            contentHandler.endDocument();
         } catch (SAXException e) {
            ContentHandlerException exc = new ContentHandlerException(e.getMessage());
            exc.setIntStream(input);
            exc.setStartToken(input.LT(1));
            throw exc;
         }
      }

      /**
       * Encadre l'appel du contentHandler
       */
      public void content(String content) throws ContentHandlerException {
        try {
            contentHandler.characters(content.toCharArray(),
                0, content.length());
         } catch (SAXException e) {
             ContentHandlerException exc = new ContentHandlerException(e.getMessage());
             exc.setIntStream(input);
             exc.setStartToken(input.LT(1));
             throw exc;
         }
      }

      /**
       * Méthode pour permettre d'envoyer un message d'erreur correct lors d'une erreur de type
       * MatchRegexTokenException
       * @param e
       * @param tokenNames
       */
      public String getErrorMessage(RecognitionException e, String[] tokenNames) {
        if (e instanceof MatchRegexTokenException) {
          MatchRegexTokenException mrte = (MatchRegexTokenException) e;
          return "Malformed message : " + mrte.getText() +
            " does not match " + mrte.getRegex();
        } else if (e instanceof ContentHandlerException) {
          ContentHandlerException che = (ContentHandlerException) e;
          return "Content handling error : " + che.getText();
        } else {
           return super.getErrorMessage(e, tokenNames);
        }
      }
      
      /**
       * La reconnaissance d'une erreur dans le parser 
       * lance une erreur et arrête l'ensemble du parsing immédiatement
       * @param tokenNames
       * @param e
       */
       public void emitErrorMessage(String msg) {
          throw new IllegalArgumentException(msg);
       }
        
        /**
         * Réalise un regexp
         * @param text
         * @param regex
         * @param input
         * @throws RecognitionException
         */
        public void matchRegex(String text, String regex, Token startToken) throws RecognitionException {
          Pattern my_p = Pattern.compile(regex, Pattern.DOTALL);
          Matcher my_m = my_p.matcher(text);
          if (!my_m.matches())
            throw new MatchRegexTokenException(input, startToken, text, regex);
        }




    // $ANTLR start "hprim"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:205:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 );
    public final void hprim() throws RecognitionException {
        startDocument();
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:207:23: ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 )
            int alt1=12;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:208:3: hprim_oru_2_2
                    {
                    pushFollow(FOLLOW_hprim_oru_2_2_in_hprim68);
                    hprim_oru_2_2();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:208:19: hprim_oru_2_1
                    {
                    pushFollow(FOLLOW_hprim_oru_2_1_in_hprim72);
                    hprim_oru_2_1();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:208:35: hprim_oru_2_0
                    {
                    pushFollow(FOLLOW_hprim_oru_2_0_in_hprim76);
                    hprim_oru_2_0();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:209:3: hprim_orm_2_2
                    {
                    pushFollow(FOLLOW_hprim_orm_2_2_in_hprim82);
                    hprim_orm_2_2();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:209:19: hprim_orm_2_1
                    {
                    pushFollow(FOLLOW_hprim_orm_2_1_in_hprim86);
                    hprim_orm_2_1();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:209:35: hprim_orm_2_0
                    {
                    pushFollow(FOLLOW_hprim_orm_2_0_in_hprim90);
                    hprim_orm_2_0();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:210:3: hprim_ora_2_2
                    {
                    pushFollow(FOLLOW_hprim_ora_2_2_in_hprim96);
                    hprim_ora_2_2();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:210:19: hprim_ora_2_1
                    {
                    pushFollow(FOLLOW_hprim_ora_2_1_in_hprim100);
                    hprim_ora_2_1();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:210:35: hprim_ora_2_0
                    {
                    pushFollow(FOLLOW_hprim_ora_2_0_in_hprim104);
                    hprim_ora_2_0();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:211:3: hprim_adm_2_2
                    {
                    pushFollow(FOLLOW_hprim_adm_2_2_in_hprim110);
                    hprim_adm_2_2();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:211:19: hprim_adm_2_1
                    {
                    pushFollow(FOLLOW_hprim_adm_2_1_in_hprim114);
                    hprim_adm_2_1();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:211:35: hprim_adm_2_0
                    {
                    pushFollow(FOLLOW_hprim_adm_2_0_in_hprim118);
                    hprim_adm_2_0();

                    state._fsp--;


                    }
                    break;

            }
            endDocument();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim"



    // $ANTLR start "hprim_oru_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:214:1: hprim_oru_2_2 : line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_2() throws RecognitionException {
        startElement("HPRIM.ORU.2.2");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:216:35: ( line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:217:3: line_h2_2_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_oru_in_hprim_oru_2_2136);
            line_h2_2_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:218:3: ( body_p_oru )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==CR) ) {
                    int LA2_1 = input.LA(2);

                    if ( (LA2_1==CHARP) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:218:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_2140);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_2145);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:220:3: ( CR )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CR) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:220:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_2149); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_2154); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_2"



    // $ANTLR start "hprim_oru_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:223:1: hprim_oru_2_1 : line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_1() throws RecognitionException {
        startElement("HPRIM.ORU.2.1");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:225:35: ( line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:226:3: line_h2_1_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_oru_in_hprim_oru_2_1171);
            line_h2_1_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:227:3: ( body_p_oru )+
            int cnt4=0;
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==CR) ) {
                    int LA4_1 = input.LA(2);

                    if ( (LA4_1==CHARP) ) {
                        alt4=1;
                    }


                }


                switch (alt4) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:227:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_1175);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt4 >= 1 ) break loop4;
                        EarlyExitException eee =
                            new EarlyExitException(4, input);
                        throw eee;
                }
                cnt4++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_1180);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:229:3: ( CR )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==CR) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:229:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_1184); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_1189); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_1"



    // $ANTLR start "hprim_oru_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:232:1: hprim_oru_2_0 : line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF ;
    public final void hprim_oru_2_0() throws RecognitionException {
        startElement("HPRIM.ORU.2.0");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:234:35: ( line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:235:3: line_h2_0_oru ( body_p_oru )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_oru_in_hprim_oru_2_0206);
            line_h2_0_oru();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:236:3: ( body_p_oru )+
            int cnt6=0;
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==CR) ) {
                    int LA6_1 = input.LA(2);

                    if ( (LA6_1==CHARP) ) {
                        alt6=1;
                    }


                }


                switch (alt6) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:236:3: body_p_oru
            	    {
            	    pushFollow(FOLLOW_body_p_oru_in_hprim_oru_2_0210);
            	    body_p_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt6 >= 1 ) break loop6;
                        EarlyExitException eee =
                            new EarlyExitException(6, input);
                        throw eee;
                }
                cnt6++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_oru_2_0215);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:238:3: ( CR )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==CR) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:238:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_oru_2_0219); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_oru_2_0224); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_oru_2_0"



    // $ANTLR start "hprim_ora_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:242:1: hprim_ora_2_2 : line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_2() throws RecognitionException {
        startElement("HPRIM.ORA.2.2");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:244:35: ( line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:245:3: line_h2_2_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_ora_in_hprim_ora_2_2242);
            line_h2_2_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:246:3: ( body_p_ora )+
            int cnt8=0;
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==CR) ) {
                    int LA8_1 = input.LA(2);

                    if ( (LA8_1==CHARP) ) {
                        alt8=1;
                    }


                }


                switch (alt8) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:246:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_2246);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt8 >= 1 ) break loop8;
                        EarlyExitException eee =
                            new EarlyExitException(8, input);
                        throw eee;
                }
                cnt8++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_2251);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:248:3: ( CR )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==CR) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:248:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_2255); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_2260); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_2"



    // $ANTLR start "hprim_ora_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:251:1: hprim_ora_2_1 : line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_1() throws RecognitionException {
        startElement("HPRIM.ORA.2.1");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:253:35: ( line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:254:3: line_h2_1_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_ora_in_hprim_ora_2_1277);
            line_h2_1_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:255:3: ( body_p_ora )+
            int cnt10=0;
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==CR) ) {
                    int LA10_1 = input.LA(2);

                    if ( (LA10_1==CHARP) ) {
                        alt10=1;
                    }


                }


                switch (alt10) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:255:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_1281);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_1286);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:257:3: ( CR )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==CR) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:257:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_1290); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_1295); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_1"



    // $ANTLR start "hprim_ora_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:260:1: hprim_ora_2_0 : line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF ;
    public final void hprim_ora_2_0() throws RecognitionException {
        startElement("HPRIM.ORA.2.0");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:262:35: ( line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:263:3: line_h2_0_ora ( body_p_ora )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_ora_in_hprim_ora_2_0312);
            line_h2_0_ora();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:264:3: ( body_p_ora )+
            int cnt12=0;
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==CR) ) {
                    int LA12_1 = input.LA(2);

                    if ( (LA12_1==CHARP) ) {
                        alt12=1;
                    }


                }


                switch (alt12) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:264:3: body_p_ora
            	    {
            	    pushFollow(FOLLOW_body_p_ora_in_hprim_ora_2_0316);
            	    body_p_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt12 >= 1 ) break loop12;
                        EarlyExitException eee =
                            new EarlyExitException(12, input);
                        throw eee;
                }
                cnt12++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_ora_2_0321);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:266:3: ( CR )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==CR) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:266:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_ora_2_0325); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_ora_2_0330); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_ora_2_0"



    // $ANTLR start "hprim_orm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:270:1: hprim_orm_2_2 : line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_2() throws RecognitionException {
        startElement("HPRIM.ORM.2.2");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:272:35: ( line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:273:3: line_h2_2_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_orm_in_hprim_orm_2_2348);
            line_h2_2_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:274:3: ( body_p_orm )+
            int cnt14=0;
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==CR) ) {
                    int LA14_1 = input.LA(2);

                    if ( (LA14_1==CHARP) ) {
                        alt14=1;
                    }


                }


                switch (alt14) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:274:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_2352);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt14 >= 1 ) break loop14;
                        EarlyExitException eee =
                            new EarlyExitException(14, input);
                        throw eee;
                }
                cnt14++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_2357);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:276:3: ( CR )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==CR) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:276:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_2361); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_2366); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_2"



    // $ANTLR start "hprim_orm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:279:1: hprim_orm_2_1 : line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_1() throws RecognitionException {
        startElement("HPRIM.ORM.2.1");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:281:35: ( line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:282:3: line_h2_1_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_orm_in_hprim_orm_2_1383);
            line_h2_1_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:283:3: ( body_p_orm )+
            int cnt16=0;
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==CR) ) {
                    int LA16_1 = input.LA(2);

                    if ( (LA16_1==CHARP) ) {
                        alt16=1;
                    }


                }


                switch (alt16) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:283:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_1387);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt16 >= 1 ) break loop16;
                        EarlyExitException eee =
                            new EarlyExitException(16, input);
                        throw eee;
                }
                cnt16++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_1392);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:285:3: ( CR )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==CR) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:285:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_1396); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_1401); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_1"



    // $ANTLR start "hprim_orm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:288:1: hprim_orm_2_0 : line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF ;
    public final void hprim_orm_2_0() throws RecognitionException {
        startElement("HPRIM.ORM.2.0");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:290:35: ( line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:291:3: line_h2_0_orm ( body_p_orm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_orm_in_hprim_orm_2_0418);
            line_h2_0_orm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:292:3: ( body_p_orm )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==CR) ) {
                    int LA18_1 = input.LA(2);

                    if ( (LA18_1==CHARP) ) {
                        alt18=1;
                    }


                }


                switch (alt18) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:292:3: body_p_orm
            	    {
            	    pushFollow(FOLLOW_body_p_orm_in_hprim_orm_2_0422);
            	    body_p_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_orm_2_0427);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:294:3: ( CR )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==CR) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:294:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_orm_2_0431); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_orm_2_0436); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_orm_2_0"



    // $ANTLR start "hprim_adm_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:298:1: hprim_adm_2_2 : line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_2() throws RecognitionException {
        startElement("HPRIM.ADM.2.2");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:300:35: ( line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:301:3: line_h2_2_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_adm_in_hprim_adm_2_2454);
            line_h2_2_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:302:3: ( body_p_adm )+
            int cnt20=0;
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==CR) ) {
                    int LA20_1 = input.LA(2);

                    if ( (LA20_1==CHARP) ) {
                        alt20=1;
                    }


                }


                switch (alt20) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:302:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_2458);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt20 >= 1 ) break loop20;
                        EarlyExitException eee =
                            new EarlyExitException(20, input);
                        throw eee;
                }
                cnt20++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_2463);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:304:3: ( CR )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==CR) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:304:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_2467); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_2472); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_2"



    // $ANTLR start "hprim_adm_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:307:1: hprim_adm_2_1 : line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_1() throws RecognitionException {
        startElement("HPRIM.ADM.2.1");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:309:35: ( line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:310:3: line_h2_1_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_adm_in_hprim_adm_2_1489);
            line_h2_1_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:311:3: ( body_p_adm )+
            int cnt22=0;
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==CR) ) {
                    int LA22_1 = input.LA(2);

                    if ( (LA22_1==CHARP) ) {
                        alt22=1;
                    }


                }


                switch (alt22) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:311:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_1493);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt22 >= 1 ) break loop22;
                        EarlyExitException eee =
                            new EarlyExitException(22, input);
                        throw eee;
                }
                cnt22++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_1498);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:313:3: ( CR )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==CR) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:313:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_1502); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_1507); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_1"



    // $ANTLR start "hprim_adm_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:316:1: hprim_adm_2_0 : line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF ;
    public final void hprim_adm_2_0() throws RecognitionException {
        startElement("HPRIM.ADM.2.0");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:318:35: ( line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:319:3: line_h2_0_adm ( body_p_adm )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_adm_in_hprim_adm_2_0524);
            line_h2_0_adm();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:320:3: ( body_p_adm )+
            int cnt24=0;
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==CR) ) {
                    int LA24_1 = input.LA(2);

                    if ( (LA24_1==CHARP) ) {
                        alt24=1;
                    }


                }


                switch (alt24) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:320:3: body_p_adm
            	    {
            	    pushFollow(FOLLOW_body_p_adm_in_hprim_adm_2_0528);
            	    body_p_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt24 >= 1 ) break loop24;
                        EarlyExitException eee =
                            new EarlyExitException(24, input);
                        throw eee;
                }
                cnt24++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_adm_2_0533);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:322:3: ( CR )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==CR) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:322:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_adm_2_0537); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_adm_2_0542); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_adm_2_0"



    // $ANTLR start "hprim_fac_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:326:1: hprim_fac_2_2 : line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_2() throws RecognitionException {
        startElement("HPRIM.FAC.2.2");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:328:35: ( line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:329:3: line_h2_2_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_2_fac_in_hprim_fac_2_2560);
            line_h2_2_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:330:3: ( body_p_fac )+
            int cnt26=0;
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==CR) ) {
                    int LA26_1 = input.LA(2);

                    if ( (LA26_1==CHARP) ) {
                        alt26=1;
                    }


                }


                switch (alt26) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:330:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_2564);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt26 >= 1 ) break loop26;
                        EarlyExitException eee =
                            new EarlyExitException(26, input);
                        throw eee;
                }
                cnt26++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_2569);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:332:3: ( CR )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==CR) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:332:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_2573); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_2578); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_2"



    // $ANTLR start "hprim_fac_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:335:1: hprim_fac_2_1 : line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_1() throws RecognitionException {
        startElement("HPRIM.FAC.2.1");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:337:35: ( line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:338:3: line_h2_1_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_1_fac_in_hprim_fac_2_1595);
            line_h2_1_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:339:3: ( body_p_fac )+
            int cnt28=0;
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==CR) ) {
                    int LA28_1 = input.LA(2);

                    if ( (LA28_1==CHARP) ) {
                        alt28=1;
                    }


                }


                switch (alt28) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:339:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_1599);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt28 >= 1 ) break loop28;
                        EarlyExitException eee =
                            new EarlyExitException(28, input);
                        throw eee;
                }
                cnt28++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_1604);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:341:3: ( CR )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==CR) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:341:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_1608); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_1613); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_1"



    // $ANTLR start "hprim_fac_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:344:1: hprim_fac_2_0 : line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF ;
    public final void hprim_fac_2_0() throws RecognitionException {
        startElement("HPRIM.FAC.2.0");startElement("H");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:346:35: ( line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:347:3: line_h2_0_fac ( body_p_fac )+ line_l ( CR )? EOF
            {
            pushFollow(FOLLOW_line_h2_0_fac_in_hprim_fac_2_0630);
            line_h2_0_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:348:3: ( body_p_fac )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==CR) ) {
                    int LA30_1 = input.LA(2);

                    if ( (LA30_1==CHARP) ) {
                        alt30=1;
                    }


                }


                switch (alt30) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:348:3: body_p_fac
            	    {
            	    pushFollow(FOLLOW_body_p_fac_in_hprim_fac_2_0634);
            	    body_p_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);


            pushFollow(FOLLOW_line_l_in_hprim_fac_2_0639);
            line_l();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:350:3: ( CR )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==CR) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:350:3: CR
                    {
                    match(input,CR,FOLLOW_CR_in_hprim_fac_2_0643); 

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_hprim_fac_2_0648); 

            }

            endElement();endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "hprim_fac_2_0"



    // $ANTLR start "body_p_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:354:1: body_p_orm : line_p ( line_c )* ( body_obr_orm )+ ;
    public final void body_p_orm() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:356:23: ( line_p ( line_c )* ( body_obr_orm )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:357:3: line_p ( line_c )* ( body_obr_orm )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_orm667);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:357:10: ( line_c )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==CR) ) {
                    int LA32_1 = input.LA(2);

                    if ( (LA32_1==CHARC) ) {
                        alt32=1;
                    }


                }


                switch (alt32) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:357:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_orm670);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:358:3: ( body_obr_orm )+
            int cnt33=0;
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==CR) ) {
                    int LA33_1 = input.LA(2);

                    if ( (LA33_1==CHARO) ) {
                        alt33=1;
                    }


                }


                switch (alt33) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:358:3: body_obr_orm
            	    {
            	    pushFollow(FOLLOW_body_obr_orm_in_body_p_orm676);
            	    body_obr_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt33 >= 1 ) break loop33;
                        EarlyExitException eee =
                            new EarlyExitException(33, input);
                        throw eee;
                }
                cnt33++;
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_orm"



    // $ANTLR start "body_obr_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:360:1: body_obr_orm : line_obr ( line_c )* ( body_obx_orm )* ;
    public final void body_obr_orm() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:362:23: ( line_obr ( line_c )* ( body_obx_orm )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:363:4: line_obr ( line_c )* ( body_obx_orm )*
            {
            pushFollow(FOLLOW_line_obr_in_body_obr_orm696);
            line_obr();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:363:13: ( line_c )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==CR) ) {
                    int LA34_1 = input.LA(2);

                    if ( (LA34_1==CHARC) ) {
                        alt34=1;
                    }


                }


                switch (alt34) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:363:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obr_orm699);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:364:4: ( body_obx_orm )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==CR) ) {
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1==CHARO) ) {
                        int LA35_3 = input.LA(3);

                        if ( (LA35_3==CHARB) ) {
                            int LA35_4 = input.LA(4);

                            if ( (LA35_4==CHARX) ) {
                                alt35=1;
                            }


                        }


                    }


                }


                switch (alt35) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:364:4: body_obx_orm
            	    {
            	    pushFollow(FOLLOW_body_obx_orm_in_body_obr_orm706);
            	    body_obx_orm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obr_orm"



    // $ANTLR start "body_obx_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:366:1: body_obx_orm : line_obx ( line_c )* ;
    public final void body_obx_orm() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:368:23: ( line_obx ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:369:4: line_obx ( line_c )*
            {
            pushFollow(FOLLOW_line_obx_in_body_obx_orm726);
            line_obx();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:369:13: ( line_c )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==CR) ) {
                    int LA36_1 = input.LA(2);

                    if ( (LA36_1==CHARC) ) {
                        alt36=1;
                    }


                }


                switch (alt36) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:369:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obx_orm729);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obx_orm"



    // $ANTLR start "body_p_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:372:1: body_p_ora : line_p ( line_c )* ( body_ap_ora )* ;
    public final void body_p_ora() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:374:23: ( line_p ( line_c )* ( body_ap_ora )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:375:3: line_p ( line_c )* ( body_ap_ora )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_ora753);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:375:10: ( line_c )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==CR) ) {
                    int LA37_1 = input.LA(2);

                    if ( (LA37_1==CHARC) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:375:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_ora756);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:376:3: ( body_ap_ora )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==CR) ) {
                    int LA38_1 = input.LA(2);

                    if ( (LA38_1==CHARA) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:376:3: body_ap_ora
            	    {
            	    pushFollow(FOLLOW_body_ap_ora_in_body_p_ora762);
            	    body_ap_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_ora"



    // $ANTLR start "body_ap_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:378:1: body_ap_ora : line_ap ( line_c )* body_ac_ora ;
    public final void body_ap_ora() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:380:23: ( line_ap ( line_c )* body_ac_ora )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:381:3: line_ap ( line_c )* body_ac_ora
            {
            pushFollow(FOLLOW_line_ap_in_body_ap_ora781);
            line_ap();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:381:11: ( line_c )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==CR) ) {
                    int LA39_1 = input.LA(2);

                    if ( (LA39_1==CHARC) ) {
                        alt39=1;
                    }


                }


                switch (alt39) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:381:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ap_ora784);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            pushFollow(FOLLOW_body_ac_ora_in_body_ap_ora790);
            body_ac_ora();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ap_ora"



    // $ANTLR start "body_ac_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:384:1: body_ac_ora : ( body_ac_ora_second_level )* ( body_obr_ora )+ ;
    public final void body_ac_ora() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:386:23: ( ( body_ac_ora_second_level )* ( body_obr_ora )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:387:3: ( body_ac_ora_second_level )* ( body_obr_ora )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:387:3: ( body_ac_ora_second_level )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==CR) ) {
                    int LA40_1 = input.LA(2);

                    if ( (LA40_1==CHARA) ) {
                        alt40=1;
                    }


                }


                switch (alt40) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:387:3: body_ac_ora_second_level
            	    {
            	    pushFollow(FOLLOW_body_ac_ora_second_level_in_body_ac_ora808);
            	    body_ac_ora_second_level();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:388:3: ( body_obr_ora )+
            int cnt41=0;
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==CR) ) {
                    int LA41_1 = input.LA(2);

                    if ( (LA41_1==CHARO) ) {
                        alt41=1;
                    }


                }


                switch (alt41) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:388:3: body_obr_ora
            	    {
            	    pushFollow(FOLLOW_body_obr_ora_in_body_ac_ora813);
            	    body_obr_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt41 >= 1 ) break loop41;
                        EarlyExitException eee =
                            new EarlyExitException(41, input);
                        throw eee;
                }
                cnt41++;
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ac_ora"



    // $ANTLR start "body_ac_ora_second_level"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:390:1: body_ac_ora_second_level : line_ac ( line_c )* ;
    public final void body_ac_ora_second_level() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:392:23: ( line_ac ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:393:3: line_ac ( line_c )*
            {
            pushFollow(FOLLOW_line_ac_in_body_ac_ora_second_level832);
            line_ac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:393:11: ( line_c )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==CR) ) {
                    int LA42_1 = input.LA(2);

                    if ( (LA42_1==CHARC) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:393:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ac_ora_second_level835);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ac_ora_second_level"



    // $ANTLR start "body_obr_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:395:1: body_obr_ora : line_obr ( line_c )* ( body_obx_ora )* ;
    public final void body_obr_ora() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:397:23: ( line_obr ( line_c )* ( body_obx_ora )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:398:4: line_obr ( line_c )* ( body_obx_ora )*
            {
            pushFollow(FOLLOW_line_obr_in_body_obr_ora856);
            line_obr();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:398:13: ( line_c )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==CR) ) {
                    int LA43_1 = input.LA(2);

                    if ( (LA43_1==CHARC) ) {
                        alt43=1;
                    }


                }


                switch (alt43) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:398:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obr_ora859);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:399:4: ( body_obx_ora )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==CR) ) {
                    int LA44_1 = input.LA(2);

                    if ( (LA44_1==CHARO) ) {
                        int LA44_3 = input.LA(3);

                        if ( (LA44_3==CHARB) ) {
                            int LA44_4 = input.LA(4);

                            if ( (LA44_4==CHARX) ) {
                                alt44=1;
                            }


                        }


                    }


                }


                switch (alt44) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:399:4: body_obx_ora
            	    {
            	    pushFollow(FOLLOW_body_obx_ora_in_body_obr_ora866);
            	    body_obx_ora();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obr_ora"



    // $ANTLR start "body_obx_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:401:1: body_obx_ora : line_obx ( line_c )* ;
    public final void body_obx_ora() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:403:23: ( line_obx ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:404:4: line_obx ( line_c )*
            {
            pushFollow(FOLLOW_line_obx_in_body_obx_ora886);
            line_obx();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:404:13: ( line_c )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==CR) ) {
                    int LA45_1 = input.LA(2);

                    if ( (LA45_1==CHARC) ) {
                        alt45=1;
                    }


                }


                switch (alt45) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:404:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obx_ora889);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obx_ora"



    // $ANTLR start "body_p_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:407:1: body_p_oru : line_p ( line_c )* ( body_obr_oru )+ ;
    public final void body_p_oru() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:409:23: ( line_p ( line_c )* ( body_obr_oru )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:410:3: line_p ( line_c )* ( body_obr_oru )+
            {
            pushFollow(FOLLOW_line_p_in_body_p_oru913);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:410:10: ( line_c )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==CR) ) {
                    int LA46_1 = input.LA(2);

                    if ( (LA46_1==CHARC) ) {
                        alt46=1;
                    }


                }


                switch (alt46) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:410:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_oru916);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:411:3: ( body_obr_oru )+
            int cnt47=0;
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==CR) ) {
                    int LA47_1 = input.LA(2);

                    if ( (LA47_1==CHARO) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:411:3: body_obr_oru
            	    {
            	    pushFollow(FOLLOW_body_obr_oru_in_body_p_oru922);
            	    body_obr_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt47 >= 1 ) break loop47;
                        EarlyExitException eee =
                            new EarlyExitException(47, input);
                        throw eee;
                }
                cnt47++;
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_oru"



    // $ANTLR start "body_obr_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:413:1: body_obr_oru : line_obr ( line_c )* ( body_obx_oru )+ ;
    public final void body_obr_oru() throws RecognitionException {
        startElement("OBR");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:415:23: ( line_obr ( line_c )* ( body_obx_oru )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:416:4: line_obr ( line_c )* ( body_obx_oru )+
            {
            pushFollow(FOLLOW_line_obr_in_body_obr_oru942);
            line_obr();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:416:13: ( line_c )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==CR) ) {
                    int LA48_1 = input.LA(2);

                    if ( (LA48_1==CHARC) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:416:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obr_oru945);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:417:4: ( body_obx_oru )+
            int cnt49=0;
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==CR) ) {
                    int LA49_1 = input.LA(2);

                    if ( (LA49_1==CHARO) ) {
                        int LA49_3 = input.LA(3);

                        if ( (LA49_3==CHARB) ) {
                            int LA49_4 = input.LA(4);

                            if ( (LA49_4==CHARX) ) {
                                alt49=1;
                            }


                        }


                    }


                }


                switch (alt49) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:417:4: body_obx_oru
            	    {
            	    pushFollow(FOLLOW_body_obx_oru_in_body_obr_oru952);
            	    body_obx_oru();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt49 >= 1 ) break loop49;
                        EarlyExitException eee =
                            new EarlyExitException(49, input);
                        throw eee;
                }
                cnt49++;
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obr_oru"



    // $ANTLR start "body_obx_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:419:1: body_obx_oru : line_obx ( line_c )* ;
    public final void body_obx_oru() throws RecognitionException {
        startElement("OBX");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:421:23: ( line_obx ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:422:4: line_obx ( line_c )*
            {
            pushFollow(FOLLOW_line_obx_in_body_obx_oru972);
            line_obx();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:422:13: ( line_c )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==CR) ) {
                    int LA50_1 = input.LA(2);

                    if ( (LA50_1==CHARC) ) {
                        alt50=1;
                    }


                }


                switch (alt50) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:422:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_obx_oru975);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_obx_oru"



    // $ANTLR start "body_p_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:425:1: body_p_adm : line_p ( line_c )* ( body_ap_adm )* ;
    public final void body_p_adm() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:427:23: ( line_p ( line_c )* ( body_ap_adm )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:428:3: line_p ( line_c )* ( body_ap_adm )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_adm996);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:428:10: ( line_c )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==CR) ) {
                    int LA51_1 = input.LA(2);

                    if ( (LA51_1==CHARC) ) {
                        alt51=1;
                    }


                }


                switch (alt51) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:428:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_adm999);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:429:3: ( body_ap_adm )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==CR) ) {
                    int LA52_1 = input.LA(2);

                    if ( (LA52_1==CHARA) ) {
                        alt52=1;
                    }


                }


                switch (alt52) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:429:3: body_ap_adm
            	    {
            	    pushFollow(FOLLOW_body_ap_adm_in_body_p_adm1005);
            	    body_ap_adm();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_adm"



    // $ANTLR start "body_ap_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:431:1: body_ap_adm : line_ap ( line_c )* body_ac_adm ;
    public final void body_ap_adm() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:433:23: ( line_ap ( line_c )* body_ac_adm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:434:3: line_ap ( line_c )* body_ac_adm
            {
            pushFollow(FOLLOW_line_ap_in_body_ap_adm1024);
            line_ap();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:434:11: ( line_c )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==CR) ) {
                    int LA53_1 = input.LA(2);

                    if ( (LA53_1==CHARC) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:434:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ap_adm1027);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);


            pushFollow(FOLLOW_body_ac_adm_in_body_ap_adm1033);
            body_ac_adm();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ap_adm"



    // $ANTLR start "body_ac_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:437:1: body_ac_adm : line_ac ( line_c )* ;
    public final void body_ac_adm() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:439:23: ( line_ac ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:440:3: line_ac ( line_c )*
            {
            pushFollow(FOLLOW_line_ac_in_body_ac_adm1051);
            line_ac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:440:11: ( line_c )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==CR) ) {
                    int LA54_1 = input.LA(2);

                    if ( (LA54_1==CHARC) ) {
                        alt54=1;
                    }


                }


                switch (alt54) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:440:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ac_adm1054);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ac_adm"



    // $ANTLR start "body_p_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:443:1: body_p_fac : line_p ( line_c )* ( body_ap_fac )* ;
    public final void body_p_fac() throws RecognitionException {
        startElement("P");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:445:23: ( line_p ( line_c )* ( body_ap_fac )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:446:3: line_p ( line_c )* ( body_ap_fac )*
            {
            pushFollow(FOLLOW_line_p_in_body_p_fac1075);
            line_p();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:446:10: ( line_c )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==CR) ) {
                    int LA55_1 = input.LA(2);

                    if ( (LA55_1==CHARC) ) {
                        alt55=1;
                    }


                }


                switch (alt55) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:446:11: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_p_fac1078);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:447:3: ( body_ap_fac )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==CR) ) {
                    int LA56_1 = input.LA(2);

                    if ( (LA56_1==CHARA) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:447:3: body_ap_fac
            	    {
            	    pushFollow(FOLLOW_body_ap_fac_in_body_p_fac1084);
            	    body_ap_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_p_fac"



    // $ANTLR start "body_ap_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:449:1: body_ap_fac : line_ap ( line_c )* body_ac_fac ;
    public final void body_ap_fac() throws RecognitionException {
        startElement("AP");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:451:23: ( line_ap ( line_c )* body_ac_fac )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:452:3: line_ap ( line_c )* body_ac_fac
            {
            pushFollow(FOLLOW_line_ap_in_body_ap_fac1103);
            line_ap();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:452:11: ( line_c )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==CR) ) {
                    int LA57_1 = input.LA(2);

                    if ( (LA57_1==CHARC) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:452:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ap_fac1106);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            pushFollow(FOLLOW_body_ac_fac_in_body_ap_fac1112);
            body_ac_fac();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ap_fac"



    // $ANTLR start "body_ac_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:455:1: body_ac_fac : ( body_ac_fac_second_level )* ( body_fac_fac )+ ;
    public final void body_ac_fac() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:457:23: ( ( body_ac_fac_second_level )* ( body_fac_fac )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:458:3: ( body_ac_fac_second_level )* ( body_fac_fac )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:458:3: ( body_ac_fac_second_level )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==CR) ) {
                    int LA58_1 = input.LA(2);

                    if ( (LA58_1==CHARA) ) {
                        alt58=1;
                    }


                }


                switch (alt58) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:458:3: body_ac_fac_second_level
            	    {
            	    pushFollow(FOLLOW_body_ac_fac_second_level_in_body_ac_fac1130);
            	    body_ac_fac_second_level();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:459:3: ( body_fac_fac )+
            int cnt59=0;
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==CR) ) {
                    int LA59_1 = input.LA(2);

                    if ( (LA59_1==CHARF) ) {
                        alt59=1;
                    }


                }


                switch (alt59) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:459:3: body_fac_fac
            	    {
            	    pushFollow(FOLLOW_body_fac_fac_in_body_ac_fac1135);
            	    body_fac_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt59 >= 1 ) break loop59;
                        EarlyExitException eee =
                            new EarlyExitException(59, input);
                        throw eee;
                }
                cnt59++;
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ac_fac"



    // $ANTLR start "body_ac_fac_second_level"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:461:1: body_ac_fac_second_level : line_ac ( line_c )* ;
    public final void body_ac_fac_second_level() throws RecognitionException {
        startElement("AC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:463:23: ( line_ac ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:464:3: line_ac ( line_c )*
            {
            pushFollow(FOLLOW_line_ac_in_body_ac_fac_second_level1154);
            line_ac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:464:11: ( line_c )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==CR) ) {
                    int LA60_1 = input.LA(2);

                    if ( (LA60_1==CHARC) ) {
                        alt60=1;
                    }


                }


                switch (alt60) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:464:12: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_ac_fac_second_level1157);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_ac_fac_second_level"



    // $ANTLR start "body_fac_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:466:1: body_fac_fac : line_fac ( line_c )* body_reg_fac ;
    public final void body_fac_fac() throws RecognitionException {
        startElement("FAC");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:468:23: ( line_fac ( line_c )* body_reg_fac )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:469:4: line_fac ( line_c )* body_reg_fac
            {
            pushFollow(FOLLOW_line_fac_in_body_fac_fac1178);
            line_fac();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:469:13: ( line_c )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==CR) ) {
                    int LA61_1 = input.LA(2);

                    if ( (LA61_1==CHARC) ) {
                        alt61=1;
                    }


                }


                switch (alt61) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:469:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_fac_fac1181);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            pushFollow(FOLLOW_body_reg_fac_in_body_fac_fac1188);
            body_reg_fac();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_fac_fac"



    // $ANTLR start "body_reg_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:472:1: body_reg_fac : line_reg ( line_c )* ( body_act_fac )* ;
    public final void body_reg_fac() throws RecognitionException {
        startElement("REG");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:474:23: ( line_reg ( line_c )* ( body_act_fac )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:475:4: line_reg ( line_c )* ( body_act_fac )*
            {
            pushFollow(FOLLOW_line_reg_in_body_reg_fac1207);
            line_reg();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:475:13: ( line_c )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==CR) ) {
                    int LA62_1 = input.LA(2);

                    if ( (LA62_1==CHARC) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:475:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_reg_fac1210);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:476:4: ( body_act_fac )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==CR) ) {
                    int LA63_1 = input.LA(2);

                    if ( (LA63_1==CHARA) ) {
                        int LA63_3 = input.LA(3);

                        if ( (LA63_3==CHARC) ) {
                            alt63=1;
                        }


                    }


                }


                switch (alt63) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:476:4: body_act_fac
            	    {
            	    pushFollow(FOLLOW_body_act_fac_in_body_reg_fac1217);
            	    body_act_fac();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_reg_fac"



    // $ANTLR start "body_act_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:478:1: body_act_fac : line_act ( line_c )* ;
    public final void body_act_fac() throws RecognitionException {
        startElement("ACT");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:480:23: ( line_act ( line_c )* )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:481:4: line_act ( line_c )*
            {
            pushFollow(FOLLOW_line_act_in_body_act_fac1237);
            line_act();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:481:13: ( line_c )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==CR) ) {
                    int LA64_1 = input.LA(2);

                    if ( (LA64_1==CHARC) ) {
                        alt64=1;
                    }


                }


                switch (alt64) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:481:14: line_c
            	    {
            	    pushFollow(FOLLOW_line_c_in_body_act_fac1240);
            	    line_c();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "body_act_fac"



    // $ANTLR start "start_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:488:1: start_line_h : delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] ;
    public final void start_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:488:14: ( delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:489:3: delimiters DELIMITER1 st_sized_optionnal[\"H.3\", 12] DELIMITER1 st_sized_optionnal[\"H.4\", 12] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.5\", 40] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"H.6\", 100]
            {
            startElement("H.1");content("H");endElement();

            pushFollow(FOLLOW_delimiters_in_start_line_h1262);
            delimiters();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1266); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1268);
            st_sized_optionnal("H.3", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1273); 

            pushFollow(FOLLOW_st_sized_optionnal_in_start_line_h1275);
            st_sized_optionnal("H.4", 12);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1280); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1282);
            spec_sized_mult_lvl1_st_mandatory_2("H.5", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_start_line_h1287); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1289);
            spec_sized_mult_lvl1_st_optionnal_6("H.6", 100);

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "start_line_h"



    // $ANTLR start "midd_line_h"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:496:1: midd_line_h : DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] ;
    public final void midd_line_h() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:496:13: ( DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:497:3: DELIMITER1 spec_sized_tn[\"H.8\", 40] DELIMITER1 st_sized_optionnal[\"H.9\", 40] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_2[\"H.10\", 40] DELIMITER1 st_sized_optionnal[\"H.11\", 80] DELIMITER1 spec_const_7_12[\"H.12\"]
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1301); 

            pushFollow(FOLLOW_spec_sized_tn_in_midd_line_h1303);
            spec_sized_tn("H.8", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1308); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1310);
            st_sized_optionnal("H.9", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1315); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1317);
            spec_sized_mult_lvl1_st_mandatory_2("H.10", 40);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1322); 

            pushFollow(FOLLOW_st_sized_optionnal_in_midd_line_h1324);
            st_sized_optionnal("H.11", 80);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_midd_line_h1329); 

            pushFollow(FOLLOW_spec_const_7_12_in_midd_line_h1331);
            spec_const_7_12("H.12");

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "midd_line_h"



    // $ANTLR start "line_h2_2_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:505:1: line_h2_2_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:505:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:506:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_oru1344);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1348); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1350);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_oru1355);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1359); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1361);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1366); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1368);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:511:3: ( DELIMITER1 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==DELIMITER1) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:511:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_oru1373); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_oru"



    // $ANTLR start "line_h2_1_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:515:1: line_h2_1_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:515:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:516:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_oru1386);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1390); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1392);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_oru1397);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1401); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1403);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1408); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1410);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:521:3: ( DELIMITER1 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==DELIMITER1) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:521:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_oru1415); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_oru"



    // $ANTLR start "line_h2_0_oru"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:524:1: line_h2_0_oru : start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_oru() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:524:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:525:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORU[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_oru1427);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1431); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1433);
            spec_const_7_7_contexte_ORU("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_oru1438);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1442); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1444);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1449); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1451);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:530:3: ( DELIMITER1 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==DELIMITER1) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:530:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_oru1456); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_oru"



    // $ANTLR start "line_h2_2_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:533:1: line_h2_2_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:533:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:534:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_orm1468);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1472); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1474);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_orm1479);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1483); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1485);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1490); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1492);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:539:3: ( DELIMITER1 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==DELIMITER1) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:539:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_orm1497); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_orm"



    // $ANTLR start "line_h2_1_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:541:1: line_h2_1_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:541:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:542:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_orm1508);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1512); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1514);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_orm1519);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1523); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1525);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1530); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1532);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:547:3: ( DELIMITER1 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==DELIMITER1) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:547:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_orm1537); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_orm"



    // $ANTLR start "line_h2_0_orm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:549:1: line_h2_0_orm : start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_orm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:549:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:550:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_orm1548);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1552); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1554);
            spec_const_7_7_contexte_ORM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_orm1559);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1563); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1565);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1570); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1572);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:555:3: ( DELIMITER1 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==DELIMITER1) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:555:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_orm1577); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_orm"



    // $ANTLR start "line_h2_2_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:558:1: line_h2_2_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:558:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:559:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_ora1589);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1593); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1595);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_ora1600);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1604); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1606);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1611); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1613);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:564:3: ( DELIMITER1 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==DELIMITER1) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:564:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_ora1618); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_ora"



    // $ANTLR start "line_h2_1_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:566:1: line_h2_1_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:566:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:567:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_ora1629);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1633); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1635);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_ora1640);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1644); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1646);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1651); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1653);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:572:3: ( DELIMITER1 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==DELIMITER1) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:572:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_ora1658); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_ora"



    // $ANTLR start "line_h2_0_ora"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:574:1: line_h2_0_ora : start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_ora() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:574:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:575:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ORA[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_ora1669);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1673); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1675);
            spec_const_7_7_contexte_ORA("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_ora1680);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1684); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora1686);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1691); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_ora1693);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:580:3: ( DELIMITER1 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==DELIMITER1) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:580:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_ora1698); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_ora"



    // $ANTLR start "line_h2_2_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:583:1: line_h2_2_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:583:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:584:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_adm1710);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1714); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm1716);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_adm1721);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1725); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm1727);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1732); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_adm1734);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:589:3: ( DELIMITER1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==DELIMITER1) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:589:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_adm1739); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_adm"



    // $ANTLR start "line_h2_1_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:591:1: line_h2_1_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:591:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:592:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_adm1750);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm1754); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm1756);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_adm1761);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm1765); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm1767);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm1772); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_adm1774);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:597:3: ( DELIMITER1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==DELIMITER1) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:597:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_adm1779); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_adm"



    // $ANTLR start "line_h2_0_adm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:599:1: line_h2_0_adm : start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_adm() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:599:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:600:3: start_line_h DELIMITER1 spec_const_7_7_contexte_ADM[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_adm1790);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm1794); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm1796);
            spec_const_7_7_contexte_ADM("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_adm1801);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm1805); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm1807);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm1812); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_adm1814);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:605:3: ( DELIMITER1 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==DELIMITER1) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:605:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_adm1819); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_adm"



    // $ANTLR start "line_h2_2_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:608:1: line_h2_2_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_2_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:608:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:609:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_2[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_2_fac1831);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac1835); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac1837);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_2_fac1842);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac1846); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac1848);
            spec_const_7_13_version_2_2("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac1853); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_2_fac1855);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:614:3: ( DELIMITER1 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==DELIMITER1) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:614:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_2_fac1860); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_2_fac"



    // $ANTLR start "line_h2_1_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:616:1: line_h2_1_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_1_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:616:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:617:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_1[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_1_fac1871);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac1875); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac1877);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_1_fac1882);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac1886); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac1888);
            spec_const_7_13_version_2_1("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac1893); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_1_fac1895);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:622:3: ( DELIMITER1 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==DELIMITER1) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:622:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_1_fac1900); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_1_fac"



    // $ANTLR start "line_h2_0_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:624:1: line_h2_0_fac : start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? ;
    public final void line_h2_0_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:624:15: ( start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:625:3: start_line_h DELIMITER1 spec_const_7_7_contexte_FAC[\"H.7\"] midd_line_h DELIMITER1 spec_const_7_13_version_2_0[\"H.13\"] DELIMITER1 ts_sized_mandatory[\"H.14\", 26] ( DELIMITER1 )?
            {
            pushFollow(FOLLOW_start_line_h_in_line_h2_0_fac1911);
            start_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac1915); 

            pushFollow(FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac1917);
            spec_const_7_7_contexte_FAC("H.7");

            state._fsp--;


            pushFollow(FOLLOW_midd_line_h_in_line_h2_0_fac1922);
            midd_line_h();

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac1926); 

            pushFollow(FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac1928);
            spec_const_7_13_version_2_0("H.13");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac1933); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_h2_0_fac1935);
            ts_sized_mandatory("H.14", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:630:3: ( DELIMITER1 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==DELIMITER1) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:630:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_h2_0_fac1940); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_h2_0_fac"



    // $ANTLR start "line_ap"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:633:1: line_ap : ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? ;
    public final void line_ap() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:633:9: ( ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:634:3: ( CR CHARA CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"AP.2\", 4] DELIMITER1 st_sized_mandatory[\"AP.3\", 2] DELIMITER1 ts_sized_optionnal[\"AP.4\", 8] DELIMITER1 ts_sized_optionnal[\"AP.5\", 8] DELIMITER1 nm_integer_sized_mandatory[\"AP.6\", 15] DELIMITER1 st_sized_mandatory[\"AP.7\", 3] DELIMITER1 nm_sized_mandatory[\"AP.8\", 2] DELIMITER1 nm_sized_mandatory[\"AP.9\", 2] DELIMITER1 nm_sized_mandatory[\"AP.10\", 3] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 nm_sized_mandatory[\"AP.11\", 4] DELIMITER1 st_sized_mandatory[\"AP.12\", 1] DELIMITER1 st_sized_mandatory[\"AP.13\", 2] DELIMITER1 spec_sized_mult_lvl1_st_mandatory_6[\"AP.14\", 48] DELIMITER1 st_sized_optionnal[\"AP.15\", 24] DELIMITER1 nm_sized_mandatory[\"AP.16\", 6] ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:634:3: ( CR CHARA CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:634:4: CR CHARA CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_ap1953); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ap1955); 

            match(input,CHARP,FOLLOW_CHARP_in_line_ap1957); 

            }


            startElement("AP.1");content("AP");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1964); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap1966);
            nm_integer_sized_mandatory("AP.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1971); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap1973);
            st_sized_mandatory("AP.3", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1978); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap1980);
            ts_sized_optionnal("AP.4", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1985); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap1987);
            ts_sized_optionnal("AP.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1992); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ap1994);
            nm_integer_sized_mandatory("AP.6", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap1999); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2001);
            st_sized_mandatory("AP.7", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2006); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2008);
            nm_sized_mandatory("AP.8", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2013); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2015);
            nm_sized_mandatory("AP.9", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2020); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2022);
            nm_sized_mandatory("AP.10", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2027); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2029);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2034); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2036);
            nm_sized_mandatory("AP.11", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2041); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2043);
            st_sized_mandatory("AP.12", 1);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2048); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ap2050);
            st_sized_mandatory("AP.13", 2);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2055); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2057);
            spec_sized_mult_lvl1_st_mandatory_6("AP.14", 48);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2062); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2064);
            st_sized_optionnal("AP.15", 24);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2069); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_ap2071);
            nm_sized_mandatory("AP.16", 6);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:651:3: ( DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )? )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==DELIMITER1) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:651:4: DELIMITER1 nm_sized_optionnal[\"AP.17\", 9] ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2077); 

                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_ap2079);
                    nm_sized_optionnal("AP.17", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:652:4: ( DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )? )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==DELIMITER1) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:652:5: DELIMITER1 spec_on_optionnal[\"AP.18\"] ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2086); 

                            pushFollow(FOLLOW_spec_on_optionnal_in_line_ap2088);
                            spec_on_optionnal("AP.18");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:653:5: ( DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )? )?
                            int alt85=2;
                            int LA85_0 = input.LA(1);

                            if ( (LA85_0==DELIMITER1) ) {
                                alt85=1;
                            }
                            switch (alt85) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:653:6: DELIMITER1 ts_sized_optionnal[\"AP.19\", 8] ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2096); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2098);
                                    ts_sized_optionnal("AP.19", 8);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:654:6: ( DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )? )?
                                    int alt84=2;
                                    int LA84_0 = input.LA(1);

                                    if ( (LA84_0==DELIMITER1) ) {
                                        alt84=1;
                                    }
                                    switch (alt84) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:654:7: DELIMITER1 ts_sized_optionnal[\"AP.20\", 8] ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2107); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2109);
                                            ts_sized_optionnal("AP.20", 8);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:655:7: ( DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )? )?
                                            int alt83=2;
                                            int LA83_0 = input.LA(1);

                                            if ( (LA83_0==DELIMITER1) ) {
                                                alt83=1;
                                            }
                                            switch (alt83) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:655:8: DELIMITER1 st_sized_optionnal[\"AP.21\", 30] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2119); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ap2121);
                                                    st_sized_optionnal("AP.21", 30);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:656:8: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )? )?
                                                    int alt82=2;
                                                    int LA82_0 = input.LA(1);

                                                    if ( (LA82_0==DELIMITER1) ) {
                                                        alt82=1;
                                                    }
                                                    switch (alt82) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:656:9: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AP.22\", 200] ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2132); 

                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2134);
                                                            spec_sized_mult_lvl1_st_optionnal_6("AP.22", 200);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:657:9: ( DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )? )?
                                                            int alt81=2;
                                                            int LA81_0 = input.LA(1);

                                                            if ( (LA81_0==DELIMITER1) ) {
                                                                alt81=1;
                                                            }
                                                            switch (alt81) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:657:10: DELIMITER1 ts_sized_optionnal[\"AP.23\", 15] ( DELIMITER1 )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2146); 

                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_ap2148);
                                                                    ts_sized_optionnal("AP.23", 15);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:658:10: ( DELIMITER1 )?
                                                                    int alt80=2;
                                                                    int LA80_0 = input.LA(1);

                                                                    if ( (LA80_0==DELIMITER1) ) {
                                                                        alt80=1;
                                                                    }
                                                                    switch (alt80) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:658:10: DELIMITER1
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ap2160); 

                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ap"



    // $ANTLR start "line_ac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:661:1: line_ac : ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? ;
    public final void line_ac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:661:9: ( ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:662:3: ( CR CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"AC.2\", 4] DELIMITER1 st_sized_mandatory[\"AC.3\", 9] DELIMITER1 st_sized_mandatory[\"AC.4\", 15] DELIMITER1 ts_sized_optionnal[\"AC.5\", 8] DELIMITER1 ts_sized_mandatory[\"AC.6\", 8] DELIMITER1 st_sized_optionnal[\"AC.7\", 28] DELIMITER1 spec_ac_8[\"AC.8\", 10] ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:662:3: ( CR CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:662:4: CR CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_ac2187); 

            match(input,CHARA,FOLLOW_CHARA_in_line_ac2189); 

            match(input,CHARC,FOLLOW_CHARC_in_line_ac2191); 

            }


            startElement("AC.1");content("AC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2198); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_ac2200);
            nm_integer_sized_mandatory("AC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2205); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac2207);
            st_sized_mandatory("AC.3", 9);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2212); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_ac2214);
            st_sized_mandatory("AC.4", 15);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2219); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_ac2221);
            ts_sized_optionnal("AC.5", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2226); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_ac2228);
            ts_sized_mandatory("AC.6", 8);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2233); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_ac2235);
            st_sized_optionnal("AC.7", 28);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2240); 

            pushFollow(FOLLOW_spec_ac_8_in_line_ac2242);
            spec_ac_8("AC.8", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:670:3: ( DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )? )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==DELIMITER1) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:670:4: DELIMITER1 st_sized_optionnal[\"AC.9\", 40] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2248); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_ac2250);
                    st_sized_optionnal("AC.9", 40);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:671:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )? )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==DELIMITER1) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:671:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"AC.10\", 200] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2257); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac2259);
                            spec_sized_mult_lvl1_st_optionnal_6("AC.10", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:672:5: ( DELIMITER1 )?
                            int alt88=2;
                            int LA88_0 = input.LA(1);

                            if ( (LA88_0==DELIMITER1) ) {
                                alt88=1;
                            }
                            switch (alt88) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:672:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_ac2266); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_ac"



    // $ANTLR start "line_act"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:675:1: line_act : ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? ;
    public final void line_act() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:675:10: ( ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:676:3: ( CR CHARA CHARC CHART ) DELIMITER1 nm_integer_sized_mandatory[\"ACT.2\", 4] DELIMITER1 st_sized_mandatory[\"ACT.3\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.4\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.5\", 10] DELIMITER1 nm_sized_mandatory[\"ACT.6\", 10] DELIMITER1 st_sized_optionnal[\"ACT.7\", 64000] DELIMITER1 st_sized_optionnal[\"ACT.8\", 3] DELIMITER1 spec_fac_6[\"ACT.9\", 60] DELIMITER1 spec_act_10[\"ACT.10\", 64000] DELIMITER1 spec_act_11[\"ACT.11\"] ( DELIMITER1 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:676:3: ( CR CHARA CHARC CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:676:4: CR CHARA CHARC CHART
            {
            match(input,CR,FOLLOW_CR_in_line_act2283); 

            match(input,CHARA,FOLLOW_CHARA_in_line_act2285); 

            match(input,CHARC,FOLLOW_CHARC_in_line_act2287); 

            match(input,CHART,FOLLOW_CHART_in_line_act2289); 

            }


            startElement("ACT.1");content("ACT");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2296); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_act2298);
            nm_integer_sized_mandatory("ACT.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2303); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_act2305);
            st_sized_mandatory("ACT.3", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2310); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act2312);
            nm_sized_mandatory("ACT.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2317); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act2319);
            nm_sized_mandatory("ACT.5", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2324); 

            pushFollow(FOLLOW_nm_sized_mandatory_in_line_act2326);
            nm_sized_mandatory("ACT.6", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2331); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act2333);
            st_sized_optionnal("ACT.7", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2338); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_act2340);
            st_sized_optionnal("ACT.8", 3);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2345); 

            pushFollow(FOLLOW_spec_fac_6_in_line_act2347);
            spec_fac_6("ACT.9", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2352); 

            pushFollow(FOLLOW_spec_act_10_in_line_act2354);
            spec_act_10("ACT.10", 64000);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2359); 

            pushFollow(FOLLOW_spec_act_11_in_line_act2361);
            spec_act_11("ACT.11");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:687:3: ( DELIMITER1 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==DELIMITER1) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:687:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_act2366); 

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_act"



    // $ANTLR start "line_fac"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:690:1: line_fac : ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? ;
    public final void line_fac() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:690:10: ( ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:691:3: ( CR CHARF CHARA CHARC ) DELIMITER1 nm_integer_sized_mandatory[\"FAC.2\", 4] DELIMITER1 st_sized_mandatory[\"FAC.3\", 16] DELIMITER1 st_sized_mandatory[\"FAC.4\", 10] DELIMITER1 ts_sized_mandatory[\"FAC.5\", 26] ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:691:3: ( CR CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:691:4: CR CHARF CHARA CHARC
            {
            match(input,CR,FOLLOW_CR_in_line_fac2379); 

            match(input,CHARF,FOLLOW_CHARF_in_line_fac2381); 

            match(input,CHARA,FOLLOW_CHARA_in_line_fac2383); 

            match(input,CHARC,FOLLOW_CHARC_in_line_fac2385); 

            }


            startElement("FAC.1");content("FAC");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2392); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_fac2394);
            nm_integer_sized_mandatory("FAC.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2399); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac2401);
            st_sized_mandatory("FAC.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2406); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_fac2408);
            st_sized_mandatory("FAC.4", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2413); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_fac2415);
            ts_sized_mandatory("FAC.5", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:696:3: ( DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )? )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==DELIMITER1) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:696:4: DELIMITER1 spec_fac_6[\"FAC.6\", 60] ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2421); 

                    pushFollow(FOLLOW_spec_fac_6_in_line_fac2423);
                    spec_fac_6("FAC.6", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:697:4: ( DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )? )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==DELIMITER1) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:697:5: DELIMITER1 spec_fac_6[\"FAC.7\", 60] ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2430); 

                            pushFollow(FOLLOW_spec_fac_6_in_line_fac2432);
                            spec_fac_6("FAC.7", 60);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:698:5: ( DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )? )?
                            int alt93=2;
                            int LA93_0 = input.LA(1);

                            if ( (LA93_0==DELIMITER1) ) {
                                alt93=1;
                            }
                            switch (alt93) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:698:6: DELIMITER1 spec_on_optionnal[\"FAC.8\"] ( DELIMITER1 )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2440); 

                                    pushFollow(FOLLOW_spec_on_optionnal_in_line_fac2442);
                                    spec_on_optionnal("FAC.8");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:699:6: ( DELIMITER1 )?
                                    int alt92=2;
                                    int LA92_0 = input.LA(1);

                                    if ( (LA92_0==DELIMITER1) ) {
                                        alt92=1;
                                    }
                                    switch (alt92) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:699:6: DELIMITER1
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_fac2450); 

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_fac"



    // $ANTLR start "line_p"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:702:1: line_p : ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_p() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:702:8: ( ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:703:3: ( CR CHARP ) DELIMITER1 nm_integer_sized_mandatory[\"P.2\", 4] DELIMITER1 spec_sized_8_3[\"P.3\", 36] DELIMITER1 st_sized_optionnal[\"P.4\", 16] ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:703:3: ( CR CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:703:4: CR CHARP
            {
            match(input,CR,FOLLOW_CR_in_line_p2471); 

            match(input,CHARP,FOLLOW_CHARP_in_line_p2473); 

            }


            startElement("P.1");content("P");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2480); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_p2482);
            nm_integer_sized_mandatory("P.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2487); 

            pushFollow(FOLLOW_spec_sized_8_3_in_line_p2489);
            spec_sized_8_3("P.3", 36);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2494); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_p2496);
            st_sized_optionnal("P.4", 16);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:707:3: ( DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==DELIMITER1) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:707:4: DELIMITER1 st_sized_optionnal[\"P.5\", 16] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2502); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2504);
                    st_sized_optionnal("P.5", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:708:4: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==DELIMITER1) ) {
                        alt129=1;
                    }
                    switch (alt129) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:708:5: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.6\", 48] ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2511); 

                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2513);
                            spec_sized_mult_lvl1_st_optionnal_6("P.6", 48);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:709:5: ( DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt128=2;
                            int LA128_0 = input.LA(1);

                            if ( (LA128_0==DELIMITER1) ) {
                                alt128=1;
                            }
                            switch (alt128) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:709:6: DELIMITER1 st_sized_optionnal[\"P.7\", 24] ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2521); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2523);
                                    st_sized_optionnal("P.7", 24);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:710:6: ( DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt127=2;
                                    int LA127_0 = input.LA(1);

                                    if ( (LA127_0==DELIMITER1) ) {
                                        alt127=1;
                                    }
                                    switch (alt127) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:710:7: DELIMITER1 ts_sized_optionnal[\"P.8\", 26] ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2532); 

                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p2534);
                                            ts_sized_optionnal("P.8", 26);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:711:7: ( DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt126=2;
                                            int LA126_0 = input.LA(1);

                                            if ( (LA126_0==DELIMITER1) ) {
                                                alt126=1;
                                            }
                                            switch (alt126) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:711:8: DELIMITER1 spec_const_sexe[\"P.9\"] ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2544); 

                                                    pushFollow(FOLLOW_spec_const_sexe_in_line_p2546);
                                                    spec_const_sexe("P.9");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:712:8: ( DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt125=2;
                                                    int LA125_0 = input.LA(1);

                                                    if ( (LA125_0==DELIMITER1) ) {
                                                        alt125=1;
                                                    }
                                                    switch (alt125) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:712:9: DELIMITER1 spec_const_race[\"P.10\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2557); 

                                                            pushFollow(FOLLOW_spec_const_race_in_line_p2559);
                                                            spec_const_race("P.10");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:713:9: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt124=2;
                                                            int LA124_0 = input.LA(1);

                                                            if ( (LA124_0==DELIMITER1) ) {
                                                                alt124=1;
                                                            }
                                                            switch (alt124) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:713:10: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.11\", 200] ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2571); 

                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2573);
                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.11", 200);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:714:10: ( DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt123=2;
                                                                    int LA123_0 = input.LA(1);

                                                                    if ( (LA123_0==DELIMITER1) ) {
                                                                        alt123=1;
                                                                    }
                                                                    switch (alt123) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:714:11: DELIMITER1 st_sized_optionnal[\"P.12\", 120] ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2586); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p2588);
                                                                            st_sized_optionnal("P.12", 120);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:715:11: ( DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt122=2;
                                                                            int LA122_0 = input.LA(1);

                                                                            if ( (LA122_0==DELIMITER1) ) {
                                                                                alt122=1;
                                                                            }
                                                                            switch (alt122) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:715:12: DELIMITER1 spec_sized_tn[\"P.13\", 40] ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2602); 

                                                                                    pushFollow(FOLLOW_spec_sized_tn_in_line_p2604);
                                                                                    spec_sized_tn("P.13", 40);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:718:12: ( DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt121=2;
                                                                                    int LA121_0 = input.LA(1);

                                                                                    if ( (LA121_0==DELIMITER1) ) {
                                                                                        alt121=1;
                                                                                    }
                                                                                    switch (alt121) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:718:13: DELIMITER1 spec_sized_cna[\"P.14\", 60] ( REPETITEUR spec_sized_cna[\"P.14\", 60] )* ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2643); 

                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_p2645);
                                                                                            spec_sized_cna("P.14", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:718:51: ( REPETITEUR spec_sized_cna[\"P.14\", 60] )*
                                                                                            loop96:
                                                                                            do {
                                                                                                int alt96=2;
                                                                                                int LA96_0 = input.LA(1);

                                                                                                if ( (LA96_0==REPETITEUR) ) {
                                                                                                    alt96=1;
                                                                                                }


                                                                                                switch (alt96) {
                                                                                            	case 1 :
                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:718:52: REPETITEUR spec_sized_cna[\"P.14\", 60]
                                                                                            	    {
                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p2649); 

                                                                                            	    pushFollow(FOLLOW_spec_sized_cna_in_line_p2651);
                                                                                            	    spec_sized_cna("P.14", 60);

                                                                                            	    state._fsp--;


                                                                                            	    }
                                                                                            	    break;

                                                                                            	default :
                                                                                            	    break loop96;
                                                                                                }
                                                                                            } while (true);


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:719:13: ( DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt120=2;
                                                                                            int LA120_0 = input.LA(1);

                                                                                            if ( (LA120_0==DELIMITER1) ) {
                                                                                                alt120=1;
                                                                                            }
                                                                                            switch (alt120) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:719:14: DELIMITER1 st_sized_optionnal[\"P.15\", 60] ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2669); 

                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2671);
                                                                                                    st_sized_optionnal("P.15", 60);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:720:14: ( DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt119=2;
                                                                                                    int LA119_0 = input.LA(1);

                                                                                                    if ( (LA119_0==DELIMITER1) ) {
                                                                                                        alt119=1;
                                                                                                    }
                                                                                                    switch (alt119) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:720:15: DELIMITER1 st_sized_optionnal[\"P.16\", 60] ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2688); 

                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p2690);
                                                                                                            st_sized_optionnal("P.16", 60);

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:722:15: ( DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt118=2;
                                                                                                            int LA118_0 = input.LA(1);

                                                                                                            if ( (LA118_0==DELIMITER1) ) {
                                                                                                                alt118=1;
                                                                                                            }
                                                                                                            switch (alt118) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:722:16: DELIMITER1 nm_sized_optionnal[\"P.17\", 10] ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2723); 

                                                                                                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_p2725);
                                                                                                                    nm_sized_optionnal("P.17", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:724:16: ( DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt117=2;
                                                                                                                    int LA117_0 = input.LA(1);

                                                                                                                    if ( (LA117_0==DELIMITER1) ) {
                                                                                                                        alt117=1;
                                                                                                                    }
                                                                                                                    switch (alt117) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:724:17: DELIMITER1 nm_sized_optionnal[\"P.18\", 10] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2760); 

                                                                                                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_p2762);
                                                                                                                            nm_sized_optionnal("P.18", 10);

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:725:17: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt116=2;
                                                                                                                            int LA116_0 = input.LA(1);

                                                                                                                            if ( (LA116_0==DELIMITER1) ) {
                                                                                                                                alt116=1;
                                                                                                                            }
                                                                                                                            switch (alt116) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:725:18: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2782); 

                                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2784);
                                                                                                                                    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:725:78: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200] )*
                                                                                                                                    loop97:
                                                                                                                                    do {
                                                                                                                                        int alt97=2;
                                                                                                                                        int LA97_0 = input.LA(1);

                                                                                                                                        if ( (LA97_0==REPETITEUR) ) {
                                                                                                                                            alt97=1;
                                                                                                                                        }


                                                                                                                                        switch (alt97) {
                                                                                                                                    	case 1 :
                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:725:79: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"P.19\", 200]
                                                                                                                                    	    {
                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p2788); 

                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2790);
                                                                                                                                    	    spec_sized_mult_lvl1_st_optionnal_6("P.19", 200);

                                                                                                                                    	    state._fsp--;


                                                                                                                                    	    }
                                                                                                                                    	    break;

                                                                                                                                    	default :
                                                                                                                                    	    break loop97;
                                                                                                                                        }
                                                                                                                                    } while (true);


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:726:18: ( DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt115=2;
                                                                                                                                    int LA115_0 = input.LA(1);

                                                                                                                                    if ( (LA115_0==DELIMITER1) ) {
                                                                                                                                        alt115=1;
                                                                                                                                    }
                                                                                                                                    switch (alt115) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:726:19: DELIMITER1 st_sized_optionnal[\"P.20\", 200] ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )* ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2813); 

                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p2815);
                                                                                                                                            st_sized_optionnal("P.20", 200);

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:726:62: ( REPETITEUR st_sized_optionnal[\"P.20\", 200] )*
                                                                                                                                            loop98:
                                                                                                                                            do {
                                                                                                                                                int alt98=2;
                                                                                                                                                int LA98_0 = input.LA(1);

                                                                                                                                                if ( (LA98_0==REPETITEUR) ) {
                                                                                                                                                    alt98=1;
                                                                                                                                                }


                                                                                                                                                switch (alt98) {
                                                                                                                                            	case 1 :
                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:726:63: REPETITEUR st_sized_optionnal[\"P.20\", 200]
                                                                                                                                            	    {
                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p2819); 

                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2821);
                                                                                                                                            	    st_sized_optionnal("P.20", 200);

                                                                                                                                            	    state._fsp--;


                                                                                                                                            	    }
                                                                                                                                            	    break;

                                                                                                                                            	default :
                                                                                                                                            	    break loop98;
                                                                                                                                                }
                                                                                                                                            } while (true);


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:727:19: ( DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt114=2;
                                                                                                                                            int LA114_0 = input.LA(1);

                                                                                                                                            if ( (LA114_0==DELIMITER1) ) {
                                                                                                                                                alt114=1;
                                                                                                                                            }
                                                                                                                                            switch (alt114) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:727:20: DELIMITER1 st_sized_optionnal[\"P.21\", 200] ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2845); 

                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2847);
                                                                                                                                                    st_sized_optionnal("P.21", 200);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:728:20: ( DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt113=2;
                                                                                                                                                    int LA113_0 = input.LA(1);

                                                                                                                                                    if ( (LA113_0==DELIMITER1) ) {
                                                                                                                                                        alt113=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt113) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:728:21: DELIMITER1 st_sized_optionnal[\"P.22\", 60] ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2870); 

                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p2872);
                                                                                                                                                            st_sized_optionnal("P.22", 60);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:729:21: ( DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt112=2;
                                                                                                                                                            int LA112_0 = input.LA(1);

                                                                                                                                                            if ( (LA112_0==DELIMITER1) ) {
                                                                                                                                                                alt112=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt112) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:729:22: DELIMITER1 st_sized_optionnal[\"P.23\", 60] ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2896); 

                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p2898);
                                                                                                                                                                    st_sized_optionnal("P.23", 60);

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:730:22: ( DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                    int alt111=2;
                                                                                                                                                                    int LA111_0 = input.LA(1);

                                                                                                                                                                    if ( (LA111_0==DELIMITER1) ) {
                                                                                                                                                                        alt111=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt111) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:730:23: DELIMITER1 ts_sized_optionnal[\"P.24\", 26] ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )? ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2923); 

                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p2925);
                                                                                                                                                                            ts_sized_optionnal("P.24", 26);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:730:65: ( REPETITEUR ts_sized_optionnal[\"P.24\", 26] )?
                                                                                                                                                                            int alt99=2;
                                                                                                                                                                            int LA99_0 = input.LA(1);

                                                                                                                                                                            if ( (LA99_0==REPETITEUR) ) {
                                                                                                                                                                                alt99=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt99) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:730:66: REPETITEUR ts_sized_optionnal[\"P.24\", 26]
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_p2929); 

                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p2931);
                                                                                                                                                                                    ts_sized_optionnal("P.24", 26);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:731:23: ( DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                            int alt110=2;
                                                                                                                                                                            int LA110_0 = input.LA(1);

                                                                                                                                                                            if ( (LA110_0==DELIMITER1) ) {
                                                                                                                                                                                alt110=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt110) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:731:24: DELIMITER1 spec_const_8_25[\"P.25\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2959); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_const_8_25_in_line_p2961);
                                                                                                                                                                                    spec_const_8_25("P.25");

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:732:24: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                    int alt109=2;
                                                                                                                                                                                    int LA109_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA109_0==DELIMITER1) ) {
                                                                                                                                                                                        alt109=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt109) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:732:25: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_8[\"P.26\", 100] ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p2988); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p2990);
                                                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_8("P.26", 100);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:734:25: ( DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                                                            int alt108=2;
                                                                                                                                                                                            int LA108_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA108_0==DELIMITER1) ) {
                                                                                                                                                                                                alt108=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt108) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:734:26: DELIMITER1 st_sized_optionnal[\"P.27\", 100] ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3043); 

                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p3045);
                                                                                                                                                                                                    st_sized_optionnal("P.27", 100);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:735:26: ( DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                                                                    int alt107=2;
                                                                                                                                                                                                    int LA107_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA107_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt107=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt107) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:735:27: DELIMITER1 spec_const_race[\"P.28\"] ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3074); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_p3076);
                                                                                                                                                                                                            spec_const_race("P.28");

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:737:27: ( DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                                                            int alt106=2;
                                                                                                                                                                                                            int LA106_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA106_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt106=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt106) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:737:28: DELIMITER1 st_sized_optionnal[\"P.29\", 2] ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3133); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p3135);
                                                                                                                                                                                                                    st_sized_optionnal("P.29", 2);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:739:28: ( DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                                                                    int alt105=2;
                                                                                                                                                                                                                    int LA105_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA105_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt105=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt105) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:739:29: DELIMITER1 st_sized_optionnal[\"P.30\", 20] ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3194); 

                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p3196);
                                                                                                                                                                                                                            st_sized_optionnal("P.30", 20);

                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:740:29: ( DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                                                            int alt104=2;
                                                                                                                                                                                                                            int LA104_0 = input.LA(1);

                                                                                                                                                                                                                            if ( (LA104_0==DELIMITER1) ) {
                                                                                                                                                                                                                                alt104=1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            switch (alt104) {
                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:740:30: DELIMITER1 st_sized_optionnal[\"P.31\", 20] ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3228); 

                                                                                                                                                                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_p3230);
                                                                                                                                                                                                                                    st_sized_optionnal("P.31", 20);

                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:742:30: ( DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                                                                    int alt103=2;
                                                                                                                                                                                                                                    int LA103_0 = input.LA(1);

                                                                                                                                                                                                                                    if ( (LA103_0==DELIMITER1) ) {
                                                                                                                                                                                                                                        alt103=1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    switch (alt103) {
                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:742:31: DELIMITER1 st_sized_optionnal[\"P.32\", 20] ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3293); 

                                                                                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_p3295);
                                                                                                                                                                                                                                            st_sized_optionnal("P.32", 20);

                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:743:31: ( DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                                                            int alt102=2;
                                                                                                                                                                                                                                            int LA102_0 = input.LA(1);

                                                                                                                                                                                                                                            if ( (LA102_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                alt102=1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            switch (alt102) {
                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:743:32: DELIMITER1 ts_sized_optionnal[\"P.33\", 26] ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3329); 

                                                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_p3331);
                                                                                                                                                                                                                                                    ts_sized_optionnal("P.33", 26);

                                                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:744:32: ( DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                                                                    int alt101=2;
                                                                                                                                                                                                                                                    int LA101_0 = input.LA(1);

                                                                                                                                                                                                                                                    if ( (LA101_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                        alt101=1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    switch (alt101) {
                                                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:744:33: DELIMITER1 ts_sized_optionnal[\"P.34\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3366); 

                                                                                                                                                                                                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_p3368);
                                                                                                                                                                                                                                                            ts_sized_optionnal("P.34", 26);

                                                                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:745:33: ( DELIMITER1 )?
                                                                                                                                                                                                                                                            int alt100=2;
                                                                                                                                                                                                                                                            int LA100_0 = input.LA(1);

                                                                                                                                                                                                                                                            if ( (LA100_0==DELIMITER1) ) {
                                                                                                                                                                                                                                                                alt100=1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            switch (alt100) {
                                                                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:745:33: DELIMITER1
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_p3403); 

                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                                            }


                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                                    }


                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    break;

                                                                                                                                                                                                                            }


                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_p"



    // $ANTLR start "line_reg"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:748:1: line_reg : ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? ;
    public final void line_reg() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:748:10: ( ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:749:3: ( CR CHARR CHARE CHARG ) DELIMITER1 nm_integer_sized_mandatory[\"REG.2\", 4] DELIMITER1 st_sized_mandatory[\"REG.3\", 16] DELIMITER1 spec_reg_4[\"REG.4\", 11] DELIMITER1 spec_p_or_m[\"REG.5\"] DELIMITER1 ts_sized_mandatory[\"REG.6\", 26] ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:749:3: ( CR CHARR CHARE CHARG )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:749:4: CR CHARR CHARE CHARG
            {
            match(input,CR,FOLLOW_CR_in_line_reg3476); 

            match(input,CHARR,FOLLOW_CHARR_in_line_reg3478); 

            match(input,CHARE,FOLLOW_CHARE_in_line_reg3480); 

            match(input,CHARG,FOLLOW_CHARG_in_line_reg3482); 

            }


            startElement("REG.1");content("REG");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3489); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_reg3491);
            nm_integer_sized_mandatory("REG.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3496); 

            pushFollow(FOLLOW_st_sized_mandatory_in_line_reg3498);
            st_sized_mandatory("REG.3", 16);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3503); 

            pushFollow(FOLLOW_spec_reg_4_in_line_reg3505);
            spec_reg_4("REG.4", 11);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3510); 

            pushFollow(FOLLOW_spec_p_or_m_in_line_reg3512);
            spec_p_or_m("REG.5");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3517); 

            pushFollow(FOLLOW_ts_sized_mandatory_in_line_reg3519);
            ts_sized_mandatory("REG.6", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:756:3: ( DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )? )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==DELIMITER1) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:756:4: DELIMITER1 st_sized_optionnal[\"REG.7\", 60] ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3528); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_reg3530);
                    st_sized_optionnal("REG.7", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:757:4: ( DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )? )?
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==DELIMITER1) ) {
                        alt132=1;
                    }
                    switch (alt132) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:757:5: DELIMITER1 st_sized_optionnal[\"REG.8\", 10] ( DELIMITER1 )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3537); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_reg3539);
                            st_sized_optionnal("REG.8", 10);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:758:5: ( DELIMITER1 )?
                            int alt131=2;
                            int LA131_0 = input.LA(1);

                            if ( (LA131_0==DELIMITER1) ) {
                                alt131=1;
                            }
                            switch (alt131) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:758:5: DELIMITER1
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_reg3546); 

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_reg"



    // $ANTLR start "line_obr"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:760:1: line_obr : ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? ;
    public final void line_obr() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:760:10: ( ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:761:3: ( CR CHARO CHARB CHARR ) DELIMITER1 nm_integer_sized_mandatory[\"OBR.2\", 4] DELIMITER1 spec_sized_9_3[\"OBR.3\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.4\", 23] DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 640000] ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )* DELIMITER1 st_sized_optionnal[\"OBR.6\", 2] ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )* DELIMITER1 ts_sized_optionnal[\"OBR.7\", 26] DELIMITER1 spec_non_sized_9_8[\"OBR.8\"] DELIMITER1 ts_sized_optionnal[\"OBR.9\", 26] DELIMITER1 st_sized_optionnal[\"OBR.10\", 20] DELIMITER1 spec_sized_cna[\"OBR.11\", 60] DELIMITER1 st_sized_optionnal[\"OBR.12\", 1] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:761:3: ( CR CHARO CHARB CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:761:4: CR CHARO CHARB CHARR
            {
            match(input,CR,FOLLOW_CR_in_line_obr3562); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obr3564); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obr3566); 

            match(input,CHARR,FOLLOW_CHARR_in_line_obr3568); 

            }


            startElement("OBR.1");content("OBR");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3575); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obr3577);
            nm_integer_sized_mandatory("OBR.2", 4);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3582); 

            pushFollow(FOLLOW_spec_sized_9_3_in_line_obr3584);
            spec_sized_9_3("OBR.3", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3589); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3591);
            spec_sized_mult_lvl1_st_optionnal_2("OBR.4", 23);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3596); 

            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3598);
            spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 640000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:765:67: ( REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000] )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==REPETITEUR) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:765:68: REPETITEUR spec_sized_mult_lvl1_st_optionnal_6[\"OBR.5\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr3602); 

            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3604);
            	    spec_sized_mult_lvl1_st_optionnal_6("OBR.5", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3614); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3616);
            st_sized_optionnal("OBR.6", 2);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:767:45: ( REPETITEUR st_sized_optionnal[\"OBR.6\", 2] )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==REPETITEUR) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:767:46: REPETITEUR st_sized_optionnal[\"OBR.6\", 2]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr3620); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3622);
            	    st_sized_optionnal("OBR.6", 2);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3629); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr3631);
            ts_sized_optionnal("OBR.7", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3636); 

            pushFollow(FOLLOW_spec_non_sized_9_8_in_line_obr3638);
            spec_non_sized_9_8("OBR.8");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3643); 

            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr3645);
            ts_sized_optionnal("OBR.9", 26);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3653); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3655);
            st_sized_optionnal("OBR.10", 20);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3660); 

            pushFollow(FOLLOW_spec_sized_cna_in_line_obr3662);
            spec_sized_cna("OBR.11", 60);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3670); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3672);
            st_sized_optionnal("OBR.12", 1);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:777:3: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==DELIMITER1) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:777:4: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.13\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3681); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3683);
                    spec_sized_mult_lvl1_st_optionnal_2("OBR.13", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:778:4: ( DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                    int alt162=2;
                    int LA162_0 = input.LA(1);

                    if ( (LA162_0==DELIMITER1) ) {
                        alt162=1;
                    }
                    switch (alt162) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:778:5: DELIMITER1 st_sized_optionnal[\"OBR.14\", 300] ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3690); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3692);
                            st_sized_optionnal("OBR.14", 300);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:779:5: ( DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                            int alt161=2;
                            int LA161_0 = input.LA(1);

                            if ( (LA161_0==DELIMITER1) ) {
                                alt161=1;
                            }
                            switch (alt161) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:779:6: DELIMITER1 ts_sized_optionnal[\"OBR.15\", 26] ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3700); 

                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr3702);
                                    ts_sized_optionnal("OBR.15", 26);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:780:6: ( DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                    int alt160=2;
                                    int LA160_0 = input.LA(1);

                                    if ( (LA160_0==DELIMITER1) ) {
                                        alt160=1;
                                    }
                                    switch (alt160) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:780:7: DELIMITER1 spec_sized_9_16[\"OBR.16\", 300] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3711); 

                                            pushFollow(FOLLOW_spec_sized_9_16_in_line_obr3713);
                                            spec_sized_9_16("OBR.16", 300);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:781:7: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                            int alt159=2;
                                            int LA159_0 = input.LA(1);

                                            if ( (LA159_0==DELIMITER1) ) {
                                                alt159=1;
                                            }
                                            switch (alt159) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:781:8: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBR.17\", 60] ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3723); 

                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3725);
                                                    spec_sized_mult_lvl1_st_optionnal_6("OBR.17", 60);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:782:8: ( DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                    int alt158=2;
                                                    int LA158_0 = input.LA(1);

                                                    if ( (LA158_0==DELIMITER1) ) {
                                                        alt158=1;
                                                    }
                                                    switch (alt158) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:782:9: DELIMITER1 spec_sized_tn[\"OBR.18\", 40] ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3736); 

                                                            pushFollow(FOLLOW_spec_sized_tn_in_line_obr3738);
                                                            spec_sized_tn("OBR.18", 40);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:783:9: ( DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                            int alt157=2;
                                                            int LA157_0 = input.LA(1);

                                                            if ( (LA157_0==DELIMITER1) ) {
                                                                alt157=1;
                                                            }
                                                            switch (alt157) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:783:10: DELIMITER1 st_sized_optionnal[\"OBR.19\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3750); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3752);
                                                                    st_sized_optionnal("OBR.19", 60);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:784:10: ( DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                    int alt156=2;
                                                                    int LA156_0 = input.LA(1);

                                                                    if ( (LA156_0==DELIMITER1) ) {
                                                                        alt156=1;
                                                                    }
                                                                    switch (alt156) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:784:11: DELIMITER1 st_sized_optionnal[\"OBR.20\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3765); 

                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3767);
                                                                            st_sized_optionnal("OBR.20", 60);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:785:11: ( DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                            int alt155=2;
                                                                            int LA155_0 = input.LA(1);

                                                                            if ( (LA155_0==DELIMITER1) ) {
                                                                                alt155=1;
                                                                            }
                                                                            switch (alt155) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:785:12: DELIMITER1 st_sized_optionnal[\"OBR.21\", 60] ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3781); 

                                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3783);
                                                                                    st_sized_optionnal("OBR.21", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:786:12: ( DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                    int alt154=2;
                                                                                    int LA154_0 = input.LA(1);

                                                                                    if ( (LA154_0==DELIMITER1) ) {
                                                                                        alt154=1;
                                                                                    }
                                                                                    switch (alt154) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:786:13: DELIMITER1 st_sized_optionnal[\"OBR.22\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3798); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr3800);
                                                                                            st_sized_optionnal("OBR.22", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:787:13: ( DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                            int alt153=2;
                                                                                            int LA153_0 = input.LA(1);

                                                                                            if ( (LA153_0==DELIMITER1) ) {
                                                                                                alt153=1;
                                                                                            }
                                                                                            switch (alt153) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:787:14: DELIMITER1 ts_sized_optionnal[\"OBR.23\", 26] ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3816); 

                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr3818);
                                                                                                    ts_sized_optionnal("OBR.23", 26);

                                                                                                    state._fsp--;


                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:788:14: ( DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                    int alt152=2;
                                                                                                    int LA152_0 = input.LA(1);

                                                                                                    if ( (LA152_0==DELIMITER1) ) {
                                                                                                        alt152=1;
                                                                                                    }
                                                                                                    switch (alt152) {
                                                                                                        case 1 :
                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:788:15: DELIMITER1 spec_const_race[\"OBR.24\"] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            {
                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3835); 

                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr3837);
                                                                                                            spec_const_race("OBR.24");

                                                                                                            state._fsp--;


                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:789:15: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                            int alt151=2;
                                                                                                            int LA151_0 = input.LA(1);

                                                                                                            if ( (LA151_0==DELIMITER1) ) {
                                                                                                                alt151=1;
                                                                                                            }
                                                                                                            switch (alt151) {
                                                                                                                case 1 :
                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:789:16: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_2[\"OBR.25\", 10] ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    {
                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3855); 

                                                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3857);
                                                                                                                    spec_sized_mult_lvl1_st_optionnal_2("OBR.25", 10);

                                                                                                                    state._fsp--;


                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:790:16: ( DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                    int alt150=2;
                                                                                                                    int LA150_0 = input.LA(1);

                                                                                                                    if ( (LA150_0==DELIMITER1) ) {
                                                                                                                        alt150=1;
                                                                                                                    }
                                                                                                                    switch (alt150) {
                                                                                                                        case 1 :
                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:790:17: DELIMITER1 spec_const_9_26[\"OBR.26\"] ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            {
                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3876); 

                                                                                                                            pushFollow(FOLLOW_spec_const_9_26_in_line_obr3878);
                                                                                                                            spec_const_9_26("OBR.26");

                                                                                                                            state._fsp--;


                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:791:17: ( DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                            int alt149=2;
                                                                                                                            int LA149_0 = input.LA(1);

                                                                                                                            if ( (LA149_0==DELIMITER1) ) {
                                                                                                                                alt149=1;
                                                                                                                            }
                                                                                                                            switch (alt149) {
                                                                                                                                case 1 :
                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:791:18: DELIMITER1 spec_const_race[\"OBR.27\"] ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    {
                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3898); 

                                                                                                                                    pushFollow(FOLLOW_spec_const_race_in_line_obr3900);
                                                                                                                                    spec_const_race("OBR.27");

                                                                                                                                    state._fsp--;


                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:792:18: ( DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
                                                                                                                                    int alt148=2;
                                                                                                                                    int LA148_0 = input.LA(1);

                                                                                                                                    if ( (LA148_0==DELIMITER1) ) {
                                                                                                                                        alt148=1;
                                                                                                                                    }
                                                                                                                                    switch (alt148) {
                                                                                                                                        case 1 :
                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:792:19: DELIMITER1 spec_const_race[\"OBR.28\"] ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            {
                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3921); 

                                                                                                                                            pushFollow(FOLLOW_spec_const_race_in_line_obr3923);
                                                                                                                                            spec_const_race("OBR.28");

                                                                                                                                            state._fsp--;


                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:793:19: ( DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                                                                                                                                            int alt147=2;
                                                                                                                                            int LA147_0 = input.LA(1);

                                                                                                                                            if ( (LA147_0==DELIMITER1) ) {
                                                                                                                                                alt147=1;
                                                                                                                                            }
                                                                                                                                            switch (alt147) {
                                                                                                                                                case 1 :
                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:793:20: DELIMITER1 spec_sized_cna[\"OBR.29\", 150] ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )* ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    {
                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3945); 

                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr3947);
                                                                                                                                                    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    state._fsp--;


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:793:61: ( REPETITEUR spec_sized_cna[\"OBR.29\", 150] )*
                                                                                                                                                    loop136:
                                                                                                                                                    do {
                                                                                                                                                        int alt136=2;
                                                                                                                                                        int LA136_0 = input.LA(1);

                                                                                                                                                        if ( (LA136_0==REPETITEUR) ) {
                                                                                                                                                            alt136=1;
                                                                                                                                                        }


                                                                                                                                                        switch (alt136) {
                                                                                                                                                    	case 1 :
                                                                                                                                                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:793:62: REPETITEUR spec_sized_cna[\"OBR.29\", 150]
                                                                                                                                                    	    {
                                                                                                                                                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr3951); 

                                                                                                                                                    	    pushFollow(FOLLOW_spec_sized_cna_in_line_obr3953);
                                                                                                                                                    	    spec_sized_cna("OBR.29", 150);

                                                                                                                                                    	    state._fsp--;


                                                                                                                                                    	    }
                                                                                                                                                    	    break;

                                                                                                                                                    	default :
                                                                                                                                                    	    break loop136;
                                                                                                                                                        }
                                                                                                                                                    } while (true);


                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:794:20: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                                                                                                                                                    int alt146=2;
                                                                                                                                                    int LA146_0 = input.LA(1);

                                                                                                                                                    if ( (LA146_0==DELIMITER1) ) {
                                                                                                                                                        alt146=1;
                                                                                                                                                    }
                                                                                                                                                    switch (alt146) {
                                                                                                                                                        case 1 :
                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:794:21: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_4[\"OBR.30\", 150] ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            {
                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr3978); 

                                                                                                                                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr3980);
                                                                                                                                                            spec_sized_mult_lvl1_st_optionnal_4("OBR.30", 150);

                                                                                                                                                            state._fsp--;


                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:795:21: ( DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                                                                                                                                            int alt145=2;
                                                                                                                                                            int LA145_0 = input.LA(1);

                                                                                                                                                            if ( (LA145_0==DELIMITER1) ) {
                                                                                                                                                                alt145=1;
                                                                                                                                                            }
                                                                                                                                                            switch (alt145) {
                                                                                                                                                                case 1 :
                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:795:22: DELIMITER1 spec_const_9_31[\"OBR.31\"] ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    {
                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4004); 

                                                                                                                                                                    pushFollow(FOLLOW_spec_const_9_31_in_line_obr4006);
                                                                                                                                                                    spec_const_9_31("OBR.31");

                                                                                                                                                                    state._fsp--;


                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:797:22: ( DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )? )?
                                                                                                                                                                    int alt144=2;
                                                                                                                                                                    int LA144_0 = input.LA(1);

                                                                                                                                                                    if ( (LA144_0==DELIMITER1) ) {
                                                                                                                                                                        alt144=1;
                                                                                                                                                                    }
                                                                                                                                                                    switch (alt144) {
                                                                                                                                                                        case 1 :
                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:797:23: DELIMITER1 st_sized_optionnal[\"OBR.32\", 300] ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )* ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            {
                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4053); 

                                                                                                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obr4055);
                                                                                                                                                                            st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            state._fsp--;


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:797:68: ( REPETITEUR st_sized_optionnal[\"OBR.32\", 300] )*
                                                                                                                                                                            loop137:
                                                                                                                                                                            do {
                                                                                                                                                                                int alt137=2;
                                                                                                                                                                                int LA137_0 = input.LA(1);

                                                                                                                                                                                if ( (LA137_0==REPETITEUR) ) {
                                                                                                                                                                                    alt137=1;
                                                                                                                                                                                }


                                                                                                                                                                                switch (alt137) {
                                                                                                                                                                            	case 1 :
                                                                                                                                                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:797:69: REPETITEUR st_sized_optionnal[\"OBR.32\", 300]
                                                                                                                                                                            	    {
                                                                                                                                                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obr4059); 

                                                                                                                                                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obr4061);
                                                                                                                                                                            	    st_sized_optionnal("OBR.32", 300);

                                                                                                                                                                            	    state._fsp--;


                                                                                                                                                                            	    }
                                                                                                                                                                            	    break;

                                                                                                                                                                            	default :
                                                                                                                                                                            	    break loop137;
                                                                                                                                                                                }
                                                                                                                                                                            } while (true);


                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:798:23: ( DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )? )?
                                                                                                                                                                            int alt143=2;
                                                                                                                                                                            int LA143_0 = input.LA(1);

                                                                                                                                                                            if ( (LA143_0==DELIMITER1) ) {
                                                                                                                                                                                alt143=1;
                                                                                                                                                                            }
                                                                                                                                                                            switch (alt143) {
                                                                                                                                                                                case 1 :
                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:798:24: DELIMITER1 spec_sized_cna[\"OBR.33\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    {
                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4089); 

                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr4091);
                                                                                                                                                                                    spec_sized_cna("OBR.33", 60);

                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:799:24: ( DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )? )?
                                                                                                                                                                                    int alt142=2;
                                                                                                                                                                                    int LA142_0 = input.LA(1);

                                                                                                                                                                                    if ( (LA142_0==DELIMITER1) ) {
                                                                                                                                                                                        alt142=1;
                                                                                                                                                                                    }
                                                                                                                                                                                    switch (alt142) {
                                                                                                                                                                                        case 1 :
                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:799:25: DELIMITER1 spec_sized_cna[\"OBR.34\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            {
                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4118); 

                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr4120);
                                                                                                                                                                                            spec_sized_cna("OBR.34", 60);

                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:800:25: ( DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )? )?
                                                                                                                                                                                            int alt141=2;
                                                                                                                                                                                            int LA141_0 = input.LA(1);

                                                                                                                                                                                            if ( (LA141_0==DELIMITER1) ) {
                                                                                                                                                                                                alt141=1;
                                                                                                                                                                                            }
                                                                                                                                                                                            switch (alt141) {
                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:800:26: DELIMITER1 spec_sized_cna[\"OBR.35\", 60] ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    {
                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4148); 

                                                                                                                                                                                                    pushFollow(FOLLOW_spec_sized_cna_in_line_obr4150);
                                                                                                                                                                                                    spec_sized_cna("OBR.35", 60);

                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:801:26: ( DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )? )?
                                                                                                                                                                                                    int alt140=2;
                                                                                                                                                                                                    int LA140_0 = input.LA(1);

                                                                                                                                                                                                    if ( (LA140_0==DELIMITER1) ) {
                                                                                                                                                                                                        alt140=1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    switch (alt140) {
                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:801:27: DELIMITER1 spec_sized_cna[\"OBR.36\", 60] ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            {
                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4179); 

                                                                                                                                                                                                            pushFollow(FOLLOW_spec_sized_cna_in_line_obr4181);
                                                                                                                                                                                                            spec_sized_cna("OBR.36", 60);

                                                                                                                                                                                                            state._fsp--;


                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:802:27: ( DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )? )?
                                                                                                                                                                                                            int alt139=2;
                                                                                                                                                                                                            int LA139_0 = input.LA(1);

                                                                                                                                                                                                            if ( (LA139_0==DELIMITER1) ) {
                                                                                                                                                                                                                alt139=1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            switch (alt139) {
                                                                                                                                                                                                                case 1 :
                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:802:28: DELIMITER1 ts_sized_optionnal[\"OBR.37\", 26] ( DELIMITER1 )?
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4211); 

                                                                                                                                                                                                                    pushFollow(FOLLOW_ts_sized_optionnal_in_line_obr4213);
                                                                                                                                                                                                                    ts_sized_optionnal("OBR.37", 26);

                                                                                                                                                                                                                    state._fsp--;


                                                                                                                                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:803:29: ( DELIMITER1 )?
                                                                                                                                                                                                                    int alt138=2;
                                                                                                                                                                                                                    int LA138_0 = input.LA(1);

                                                                                                                                                                                                                    if ( (LA138_0==DELIMITER1) ) {
                                                                                                                                                                                                                        alt138=1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    switch (alt138) {
                                                                                                                                                                                                                        case 1 :
                                                                                                                                                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:803:29: DELIMITER1
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obr4244); 

                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break;

                                                                                                                                                                                                                    }


                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    break;

                                                                                                                                                                                                            }


                                                                                                                                                                                                            }
                                                                                                                                                                                                            break;

                                                                                                                                                                                                    }


                                                                                                                                                                                                    }
                                                                                                                                                                                                    break;

                                                                                                                                                                                            }


                                                                                                                                                                                            }
                                                                                                                                                                                            break;

                                                                                                                                                                                    }


                                                                                                                                                                                    }
                                                                                                                                                                                    break;

                                                                                                                                                                            }


                                                                                                                                                                            }
                                                                                                                                                                            break;

                                                                                                                                                                    }


                                                                                                                                                                    }
                                                                                                                                                                    break;

                                                                                                                                                            }


                                                                                                                                                            }
                                                                                                                                                            break;

                                                                                                                                                    }


                                                                                                                                                    }
                                                                                                                                                    break;

                                                                                                                                            }


                                                                                                                                            }
                                                                                                                                            break;

                                                                                                                                    }


                                                                                                                                    }
                                                                                                                                    break;

                                                                                                                            }


                                                                                                                            }
                                                                                                                            break;

                                                                                                                    }


                                                                                                                    }
                                                                                                                    break;

                                                                                                            }


                                                                                                            }
                                                                                                            break;

                                                                                                    }


                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obr"



    // $ANTLR start "line_obx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:805:1: line_obx : ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) ;
    public final void line_obx() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:805:10: ( ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:806:3: ( CR CHARO CHARB CHARX ) DELIMITER1 nm_integer_sized_mandatory[\"OBX.2\", 10] DELIMITER1 ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:806:3: ( CR CHARO CHARB CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:806:4: CR CHARO CHARB CHARX
            {
            match(input,CR,FOLLOW_CR_in_line_obx4306); 

            match(input,CHARO,FOLLOW_CHARO_in_line_obx4308); 

            match(input,CHARB,FOLLOW_CHARB_in_line_obx4310); 

            match(input,CHARX,FOLLOW_CHARX_in_line_obx4312); 

            }


            startElement("OBX.1");content("OBX");endElement();

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4319); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_obx4321);
            nm_integer_sized_mandatory("OBX.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4326); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:809:5: ( ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) | ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? ) )
            int alt199=7;
            switch ( input.LA(1) ) {
            case CHARN:
                {
                alt199=1;
                }
                break;
            case CHARC:
                {
                int LA199_2 = input.LA(2);

                if ( (LA199_2==CHARE) ) {
                    alt199=2;
                }
                else if ( (LA199_2==CHARK||LA199_2==CHARN) ) {
                    alt199=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 199, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARF:
                {
                alt199=3;
                }
                break;
            case CHARS:
                {
                alt199=4;
                }
                break;
            case CHARG:
                {
                int LA199_5 = input.LA(2);

                if ( (LA199_5==CHARC) ) {
                    alt199=5;
                }
                else if ( (LA199_5==CHARB||LA199_5==CHARN) ) {
                    alt199=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 199, 5, input);

                    throw nvae;

                }
                }
                break;
            case CHART:
                {
                int LA199_6 = input.LA(2);

                if ( (LA199_6==CHARX) ) {
                    alt199=6;
                }
                else if ( (LA199_6==CHARN) ) {
                    alt199=7;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 199, 6, input);

                    throw nvae;

                }
                }
                break;
            case CHARA:
            case CHARD:
            case CHARP:
                {
                alt199=7;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;

            }

            switch (alt199) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:809:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:809:6: ( spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:809:7: spec_const_10_3_nm[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_nm_in_line_obx4334);
                    spec_const_10_3_nm("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:810:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==DELIMITER1) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:810:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4343); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4345);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:811:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt167=2;
                            int LA167_0 = input.LA(1);

                            if ( (LA167_0==DELIMITER1) ) {
                                alt167=1;
                            }
                            switch (alt167) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:811:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4355); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4357);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:812:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt166=2;
                                    int LA166_0 = input.LA(1);

                                    if ( (LA166_0==DELIMITER1) ) {
                                        alt166=1;
                                    }
                                    switch (alt166) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:812:9: DELIMITER1 nm_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4368); 

                                            pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx4370);
                                            nm_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:812:55: ( REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop164:
                                            do {
                                                int alt164=2;
                                                int LA164_0 = input.LA(1);

                                                if ( (LA164_0==REPETITEUR) ) {
                                                    alt164=1;
                                                }


                                                switch (alt164) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:812:56: REPETITEUR nm_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4374); 

                                            	    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx4376);
                                            	    nm_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop164;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:813:9: ( line_obx2_1_post10_6 )?
                                            int alt165=2;
                                            int LA165_0 = input.LA(1);

                                            if ( (LA165_0==DELIMITER1) ) {
                                                alt165=1;
                                            }
                                            switch (alt165) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:813:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4389);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:814:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:814:7: ( spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:814:8: spec_const_10_3_ce[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_ce_in_line_obx4406);
                    spec_const_10_3_ce("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:815:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==DELIMITER1) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:815:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4415); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4417);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:816:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt172=2;
                            int LA172_0 = input.LA(1);

                            if ( (LA172_0==DELIMITER1) ) {
                                alt172=1;
                            }
                            switch (alt172) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:816:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4427); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4429);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:817:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt171=2;
                                    int LA171_0 = input.LA(1);

                                    if ( (LA171_0==DELIMITER1) ) {
                                        alt171=1;
                                    }
                                    switch (alt171) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:817:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4440); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx4442);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:817:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop169:
                                            do {
                                                int alt169=2;
                                                int LA169_0 = input.LA(1);

                                                if ( (LA169_0==REPETITEUR) ) {
                                                    alt169=1;
                                                }


                                                switch (alt169) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:817:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4446); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx4448);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop169;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:818:9: ( line_obx2_1_post10_6 )?
                                            int alt170=2;
                                            int LA170_0 = input.LA(1);

                                            if ( (LA170_0==DELIMITER1) ) {
                                                alt170=1;
                                            }
                                            switch (alt170) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:818:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4461);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:819:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:819:7: ( spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:819:8: spec_const_10_3_fic[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_fic_in_line_obx4478);
                    spec_const_10_3_fic("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:820:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==DELIMITER1) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:820:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4487); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4489);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:821:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt177=2;
                            int LA177_0 = input.LA(1);

                            if ( (LA177_0==DELIMITER1) ) {
                                alt177=1;
                            }
                            switch (alt177) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:821:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4499); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4501);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:822:8: ( DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt176=2;
                                    int LA176_0 = input.LA(1);

                                    if ( (LA176_0==DELIMITER1) ) {
                                        alt176=1;
                                    }
                                    switch (alt176) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:822:9: DELIMITER1 spec_sized_10_6[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4512); 

                                            pushFollow(FOLLOW_spec_sized_10_6_in_line_obx4514);
                                            spec_sized_10_6("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:822:52: ( REPETITEUR spec_sized_10_6[\"OBX.6\", 64000] )*
                                            loop174:
                                            do {
                                                int alt174=2;
                                                int LA174_0 = input.LA(1);

                                                if ( (LA174_0==REPETITEUR) ) {
                                                    alt174=1;
                                                }


                                                switch (alt174) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:822:53: REPETITEUR spec_sized_10_6[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4518); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_in_line_obx4520);
                                            	    spec_sized_10_6("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop174;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:823:9: ( line_obx2_1_post10_6 )?
                                            int alt175=2;
                                            int LA175_0 = input.LA(1);

                                            if ( (LA175_0==DELIMITER1) ) {
                                                alt175=1;
                                            }
                                            switch (alt175) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:823:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4533);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:824:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:824:7: ( spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:824:8: spec_const_10_3_st[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_st_in_line_obx4550);
                    spec_const_10_3_st("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:825:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==DELIMITER1) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:825:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4559); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4561);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:826:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt182=2;
                            int LA182_0 = input.LA(1);

                            if ( (LA182_0==DELIMITER1) ) {
                                alt182=1;
                            }
                            switch (alt182) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:826:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4571); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4573);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:827:8: ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt181=2;
                                    int LA181_0 = input.LA(1);

                                    if ( (LA181_0==DELIMITER1) ) {
                                        alt181=1;
                                    }
                                    switch (alt181) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:827:9: DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4584); 

                                            pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx4586);
                                            spec_sized_10_6_tx("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:827:55: ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )*
                                            loop179:
                                            do {
                                                int alt179=2;
                                                int LA179_0 = input.LA(1);

                                                if ( (LA179_0==REPETITEUR) ) {
                                                    alt179=1;
                                                }


                                                switch (alt179) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:827:56: REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4590); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx4592);
                                            	    spec_sized_10_6_tx("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop179;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:828:9: ( line_obx2_1_post10_6 )?
                                            int alt180=2;
                                            int LA180_0 = input.LA(1);

                                            if ( (LA180_0==DELIMITER1) ) {
                                                alt180=1;
                                            }
                                            switch (alt180) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:828:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4605);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:829:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:829:7: ( spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:829:8: spec_const_10_3_gc[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_gc_in_line_obx4622);
                    spec_const_10_3_gc("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:830:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==DELIMITER1) ) {
                        alt188=1;
                    }
                    switch (alt188) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:830:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4631); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4633);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:831:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt187=2;
                            int LA187_0 = input.LA(1);

                            if ( (LA187_0==DELIMITER1) ) {
                                alt187=1;
                            }
                            switch (alt187) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:831:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4643); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4645);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:832:8: ( DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt186=2;
                                    int LA186_0 = input.LA(1);

                                    if ( (LA186_0==DELIMITER1) ) {
                                        alt186=1;
                                    }
                                    switch (alt186) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:832:9: DELIMITER1 spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4656); 

                                            pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx4658);
                                            spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:832:72: ( REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000] )*
                                            loop184:
                                            do {
                                                int alt184=2;
                                                int LA184_0 = input.LA(1);

                                                if ( (LA184_0==REPETITEUR) ) {
                                                    alt184=1;
                                                }


                                                switch (alt184) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:832:73: REPETITEUR spec_sized_mult_lvl1_nm_optionnal_2[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4662); 

                                            	    pushFollow(FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx4664);
                                            	    spec_sized_mult_lvl1_nm_optionnal_2("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop184;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:833:9: ( line_obx2_1_post10_6 )?
                                            int alt185=2;
                                            int LA185_0 = input.LA(1);

                                            if ( (LA185_0==DELIMITER1) ) {
                                                alt185=1;
                                            }
                                            switch (alt185) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:833:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4677);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:834:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:834:7: ( spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:834:8: spec_const_10_3_tx[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_tx_in_line_obx4694);
                    spec_const_10_3_tx("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:835:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==DELIMITER1) ) {
                        alt193=1;
                    }
                    switch (alt193) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:835:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4703); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4705);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:836:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt192=2;
                            int LA192_0 = input.LA(1);

                            if ( (LA192_0==DELIMITER1) ) {
                                alt192=1;
                            }
                            switch (alt192) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:836:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4715); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4717);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:837:8: ( DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt191=2;
                                    int LA191_0 = input.LA(1);

                                    if ( (LA191_0==DELIMITER1) ) {
                                        alt191=1;
                                    }
                                    switch (alt191) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:837:9: DELIMITER1 spec_sized_10_6_tx[\"OBX.6\", 64000] ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4728); 

                                            pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx4730);
                                            spec_sized_10_6_tx("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:837:55: ( REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000] )*
                                            loop189:
                                            do {
                                                int alt189=2;
                                                int LA189_0 = input.LA(1);

                                                if ( (LA189_0==REPETITEUR) ) {
                                                    alt189=1;
                                                }


                                                switch (alt189) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:837:56: REPETITEUR spec_sized_10_6_tx[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4734); 

                                            	    pushFollow(FOLLOW_spec_sized_10_6_tx_in_line_obx4736);
                                            	    spec_sized_10_6_tx("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop189;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:838:9: ( line_obx2_1_post10_6 )?
                                            int alt190=2;
                                            int LA190_0 = input.LA(1);

                                            if ( (LA190_0==DELIMITER1) ) {
                                                alt190=1;
                                            }
                                            switch (alt190) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:838:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4749);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:839:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:839:7: ( spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:839:8: spec_const_10_3_std[\"OBX.3\"] ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    {
                    pushFollow(FOLLOW_spec_const_10_3_std_in_line_obx4766);
                    spec_const_10_3_std("OBX.3");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:840:6: ( DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )? )?
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==DELIMITER1) ) {
                        alt198=1;
                    }
                    switch (alt198) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:840:7: DELIMITER1 spec_sized_10_4[\"OBX.4\", 200] ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4775); 

                            pushFollow(FOLLOW_spec_sized_10_4_in_line_obx4777);
                            spec_sized_10_4("OBX.4", 200);

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:841:7: ( DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )? )?
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==DELIMITER1) ) {
                                alt197=1;
                            }
                            switch (alt197) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:841:8: DELIMITER1 st_sized_optionnal[\"OBX.5\", 10] ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4787); 

                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4789);
                                    st_sized_optionnal("OBX.5", 10);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:842:8: ( DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )? )?
                                    int alt196=2;
                                    int LA196_0 = input.LA(1);

                                    if ( (LA196_0==DELIMITER1) ) {
                                        alt196=1;
                                    }
                                    switch (alt196) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:842:9: DELIMITER1 st_sized_optionnal[\"OBX.6\", 64000] ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )* ( line_obx2_1_post10_6 )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx4800); 

                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4802);
                                            st_sized_optionnal("OBX.6", 64000);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:842:55: ( REPETITEUR st_sized_optionnal[\"OBX.6\", 64000] )*
                                            loop194:
                                            do {
                                                int alt194=2;
                                                int LA194_0 = input.LA(1);

                                                if ( (LA194_0==REPETITEUR) ) {
                                                    alt194=1;
                                                }


                                                switch (alt194) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:842:56: REPETITEUR st_sized_optionnal[\"OBX.6\", 64000]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx4806); 

                                            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx4808);
                                            	    st_sized_optionnal("OBX.6", 64000);

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop194;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:843:9: ( line_obx2_1_post10_6 )?
                                            int alt195=2;
                                            int LA195_0 = input.LA(1);

                                            if ( (LA195_0==DELIMITER1) ) {
                                                alt195=1;
                                            }
                                            switch (alt195) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:843:9: line_obx2_1_post10_6
                                                    {
                                                    pushFollow(FOLLOW_line_obx2_1_post10_6_in_line_obx4821);
                                                    line_obx2_1_post10_6();

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx"



    // $ANTLR start "line_obx2_1_post10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:845:1: line_obx2_1_post10_6 : ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) ;
    public final void line_obx2_1_post10_6() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:845:21: ( ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:846:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:846:5: ( DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:846:6: DELIMITER1 st_sized_optionnal[\"OBX.7\", 20] ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            {
            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64842); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64844);
            st_sized_optionnal("OBX.7", 20);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:847:6: ( DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )? )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==DELIMITER1) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:847:7: DELIMITER1 st_sized_optionnal[\"OBX.8\", 60] ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )* ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64853); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64855);
                    st_sized_optionnal("OBX.8", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:847:50: ( REPETITEUR st_sized_optionnal[\"OBX.8\", 60] )*
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==REPETITEUR) ) {
                            alt200=1;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:847:51: REPETITEUR st_sized_optionnal[\"OBX.8\", 60]
                    	    {
                    	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_64859); 

                    	    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64861);
                    	    st_sized_optionnal("OBX.8", 60);

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop200;
                        }
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:848:7: ( DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )? )?
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==DELIMITER1) ) {
                        alt212=1;
                    }
                    switch (alt212) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:848:8: DELIMITER1 spec_const_10_9[\"OBX.9\"] ( REPETITEUR spec_const_10_9[\"OBX.9\"] )* ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64873); 

                            pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_64875);
                            spec_const_10_9("OBX.9");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:848:44: ( REPETITEUR spec_const_10_9[\"OBX.9\"] )*
                            loop201:
                            do {
                                int alt201=2;
                                int LA201_0 = input.LA(1);

                                if ( (LA201_0==REPETITEUR) ) {
                                    alt201=1;
                                }


                                switch (alt201) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:848:45: REPETITEUR spec_const_10_9[\"OBX.9\"]
                            	    {
                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_64879); 

                            	    pushFollow(FOLLOW_spec_const_10_9_in_line_obx2_1_post10_64881);
                            	    spec_const_10_9("OBX.9");

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop201;
                                }
                            } while (true);


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:849:8: ( DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )? )?
                            int alt211=2;
                            int LA211_0 = input.LA(1);

                            if ( (LA211_0==DELIMITER1) ) {
                                alt211=1;
                            }
                            switch (alt211) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:849:9: DELIMITER1 nm_sized_optionnal[\"OBX.10\", 5] ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64894); 

                                    pushFollow(FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_64896);
                                    nm_sized_optionnal("OBX.10", 5);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:850:9: ( DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )? )?
                                    int alt210=2;
                                    int LA210_0 = input.LA(1);

                                    if ( (LA210_0==DELIMITER1) ) {
                                        alt210=1;
                                    }
                                    switch (alt210) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:850:10: DELIMITER1 spec_const_10_11[\"OBX.11\"] ( REPETITEUR spec_const_10_11[\"OBX.11\"] )* ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64908); 

                                            pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_64910);
                                            spec_const_10_11("OBX.11");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:850:48: ( REPETITEUR spec_const_10_11[\"OBX.11\"] )*
                                            loop202:
                                            do {
                                                int alt202=2;
                                                int LA202_0 = input.LA(1);

                                                if ( (LA202_0==REPETITEUR) ) {
                                                    alt202=1;
                                                }


                                                switch (alt202) {
                                            	case 1 :
                                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:850:49: REPETITEUR spec_const_10_11[\"OBX.11\"]
                                            	    {
                                            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_obx2_1_post10_64914); 

                                            	    pushFollow(FOLLOW_spec_const_10_11_in_line_obx2_1_post10_64916);
                                            	    spec_const_10_11("OBX.11");

                                            	    state._fsp--;


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop202;
                                                }
                                            } while (true);


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:851:10: ( DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )? )?
                                            int alt209=2;
                                            int LA209_0 = input.LA(1);

                                            if ( (LA209_0==DELIMITER1) ) {
                                                alt209=1;
                                            }
                                            switch (alt209) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:851:11: DELIMITER1 spec_const_10_12[\"OBX.12\"] ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64931); 

                                                    pushFollow(FOLLOW_spec_const_10_12_in_line_obx2_1_post10_64933);
                                                    spec_const_10_12("OBX.12");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:852:11: ( DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )? )?
                                                    int alt208=2;
                                                    int LA208_0 = input.LA(1);

                                                    if ( (LA208_0==DELIMITER1) ) {
                                                        alt208=1;
                                                    }
                                                    switch (alt208) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:852:12: DELIMITER1 ts_sized_optionnal[\"OBX.13\", 26] ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64948); 

                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_64950);
                                                            ts_sized_optionnal("OBX.13", 26);

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:853:12: ( DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )? )?
                                                            int alt207=2;
                                                            int LA207_0 = input.LA(1);

                                                            if ( (LA207_0==DELIMITER1) ) {
                                                                alt207=1;
                                                            }
                                                            switch (alt207) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:853:13: DELIMITER1 st_sized_optionnal[\"OBX.14\", 20] ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    {
                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64966); 

                                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64968);
                                                                    st_sized_optionnal("OBX.14", 20);

                                                                    state._fsp--;


                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:854:13: ( DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )? )?
                                                                    int alt206=2;
                                                                    int LA206_0 = input.LA(1);

                                                                    if ( (LA206_0==DELIMITER1) ) {
                                                                        alt206=1;
                                                                    }
                                                                    switch (alt206) {
                                                                        case 1 :
                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:854:14: DELIMITER1 ts_sized_optionnal[\"OBX.15\", 26] ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            {
                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_64984); 

                                                                            pushFollow(FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_64986);
                                                                            ts_sized_optionnal("OBX.15", 26);

                                                                            state._fsp--;


                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:855:14: ( DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )? )?
                                                                            int alt205=2;
                                                                            int LA205_0 = input.LA(1);

                                                                            if ( (LA205_0==DELIMITER1) ) {
                                                                                alt205=1;
                                                                            }
                                                                            switch (alt205) {
                                                                                case 1 :
                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:855:15: DELIMITER1 spec_sized_mult_lvl1_st_optionnal_6[\"OBX.16\", 60] ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    {
                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_65003); 

                                                                                    pushFollow(FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_65005);
                                                                                    spec_sized_mult_lvl1_st_optionnal_6("OBX.16", 60);

                                                                                    state._fsp--;


                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:856:15: ( DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )? )?
                                                                                    int alt204=2;
                                                                                    int LA204_0 = input.LA(1);

                                                                                    if ( (LA204_0==DELIMITER1) ) {
                                                                                        alt204=1;
                                                                                    }
                                                                                    switch (alt204) {
                                                                                        case 1 :
                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:856:16: DELIMITER1 st_sized_optionnal[\"OBX.17\", 60] ( DELIMITER1 )?
                                                                                            {
                                                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_65023); 

                                                                                            pushFollow(FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_65025);
                                                                                            st_sized_optionnal("OBX.17", 60);

                                                                                            state._fsp--;


                                                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:856:60: ( DELIMITER1 )?
                                                                                            int alt203=2;
                                                                                            int LA203_0 = input.LA(1);

                                                                                            if ( (LA203_0==DELIMITER1) ) {
                                                                                                alt203=1;
                                                                                            }
                                                                                            switch (alt203) {
                                                                                                case 1 :
                                                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:856:60: DELIMITER1
                                                                                                    {
                                                                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_obx2_1_post10_65028); 

                                                                                                    }
                                                                                                    break;

                                                                                            }


                                                                                            }
                                                                                            break;

                                                                                    }


                                                                                    }
                                                                                    break;

                                                                            }


                                                                            }
                                                                            break;

                                                                    }


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_obx2_1_post10_6"



    // $ANTLR start "line_c"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:858:1: line_c : CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? ;
    public final void line_c() throws RecognitionException {
        startElement("C");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:860:22: ( CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:861:3: CR CHARC DELIMITER1 nm_integer_sized_mandatory[\"C.2\", 10] DELIMITER1 spec_const_12_3[\"C.3\"] DELIMITER1 st_sized_optionnal[\"C.4\", 64000] ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )* ( DELIMITER1 )?
            {
            match(input,CR,FOLLOW_CR_in_line_c5067); 

            match(input,CHARC,FOLLOW_CHARC_in_line_c5069); 

            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c5073); 

            pushFollow(FOLLOW_nm_integer_sized_mandatory_in_line_c5075);
            nm_integer_sized_mandatory("C.2", 10);

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c5080); 

            pushFollow(FOLLOW_spec_const_12_3_in_line_c5082);
            spec_const_12_3("C.3");

            state._fsp--;


            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c5087); 

            pushFollow(FOLLOW_st_sized_optionnal_in_line_c5089);
            st_sized_optionnal("C.4", 64000);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:864:47: ( REPETITEUR st_sized_optionnal[\"C.4\", 64000] )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==REPETITEUR) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:864:48: REPETITEUR st_sized_optionnal[\"C.4\", 64000]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_line_c5093); 

            	    pushFollow(FOLLOW_st_sized_optionnal_in_line_c5095);
            	    st_sized_optionnal("C.4", 64000);

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:865:3: ( DELIMITER1 )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==DELIMITER1) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:865:3: DELIMITER1
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_c5104); 

                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_c"



    // $ANTLR start "line_l"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:867:1: line_l : CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? ;
    public final void line_l() throws RecognitionException {
        startElement("L");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:869:22: ( CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:870:3: CR CHARL ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            {
            match(input,CR,FOLLOW_CR_in_line_l5122); 

            match(input,CHARL,FOLLOW_CHARL_in_line_l5124); 

            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:871:3: ( DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )? )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==DELIMITER1) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:871:4: DELIMITER1 nm_integer_sized_optionnal[\"L.2\", 1] ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    {
                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5129); 

                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l5131);
                    nm_integer_sized_optionnal("L.2", 1);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:872:4: ( DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )? )?
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==DELIMITER1) ) {
                        alt220=1;
                    }
                    switch (alt220) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:872:5: DELIMITER1 spec_const_race[\"L.3\"] ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            {
                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5138); 

                            pushFollow(FOLLOW_spec_const_race_in_line_l5140);
                            spec_const_race("L.3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:873:5: ( DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )? )?
                            int alt219=2;
                            int LA219_0 = input.LA(1);

                            if ( (LA219_0==DELIMITER1) ) {
                                alt219=1;
                            }
                            switch (alt219) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:873:6: DELIMITER1 nm_integer_sized_optionnal[\"L.4\", 4] ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    {
                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5148); 

                                    pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l5150);
                                    nm_integer_sized_optionnal("L.4", 4);

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:874:6: ( DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )? )?
                                    int alt218=2;
                                    int LA218_0 = input.LA(1);

                                    if ( (LA218_0==DELIMITER1) ) {
                                        alt218=1;
                                    }
                                    switch (alt218) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:874:7: DELIMITER1 nm_integer_sized_optionnal[\"L.5\", 10] ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            {
                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5159); 

                                            pushFollow(FOLLOW_nm_integer_sized_optionnal_in_line_l5161);
                                            nm_integer_sized_optionnal("L.5", 10);

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:875:7: ( DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )? )?
                                            int alt217=2;
                                            int LA217_0 = input.LA(1);

                                            if ( (LA217_0==DELIMITER1) ) {
                                                alt217=1;
                                            }
                                            switch (alt217) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:875:8: DELIMITER1 st_sized_optionnal[\"L.6\", 12] ( DELIMITER1 )?
                                                    {
                                                    match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5171); 

                                                    pushFollow(FOLLOW_st_sized_optionnal_in_line_l5173);
                                                    st_sized_optionnal("L.6", 12);

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:875:49: ( DELIMITER1 )?
                                                    int alt216=2;
                                                    int LA216_0 = input.LA(1);

                                                    if ( (LA216_0==DELIMITER1) ) {
                                                        alt216=1;
                                                    }
                                                    switch (alt216) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:875:49: DELIMITER1
                                                            {
                                                            match(input,DELIMITER1,FOLLOW_DELIMITER1_in_line_l5176); 

                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "line_l"



    // $ANTLR start "spec_act_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:884:1: spec_act_11[String nameElement] : ( final_HR | final_RX | final_charR );
    public final void spec_act_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:886:22: ( final_HR | final_RX | final_charR )
            int alt222=3;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==CHARH) ) {
                alt222=1;
            }
            else if ( (LA222_0==CHARR) ) {
                int LA222_2 = input.LA(2);

                if ( (LA222_2==CHARX) ) {
                    alt222=2;
                }
                else if ( ((LA222_2 >= CR && LA222_2 <= DELIMITER1)) ) {
                    alt222=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 222, 2, input);

                    throw nvae;

                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;

            }
            switch (alt222) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:887:3: final_HR
                    {
                    pushFollow(FOLLOW_final_HR_in_spec_act_115212);
                    final_HR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:887:14: final_RX
                    {
                    pushFollow(FOLLOW_final_RX_in_spec_act_115216);
                    final_RX();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:887:25: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_act_115220);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_act_11"



    // $ANTLR start "spec_p_or_m"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:889:1: spec_p_or_m[String nameElement] : ( final_symbol_plus | final_symbol_moins );
    public final void spec_p_or_m(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:891:22: ( final_symbol_plus | final_symbol_moins )
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==PLUS) ) {
                alt223=1;
            }
            else if ( (LA223_0==MOINS) ) {
                alt223=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;

            }
            switch (alt223) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:892:3: final_symbol_plus
                    {
                    pushFollow(FOLLOW_final_symbol_plus_in_spec_p_or_m5238);
                    final_symbol_plus();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:892:23: final_symbol_moins
                    {
                    pushFollow(FOLLOW_final_symbol_moins_in_spec_p_or_m5242);
                    final_symbol_moins();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_p_or_m"


    public static class spec_ac_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_ac_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:894:1: spec_ac_8[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] ;
    public final HPRIMSParser.spec_ac_8_return spec_ac_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_ac_8_return retval = new HPRIMSParser.spec_ac_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:896:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:897:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 spec_ac_8_2[$nameElement + \".2\"] DELIMITER2 spec_ac_8_3[$nameElement + \".3\"] nm_nonsized_mandatory[$nameElement + \".4\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_85262);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_85267); 

            pushFollow(FOLLOW_spec_ac_8_2_in_spec_ac_85269);
            spec_ac_8_2(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_ac_85274); 

            pushFollow(FOLLOW_spec_ac_8_3_in_spec_ac_85276);
            spec_ac_8_3(nameElement + ".3");

            state._fsp--;


            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_ac_85281);
            nm_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_ac_8"



    // $ANTLR start "spec_ac_8_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:903:1: spec_ac_8_2[String nameElement] : ( final_TM | final_TR | final_FR );
    public final void spec_ac_8_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:905:22: ( final_TM | final_TR | final_FR )
            int alt224=3;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==CHART) ) {
                int LA224_1 = input.LA(2);

                if ( (LA224_1==CHARM) ) {
                    alt224=1;
                }
                else if ( (LA224_1==CHARR) ) {
                    alt224=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==CHARF) ) {
                alt224=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }
            switch (alt224) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:906:3: final_TM
                    {
                    pushFollow(FOLLOW_final_TM_in_spec_ac_8_25304);
                    final_TM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:906:14: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_25308);
                    final_TR();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:906:25: final_FR
                    {
                    pushFollow(FOLLOW_final_FR_in_spec_ac_8_25312);
                    final_FR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_2"



    // $ANTLR start "spec_ac_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:908:1: spec_ac_8_3[String nameElement] : ( final_PF | final_SS | final_TR );
    public final void spec_ac_8_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:910:22: ( final_PF | final_SS | final_TR )
            int alt225=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt225=1;
                }
                break;
            case CHARS:
                {
                alt225=2;
                }
                break;
            case CHART:
                {
                alt225=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;

            }

            switch (alt225) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:911:3: final_PF
                    {
                    pushFollow(FOLLOW_final_PF_in_spec_ac_8_35332);
                    final_PF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:911:14: final_SS
                    {
                    pushFollow(FOLLOW_final_SS_in_spec_ac_8_35336);
                    final_SS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:911:25: final_TR
                    {
                    pushFollow(FOLLOW_final_TR_in_spec_ac_8_35340);
                    final_TR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_ac_8_3"



    // $ANTLR start "spec_on_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:913:1: spec_on_optionnal[String nameElement] : ( final_charO | final_charN )? ;
    public final void spec_on_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:915:22: ( ( final_charO | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:916:3: ( final_charO | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:916:3: ( final_charO | final_charN )?
            int alt226=3;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==CHARO) ) {
                alt226=1;
            }
            else if ( (LA226_0==CHARN) ) {
                alt226=2;
            }
            switch (alt226) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:916:4: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_on_optionnal5359);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:916:18: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_on_optionnal5363);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_on_optionnal"



    // $ANTLR start "spec_const_sexe"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:918:1: spec_const_sexe[String nameElement] : ( final_charM | final_charF | final_charU )? ;
    public final void spec_const_sexe(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:920:22: ( ( final_charM | final_charF | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:921:3: ( final_charM | final_charF | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:921:3: ( final_charM | final_charF | final_charU )?
            int alt227=4;
            switch ( input.LA(1) ) {
                case CHARM:
                    {
                    alt227=1;
                    }
                    break;
                case CHARF:
                    {
                    alt227=2;
                    }
                    break;
                case CHARU:
                    {
                    alt227=3;
                    }
                    break;
            }

            switch (alt227) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:921:4: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_sexe5384);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:921:18: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_sexe5388);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:921:32: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_sexe5392);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_sexe"



    // $ANTLR start "spec_const_race"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:923:1: spec_const_race[String nameElement] :;
    public final void spec_const_race(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:925:22: ()
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:926:3: 
            {
            }

            endElement();
        }
        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_race"



    // $ANTLR start "spec_const_7_13_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:928:1: spec_const_7_13_version_2_0[String nameElement] : spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:930:22: ( spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:931:3: spec_const_7_13_1_version_2_0[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_05429);
            spec_const_7_13_1_version_2_0(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_05432); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_05434);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_0"



    // $ANTLR start "spec_const_7_13_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:933:1: spec_const_7_13_version_2_1[String nameElement] : spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:935:22: ( spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:936:3: spec_const_7_13_1_version_2_1[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_15455);
            spec_const_7_13_1_version_2_1(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_15458); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_15460);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_1"



    // $ANTLR start "spec_const_7_13_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:938:1: spec_const_7_13_version_2_2[String nameElement] : spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] ;
    public final void spec_const_7_13_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:940:22: ( spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:941:3: spec_const_7_13_1_version_2_2[$nameElement + \".1\"] DELIMITER2 spec_const_7_13_2[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_25479);
            spec_const_7_13_1_version_2_2(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_25482); 

            pushFollow(FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_25484);
            spec_const_7_13_2(nameElement + ".2");

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_version_2_2"



    // $ANTLR start "spec_const_7_13_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:943:1: spec_const_7_13_2[String nameElement] : ( final_charC | final_charL | final_charR );
    public final void spec_const_7_13_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:945:22: ( final_charC | final_charL | final_charR )
            int alt228=3;
            switch ( input.LA(1) ) {
            case CHARC:
                {
                alt228=1;
                }
                break;
            case CHARL:
                {
                alt228=2;
                }
                break;
            case CHARR:
                {
                alt228=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;

            }

            switch (alt228) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:946:3: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_7_13_25503);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:946:17: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_7_13_25507);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:946:31: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_7_13_25511);
                    final_charR();

                    state._fsp--;


                    }
                    break;

            }
            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_2"



    // $ANTLR start "spec_const_7_7_contexte_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:948:1: spec_const_7_7_contexte_ORU[String nameElement] : final_ORU ;
    public final void spec_const_7_7_contexte_ORU(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:950:22: ( final_ORU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:951:3: final_ORU
            {
            pushFollow(FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU5529);
            final_ORU();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORU"



    // $ANTLR start "spec_const_7_7_contexte_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:953:1: spec_const_7_7_contexte_ORM[String nameElement] : final_ORM ;
    public final void spec_const_7_7_contexte_ORM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:955:22: ( final_ORM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:956:3: final_ORM
            {
            pushFollow(FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM5547);
            final_ORM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORM"



    // $ANTLR start "spec_const_7_7_contexte_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:958:1: spec_const_7_7_contexte_ORA[String nameElement] : final_ORA ;
    public final void spec_const_7_7_contexte_ORA(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:960:22: ( final_ORA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:961:3: final_ORA
            {
            pushFollow(FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA5565);
            final_ORA();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ORA"



    // $ANTLR start "spec_const_7_7_contexte_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:963:1: spec_const_7_7_contexte_ADM[String nameElement] : final_ADM ;
    public final void spec_const_7_7_contexte_ADM(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:965:22: ( final_ADM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:966:3: final_ADM
            {
            pushFollow(FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM5583);
            final_ADM();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_ADM"



    // $ANTLR start "spec_const_7_7_contexte_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:968:1: spec_const_7_7_contexte_FAC[String nameElement] : final_FAC ;
    public final void spec_const_7_7_contexte_FAC(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:970:22: ( final_FAC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:971:3: final_FAC
            {
            pushFollow(FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC5603);
            final_FAC();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_7_contexte_FAC"



    // $ANTLR start "spec_const_7_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:973:1: spec_const_7_12[String nameElement] : ( final_charP | final_charD | final_charT ) ;
    public final void spec_const_7_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:975:22: ( ( final_charP | final_charD | final_charT ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:976:3: ( final_charP | final_charD | final_charT )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:976:3: ( final_charP | final_charD | final_charT )
            int alt229=3;
            switch ( input.LA(1) ) {
            case CHARP:
                {
                alt229=1;
                }
                break;
            case CHARD:
                {
                alt229=2;
                }
                break;
            case CHART:
                {
                alt229=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }

            switch (alt229) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:976:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_7_125622);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:976:18: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_7_125626);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:976:32: final_charT
                    {
                    pushFollow(FOLLOW_final_charT_in_spec_const_7_125630);
                    final_charT();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_12"



    // $ANTLR start "spec_const_9_31"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:978:1: spec_const_9_31[String nameElement] : ( final_PORT | final_CART | final_WHLC | final_WALK )? ;
    public final void spec_const_9_31(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:980:22: ( ( final_PORT | final_CART | final_WHLC | final_WALK )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:3: ( final_PORT | final_CART | final_WHLC | final_WALK )?
            int alt230=5;
            switch ( input.LA(1) ) {
                case CHARP:
                    {
                    alt230=1;
                    }
                    break;
                case CHARC:
                    {
                    alt230=2;
                    }
                    break;
                case CHARW:
                    {
                    int LA230_3 = input.LA(2);

                    if ( (LA230_3==CHARH) ) {
                        alt230=3;
                    }
                    else if ( (LA230_3==CHARA) ) {
                        alt230=4;
                    }
                    }
                    break;
            }

            switch (alt230) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:4: final_PORT
                    {
                    pushFollow(FOLLOW_final_PORT_in_spec_const_9_315650);
                    final_PORT();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:17: final_CART
                    {
                    pushFollow(FOLLOW_final_CART_in_spec_const_9_315654);
                    final_CART();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:30: final_WHLC
                    {
                    pushFollow(FOLLOW_final_WHLC_in_spec_const_9_315658);
                    final_WHLC();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:981:43: final_WALK
                    {
                    pushFollow(FOLLOW_final_WALK_in_spec_const_9_315662);
                    final_WALK();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_31"



    // $ANTLR start "spec_const_8_25"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:983:1: spec_const_8_25[String nameElement] : ( final_OP | final_IP | final_ER | final_PA | final_MP )? ;
    public final void spec_const_8_25(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:985:22: ( ( final_OP | final_IP | final_ER | final_PA | final_MP )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:3: ( final_OP | final_IP | final_ER | final_PA | final_MP )?
            int alt231=6;
            switch ( input.LA(1) ) {
                case CHARO:
                    {
                    alt231=1;
                    }
                    break;
                case CHARI:
                    {
                    alt231=2;
                    }
                    break;
                case CHARE:
                    {
                    alt231=3;
                    }
                    break;
                case CHARP:
                    {
                    alt231=4;
                    }
                    break;
                case CHARM:
                    {
                    alt231=5;
                    }
                    break;
            }

            switch (alt231) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:4: final_OP
                    {
                    pushFollow(FOLLOW_final_OP_in_spec_const_8_255683);
                    final_OP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:15: final_IP
                    {
                    pushFollow(FOLLOW_final_IP_in_spec_const_8_255687);
                    final_IP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:26: final_ER
                    {
                    pushFollow(FOLLOW_final_ER_in_spec_const_8_255691);
                    final_ER();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:37: final_PA
                    {
                    pushFollow(FOLLOW_final_PA_in_spec_const_8_255695);
                    final_PA();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:986:48: final_MP
                    {
                    pushFollow(FOLLOW_final_MP_in_spec_const_8_255699);
                    final_MP();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_8_25"



    // $ANTLR start "spec_const_9_26"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:988:1: spec_const_9_26[String nameElement] : ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? ;
    public final void spec_const_9_26(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:990:22: ( ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:3: ( final_charF | final_charP | final_charM | final_charI | final_charR | final_charC | final_charO | final_charD | final_charX )?
            int alt232=10;
            switch ( input.LA(1) ) {
                case CHARF:
                    {
                    alt232=1;
                    }
                    break;
                case CHARP:
                    {
                    alt232=2;
                    }
                    break;
                case CHARM:
                    {
                    alt232=3;
                    }
                    break;
                case CHARI:
                    {
                    alt232=4;
                    }
                    break;
                case CHARR:
                    {
                    alt232=5;
                    }
                    break;
                case CHARC:
                    {
                    alt232=6;
                    }
                    break;
                case CHARO:
                    {
                    alt232=7;
                    }
                    break;
                case CHARD:
                    {
                    alt232=8;
                    }
                    break;
                case CHARX:
                    {
                    alt232=9;
                    }
                    break;
            }

            switch (alt232) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:4: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_9_265720);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_9_265724);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:32: final_charM
                    {
                    pushFollow(FOLLOW_final_charM_in_spec_const_9_265728);
                    final_charM();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:46: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_9_265732);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:60: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_9_265736);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:74: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_9_265740);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:991:88: final_charO
                    {
                    pushFollow(FOLLOW_final_charO_in_spec_const_9_265744);
                    final_charO();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:992:3: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_9_265750);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:992:17: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_9_265754);
                    final_charX();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_9_26"


    public static class spec_const_10_3_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:994:1: spec_const_10_3_nm[String nameElement] : CHARN CHARM ;
    public final HPRIMSParser.spec_const_10_3_nm_return spec_const_10_3_nm(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_nm_return retval = new HPRIMSParser.spec_const_10_3_nm_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:996:22: ( CHARN CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:997:3: CHARN CHARM
            {
            match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_nm5775); 

            match(input,CHARM,FOLLOW_CHARM_in_spec_const_10_3_nm5777); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_nm"


    public static class spec_const_10_3_ce_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_ce"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:999:1: spec_const_10_3_ce[String nameElement] : CHARC CHARE ;
    public final HPRIMSParser.spec_const_10_3_ce_return spec_const_10_3_ce(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_ce_return retval = new HPRIMSParser.spec_const_10_3_ce_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1001:22: ( CHARC CHARE )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1002:3: CHARC CHARE
            {
            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_ce5798); 

            match(input,CHARE,FOLLOW_CHARE_in_spec_const_10_3_ce5800); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_ce"


    public static class spec_const_10_3_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1004:1: spec_const_10_3_st[String nameElement] : CHARS CHART ;
    public final HPRIMSParser.spec_const_10_3_st_return spec_const_10_3_st(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_st_return retval = new HPRIMSParser.spec_const_10_3_st_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1006:22: ( CHARS CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1007:3: CHARS CHART
            {
            match(input,CHARS,FOLLOW_CHARS_in_spec_const_10_3_st5821); 

            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_st5823); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_st"


    public static class spec_const_10_3_gc_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_gc"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1009:1: spec_const_10_3_gc[String nameElement] : CHARG CHARC ;
    public final HPRIMSParser.spec_const_10_3_gc_return spec_const_10_3_gc(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_gc_return retval = new HPRIMSParser.spec_const_10_3_gc_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1011:22: ( CHARG CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1012:3: CHARG CHARC
            {
            match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_gc5844); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_gc5846); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_gc"


    public static class spec_const_10_3_tx_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1014:1: spec_const_10_3_tx[String nameElement] : CHART CHARX ;
    public final HPRIMSParser.spec_const_10_3_tx_return spec_const_10_3_tx(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_tx_return retval = new HPRIMSParser.spec_const_10_3_tx_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1016:22: ( CHART CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1017:3: CHART CHARX
            {
            match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_tx5868); 

            match(input,CHARX,FOLLOW_CHARX_in_spec_const_10_3_tx5870); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_tx"


    public static class spec_const_10_3_fic_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_fic"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1019:1: spec_const_10_3_fic[String nameElement] : ( CHARF CHARI CHARC ) ;
    public final HPRIMSParser.spec_const_10_3_fic_return spec_const_10_3_fic(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_fic_return retval = new HPRIMSParser.spec_const_10_3_fic_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1021:22: ( ( CHARF CHARI CHARC ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1022:3: ( CHARF CHARI CHARC )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1022:3: ( CHARF CHARI CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1022:4: CHARF CHARI CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_spec_const_10_3_fic5891); 

            match(input,CHARI,FOLLOW_CHARI_in_spec_const_10_3_fic5893); 

            match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_fic5895); 

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_fic"


    public static class spec_const_10_3_std_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_const_10_3_std"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1024:1: spec_const_10_3_std[String nameElement] : ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) );
    public final HPRIMSParser.spec_const_10_3_std_return spec_const_10_3_std(String nameElement) throws RecognitionException {
        HPRIMSParser.spec_const_10_3_std_return retval = new HPRIMSParser.spec_const_10_3_std_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1026:22: ( ( CHARA CHARD ) | ( CHARC CHARK ) | ( CHARC CHARN CHARA ) | ( CHARD CHART ) | ( CHARP CHARN ) | ( CHART CHARN ) | ( CHARG CHARB ) | ( CHARG CHARN ) )
            int alt233=8;
            switch ( input.LA(1) ) {
            case CHARA:
                {
                alt233=1;
                }
                break;
            case CHARC:
                {
                int LA233_2 = input.LA(2);

                if ( (LA233_2==CHARK) ) {
                    alt233=2;
                }
                else if ( (LA233_2==CHARN) ) {
                    alt233=3;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 233, 2, input);

                    throw nvae;

                }
                }
                break;
            case CHARD:
                {
                alt233=4;
                }
                break;
            case CHARP:
                {
                alt233=5;
                }
                break;
            case CHART:
                {
                alt233=6;
                }
                break;
            case CHARG:
                {
                int LA233_6 = input.LA(2);

                if ( (LA233_6==CHARB) ) {
                    alt233=7;
                }
                else if ( (LA233_6==CHARN) ) {
                    alt233=8;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 233, 6, input);

                    throw nvae;

                }
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;

            }

            switch (alt233) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:3: ( CHARA CHARD )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:3: ( CHARA CHARD )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:4: CHARA CHARD
                    {
                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std5917); 

                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std5919); 

                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:19: ( CHARC CHARK )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:19: ( CHARC CHARK )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:20: CHARC CHARK
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std5925); 

                    match(input,CHARK,FOLLOW_CHARK_in_spec_const_10_3_std5927); 

                    }


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:35: ( CHARC CHARN CHARA )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:35: ( CHARC CHARN CHARA )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:36: CHARC CHARN CHARA
                    {
                    match(input,CHARC,FOLLOW_CHARC_in_spec_const_10_3_std5933); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std5935); 

                    match(input,CHARA,FOLLOW_CHARA_in_spec_const_10_3_std5937); 

                    }


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:57: ( CHARD CHART )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:57: ( CHARD CHART )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1027:58: CHARD CHART
                    {
                    match(input,CHARD,FOLLOW_CHARD_in_spec_const_10_3_std5943); 

                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std5945); 

                    }


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:3: ( CHARP CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:3: ( CHARP CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:4: CHARP CHARN
                    {
                    match(input,CHARP,FOLLOW_CHARP_in_spec_const_10_3_std5953); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std5955); 

                    }


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:19: ( CHART CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:19: ( CHART CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1028:20: CHART CHARN
                    {
                    match(input,CHART,FOLLOW_CHART_in_spec_const_10_3_std5961); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std5963); 

                    }


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:3: ( CHARG CHARB )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:3: ( CHARG CHARB )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:4: CHARG CHARB
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std5971); 

                    match(input,CHARB,FOLLOW_CHARB_in_spec_const_10_3_std5973); 

                    }


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:19: ( CHARG CHARN )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:19: ( CHARG CHARN )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1029:20: CHARG CHARN
                    {
                    match(input,CHARG,FOLLOW_CHARG_in_spec_const_10_3_std5979); 

                    match(input,CHARN,FOLLOW_CHARN_in_spec_const_10_3_std5981); 

                    }


                    content(input.toString(retval.start,input.LT(-1)));

                    }
                    break;

            }
            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_const_10_3_std"


    public static class spec_act_10_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_act_10"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1032:1: spec_act_10[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_act_10_return spec_act_10(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_act_10_return retval = new HPRIMSParser.spec_act_10_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1034:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1035:3: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )* DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_106003);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1035:47: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"] )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==REPETITEUR) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1035:48: REPETITEUR st_non_sized_optionnal[$nameElement + \".1\"]
            	    {
            	    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_act_106007); 

            	    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_106009);
            	    st_non_sized_optionnal(nameElement + ".1");

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_act_106016); 

            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_act_106018);
            st_non_sized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_act_10"


    public static class spec_fac_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_fac_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1039:1: spec_fac_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? ;
    public final HPRIMSParser.spec_fac_6_return spec_fac_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_fac_6_return retval = new HPRIMSParser.spec_fac_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1041:22: ( st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1042:3: st_sized_optionnal[$nameElement + \".1\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_66042);
            st_sized_optionnal(nameElement + ".1", 9);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1043:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )? )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==DELIMITER2) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1043:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 9] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_66048); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_66050);
                    st_sized_optionnal(nameElement + ".2", 9);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1044:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40] )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==DELIMITER2) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1044:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 40]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_fac_66057); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_fac_66059);
                            st_sized_optionnal(nameElement + ".3", 40);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_fac_6"


    public static class spec_reg_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_reg_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1047:1: spec_reg_4[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_reg_4_return spec_reg_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_reg_4_return retval = new HPRIMSParser.spec_reg_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1049:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1050:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_reg_46086);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_reg_46091); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_reg_46093);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_reg_4"


    public static class spec_sized_10_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1055:1: spec_sized_10_6[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? ;
    public final HPRIMSParser.spec_sized_10_6_return spec_sized_10_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_6_return retval = new HPRIMSParser.spec_sized_10_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1057:22: ( st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1058:3: st_sized_optionnal[$nameElement + \".1\", 10] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_66117);
            st_sized_optionnal(nameElement + ".1", 10);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1059:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )? )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==DELIMITER2) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1059:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 60] ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_66123); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_66125);
                    st_sized_optionnal(nameElement + ".2", 60);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1060:4: ( DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10] )?
                    int alt237=2;
                    int LA237_0 = input.LA(1);

                    if ( (LA237_0==DELIMITER2) ) {
                        alt237=1;
                    }
                    switch (alt237) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1060:5: DELIMITER2 st_sized_optionnal[$nameElement + \".3\", 10]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_66132); 

                            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_10_66134);
                            st_sized_optionnal(nameElement + ".3", 10);

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_6"



    // $ANTLR start "spec_const_10_9"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1063:1: spec_const_10_9[String nameElement] : ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? ;
    public final void spec_const_10_9(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1065:22: ( ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:3: ( final_charL | final_charH | final_LL | final_HH | final_symbol_inf | final_symbol_sup | final_charN | final_charA | final_AA | final_Null | final_charU | final_charD | final_charB | final_charW | final_charR | final_charI | final_charS | final_MS | final_VS )?
            int alt239=20;
            switch ( input.LA(1) ) {
                case CHARL:
                    {
                    int LA239_1 = input.LA(2);

                    if ( (LA239_1==CHARL) ) {
                        alt239=3;
                    }
                    else if ( ((LA239_1 >= CR && LA239_1 <= DELIMITER1)||LA239_1==REPETITEUR) ) {
                        alt239=1;
                    }
                    }
                    break;
                case CHARH:
                    {
                    int LA239_2 = input.LA(2);

                    if ( (LA239_2==CHARH) ) {
                        alt239=4;
                    }
                    else if ( ((LA239_2 >= CR && LA239_2 <= DELIMITER1)||LA239_2==REPETITEUR) ) {
                        alt239=2;
                    }
                    }
                    break;
                case CHAR_SYMBOL_INF:
                    {
                    alt239=5;
                    }
                    break;
                case CHAR_SYMBOL_SUP:
                    {
                    alt239=6;
                    }
                    break;
                case CHARN:
                    {
                    int LA239_5 = input.LA(2);

                    if ( (LA239_5==CHARu) ) {
                        alt239=10;
                    }
                    else if ( ((LA239_5 >= CR && LA239_5 <= DELIMITER1)||LA239_5==REPETITEUR) ) {
                        alt239=7;
                    }
                    }
                    break;
                case CHARA:
                    {
                    int LA239_6 = input.LA(2);

                    if ( (LA239_6==CHARA) ) {
                        alt239=9;
                    }
                    else if ( ((LA239_6 >= CR && LA239_6 <= DELIMITER1)||LA239_6==REPETITEUR) ) {
                        alt239=8;
                    }
                    }
                    break;
                case CHARU:
                    {
                    alt239=11;
                    }
                    break;
                case CHARD:
                    {
                    alt239=12;
                    }
                    break;
                case CHARB:
                    {
                    alt239=13;
                    }
                    break;
                case CHARW:
                    {
                    alt239=14;
                    }
                    break;
                case CHARR:
                    {
                    alt239=15;
                    }
                    break;
                case CHARI:
                    {
                    alt239=16;
                    }
                    break;
                case CHARS:
                    {
                    alt239=17;
                    }
                    break;
                case CHARM:
                    {
                    alt239=18;
                    }
                    break;
                case CHARV:
                    {
                    alt239=19;
                    }
                    break;
            }

            switch (alt239) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:4: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_10_96162);
                    final_charL();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:18: final_charH
                    {
                    pushFollow(FOLLOW_final_charH_in_spec_const_10_96166);
                    final_charH();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:32: final_LL
                    {
                    pushFollow(FOLLOW_final_LL_in_spec_const_10_96170);
                    final_LL();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:43: final_HH
                    {
                    pushFollow(FOLLOW_final_HH_in_spec_const_10_96174);
                    final_HH();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:54: final_symbol_inf
                    {
                    pushFollow(FOLLOW_final_symbol_inf_in_spec_const_10_96178);
                    final_symbol_inf();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1066:73: final_symbol_sup
                    {
                    pushFollow(FOLLOW_final_symbol_sup_in_spec_const_10_96182);
                    final_symbol_sup();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:3: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_96188);
                    final_charN();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:17: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_96192);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 9 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:31: final_AA
                    {
                    pushFollow(FOLLOW_final_AA_in_spec_const_10_96196);
                    final_AA();

                    state._fsp--;


                    }
                    break;
                case 10 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:42: final_Null
                    {
                    pushFollow(FOLLOW_final_Null_in_spec_const_10_96200);
                    final_Null();

                    state._fsp--;


                    }
                    break;
                case 11 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:55: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_96204);
                    final_charU();

                    state._fsp--;


                    }
                    break;
                case 12 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:69: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_96208);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 13 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1067:83: final_charB
                    {
                    pushFollow(FOLLOW_final_charB_in_spec_const_10_96212);
                    final_charB();

                    state._fsp--;


                    }
                    break;
                case 14 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:3: final_charW
                    {
                    pushFollow(FOLLOW_final_charW_in_spec_const_10_96218);
                    final_charW();

                    state._fsp--;


                    }
                    break;
                case 15 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:17: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_96222);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 16 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:31: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_96226);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 17 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:45: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_96230);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 18 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:59: final_MS
                    {
                    pushFollow(FOLLOW_final_MS_in_spec_const_10_96234);
                    final_MS();

                    state._fsp--;


                    }
                    break;
                case 19 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1068:70: final_VS
                    {
                    pushFollow(FOLLOW_final_VS_in_spec_const_10_96238);
                    final_VS();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_9"



    // $ANTLR start "spec_const_10_11"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1070:1: spec_const_10_11[String nameElement] : ( final_charA | final_charS | final_charR | final_charN )? ;
    public final void spec_const_10_11(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1072:22: ( ( final_charA | final_charS | final_charR | final_charN )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:3: ( final_charA | final_charS | final_charR | final_charN )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:3: ( final_charA | final_charS | final_charR | final_charN )?
            int alt240=5;
            switch ( input.LA(1) ) {
                case CHARA:
                    {
                    alt240=1;
                    }
                    break;
                case CHARS:
                    {
                    alt240=2;
                    }
                    break;
                case CHARR:
                    {
                    alt240=3;
                    }
                    break;
                case CHARN:
                    {
                    alt240=4;
                    }
                    break;
            }

            switch (alt240) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:4: final_charA
                    {
                    pushFollow(FOLLOW_final_charA_in_spec_const_10_116259);
                    final_charA();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:18: final_charS
                    {
                    pushFollow(FOLLOW_final_charS_in_spec_const_10_116263);
                    final_charS();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:32: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_116267);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1073:46: final_charN
                    {
                    pushFollow(FOLLOW_final_charN_in_spec_const_10_116271);
                    final_charN();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_11"



    // $ANTLR start "spec_const_10_12"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1075:1: spec_const_10_12[String nameElement] : ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? ;
    public final void spec_const_10_12(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1077:22: ( ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:3: ( final_charR | final_charP | final_charF | final_charC | final_charI | final_charD | final_charX | final_charU )?
            int alt241=9;
            switch ( input.LA(1) ) {
                case CHARR:
                    {
                    alt241=1;
                    }
                    break;
                case CHARP:
                    {
                    alt241=2;
                    }
                    break;
                case CHARF:
                    {
                    alt241=3;
                    }
                    break;
                case CHARC:
                    {
                    alt241=4;
                    }
                    break;
                case CHARI:
                    {
                    alt241=5;
                    }
                    break;
                case CHARD:
                    {
                    alt241=6;
                    }
                    break;
                case CHARX:
                    {
                    alt241=7;
                    }
                    break;
                case CHARU:
                    {
                    alt241=8;
                    }
                    break;
            }

            switch (alt241) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:4: final_charR
                    {
                    pushFollow(FOLLOW_final_charR_in_spec_const_10_126292);
                    final_charR();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:18: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_10_126296);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 3 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:32: final_charF
                    {
                    pushFollow(FOLLOW_final_charF_in_spec_const_10_126300);
                    final_charF();

                    state._fsp--;


                    }
                    break;
                case 4 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:46: final_charC
                    {
                    pushFollow(FOLLOW_final_charC_in_spec_const_10_126304);
                    final_charC();

                    state._fsp--;


                    }
                    break;
                case 5 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:60: final_charI
                    {
                    pushFollow(FOLLOW_final_charI_in_spec_const_10_126308);
                    final_charI();

                    state._fsp--;


                    }
                    break;
                case 6 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1078:74: final_charD
                    {
                    pushFollow(FOLLOW_final_charD_in_spec_const_10_126312);
                    final_charD();

                    state._fsp--;


                    }
                    break;
                case 7 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1079:4: final_charX
                    {
                    pushFollow(FOLLOW_final_charX_in_spec_const_10_126319);
                    final_charX();

                    state._fsp--;


                    }
                    break;
                case 8 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1079:18: final_charU
                    {
                    pushFollow(FOLLOW_final_charU_in_spec_const_10_126323);
                    final_charU();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_10_12"



    // $ANTLR start "spec_const_12_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1081:1: spec_const_12_3[String nameElement] : ( final_charP | final_charL )? ;
    public final void spec_const_12_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1083:22: ( ( final_charP | final_charL )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1084:3: ( final_charP | final_charL )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1084:3: ( final_charP | final_charL )?
            int alt242=3;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==CHARP) ) {
                alt242=1;
            }
            else if ( (LA242_0==CHARL) ) {
                alt242=2;
            }
            switch (alt242) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1084:4: final_charP
                    {
                    pushFollow(FOLLOW_final_charP_in_spec_const_12_36344);
                    final_charP();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1084:18: final_charL
                    {
                    pushFollow(FOLLOW_final_charL_in_spec_const_12_36348);
                    final_charL();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_12_3"


    public static class spec_sized_mult_lvl1_st_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1086:1: spec_sized_mult_lvl1_st_mandatory_2[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return spec_sized_mult_lvl1_st_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1088:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1089:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_26368);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_26374); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_26376);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_2"


    public static class spec_sized_mult_lvl1_st_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1093:1: spec_sized_mult_lvl1_st_optionnal_2[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return spec_sized_mult_lvl1_st_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1095:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1096:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_26399);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1097:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==DELIMITER2) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1097:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_26405); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_26407);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_2"


    public static class spec_sized_mult_lvl1_st_optionnal_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1101:1: spec_sized_mult_lvl1_st_optionnal_4[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return spec_sized_mult_lvl1_st_optionnal_4(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1103:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1104:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46432);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1105:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )? )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==DELIMITER2) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1105:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46438); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46440);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1106:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )? )?
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==DELIMITER2) ) {
                        alt245=1;
                    }
                    switch (alt245) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1106:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46447); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46449);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1107:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] )?
                            int alt244=2;
                            int LA244_0 = input.LA(1);

                            if ( (LA244_0==DELIMITER2) ) {
                                alt244=1;
                            }
                            switch (alt244) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1107:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"]
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46457); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46459);
                                    st_non_sized_optionnal(nameElement + ".2");

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_4"


    public static class spec_sized_mult_lvl1_st_mandatory_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_mandatory_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1111:1: spec_sized_mult_lvl1_st_mandatory_6[String nameElement, int maxSize] : st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return spec_sized_mult_lvl1_st_mandatory_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_mandatory_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1113:22: ( st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1114:3: st_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".2\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".3\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".4\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".5\"] DELIMITER2 st_nonsized_mandatory[$nameElement + \".6\"]
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66488);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66494); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66496);
            st_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66503); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66505);
            st_nonsized_mandatory(nameElement + ".3");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66513); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66515);
            st_nonsized_mandatory(nameElement + ".4");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66524); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66526);
            st_nonsized_mandatory(nameElement + ".5");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66536); 

            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66538);
            st_nonsized_mandatory(nameElement + ".6");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_mandatory_6"


    public static class spec_sized_mult_lvl1_st_optionnal_6_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1122:1: spec_sized_mult_lvl1_st_optionnal_6[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return spec_sized_mult_lvl1_st_optionnal_6(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_6_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1124:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1125:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66561);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1126:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==DELIMITER2) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1126:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66568); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66570);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1127:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==DELIMITER2) ) {
                        alt250=1;
                    }
                    switch (alt250) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1127:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66578); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66580);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1128:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt249=2;
                            int LA249_0 = input.LA(1);

                            if ( (LA249_0==DELIMITER2) ) {
                                alt249=1;
                            }
                            switch (alt249) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1128:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66589); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66591);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1129:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt248=2;
                                    int LA248_0 = input.LA(1);

                                    if ( (LA248_0==DELIMITER2) ) {
                                        alt248=1;
                                    }
                                    switch (alt248) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1129:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66601); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66603);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1130:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt247=2;
                                            int LA247_0 = input.LA(1);

                                            if ( (LA247_0==DELIMITER2) ) {
                                                alt247=1;
                                            }
                                            switch (alt247) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1130:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66614); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66616);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_6"


    public static class spec_sized_mult_lvl1_st_optionnal_8_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_st_optionnal_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1134:1: spec_sized_mult_lvl1_st_optionnal_8[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return spec_sized_mult_lvl1_st_optionnal_8(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return retval = new HPRIMSParser.spec_sized_mult_lvl1_st_optionnal_8_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1136:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1137:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86649);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1138:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )? )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==DELIMITER2) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1138:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86655); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86657);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1139:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )? )?
                    int alt257=2;
                    int LA257_0 = input.LA(1);

                    if ( (LA257_0==DELIMITER2) ) {
                        alt257=1;
                    }
                    switch (alt257) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1139:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86664); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86666);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1140:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )? )?
                            int alt256=2;
                            int LA256_0 = input.LA(1);

                            if ( (LA256_0==DELIMITER2) ) {
                                alt256=1;
                            }
                            switch (alt256) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1140:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86674); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86676);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1141:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )? )?
                                    int alt255=2;
                                    int LA255_0 = input.LA(1);

                                    if ( (LA255_0==DELIMITER2) ) {
                                        alt255=1;
                                    }
                                    switch (alt255) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1141:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86685); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86687);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1142:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )? )?
                                            int alt254=2;
                                            int LA254_0 = input.LA(1);

                                            if ( (LA254_0==DELIMITER2) ) {
                                                alt254=1;
                                            }
                                            switch (alt254) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1142:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86697); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86699);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1143:8: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )? )?
                                                    int alt253=2;
                                                    int LA253_0 = input.LA(1);

                                                    if ( (LA253_0==DELIMITER2) ) {
                                                        alt253=1;
                                                    }
                                                    switch (alt253) {
                                                        case 1 :
                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1143:9: DELIMITER2 st_non_sized_optionnal[$nameElement + \".7\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            {
                                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86710); 

                                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86712);
                                                            st_non_sized_optionnal(nameElement + ".7");

                                                            state._fsp--;


                                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1144:9: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"] )?
                                                            int alt252=2;
                                                            int LA252_0 = input.LA(1);

                                                            if ( (LA252_0==DELIMITER2) ) {
                                                                alt252=1;
                                                            }
                                                            switch (alt252) {
                                                                case 1 :
                                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1144:10: DELIMITER2 st_non_sized_optionnal[$nameElement + \".8\"]
                                                                    {
                                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86724); 

                                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86726);
                                                                    st_non_sized_optionnal(nameElement + ".8");

                                                                    state._fsp--;


                                                                    }
                                                                    break;

                                                            }


                                                            }
                                                            break;

                                                    }


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_st_optionnal_8"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1148:1: spec_sized_mult_lvl2_st_optionnal_3[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_3(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1150:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1151:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36763);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1152:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==DELIMITER3) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1152:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_36769); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36771);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1153:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt259=2;
                    int LA259_0 = input.LA(1);

                    if ( (LA259_0==DELIMITER3) ) {
                        alt259=1;
                    }
                    switch (alt259) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1153:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_36778); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36780);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_3"



    // $ANTLR start "spec_sized_mult_lvl2_st_optionnal_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1155:1: spec_sized_mult_lvl2_st_optionnal_6[String nameElement] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final void spec_sized_mult_lvl2_st_optionnal_6(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1157:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1158:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66803);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1159:3: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==DELIMITER3) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1159:4: DELIMITER3 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66809); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66811);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1160:4: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt264=2;
                    int LA264_0 = input.LA(1);

                    if ( (LA264_0==DELIMITER3) ) {
                        alt264=1;
                    }
                    switch (alt264) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1160:5: DELIMITER3 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66818); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66820);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1161:5: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt263=2;
                            int LA263_0 = input.LA(1);

                            if ( (LA263_0==DELIMITER3) ) {
                                alt263=1;
                            }
                            switch (alt263) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1161:6: DELIMITER3 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66828); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66830);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1162:6: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt262=2;
                                    int LA262_0 = input.LA(1);

                                    if ( (LA262_0==DELIMITER3) ) {
                                        alt262=1;
                                    }
                                    switch (alt262) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1162:7: DELIMITER3 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66839); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66841);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1163:7: ( DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt261=2;
                                            int LA261_0 = input.LA(1);

                                            if ( (LA261_0==DELIMITER3) ) {
                                                alt261=1;
                                            }
                                            switch (alt261) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1163:8: DELIMITER3 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER3,FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66851); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66853);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_mult_lvl2_st_optionnal_6"


    public static class spec_sized_mult_lvl1_nm_optionnal_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_optionnal_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1165:1: spec_sized_mult_lvl1_nm_optionnal_2[String nameElement, int maxSize] : nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return spec_sized_mult_lvl1_nm_optionnal_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_optionnal_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1167:22: ( nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1168:3: nm_nonsized_optionnal[$nameElement + \".1\"] DELIMITER2 nm_nonsized_optionnal[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_26882);
            nm_nonsized_optionnal(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_26887); 

            pushFollow(FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_26889);
            nm_nonsized_optionnal(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_optionnal_2"


    public static class spec_sized_mult_lvl1_nm_mandatory_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_mult_lvl1_nm_mandatory_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1172:1: spec_sized_mult_lvl1_nm_mandatory_2[String nameElement, int maxSize] : nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] ;
    public final HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return spec_sized_mult_lvl1_nm_mandatory_2(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return retval = new HPRIMSParser.spec_sized_mult_lvl1_nm_mandatory_2_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1174:22: ( nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"] )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1175:3: nm_nonsized_mandatory[$nameElement + \".1\"] DELIMITER2 nm_nonsized_mandatory[$nameElement + \".2\"]
            {
            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_26914);
            nm_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_26919); 

            pushFollow(FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_26921);
            nm_nonsized_mandatory(nameElement + ".2");

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_mult_lvl1_nm_mandatory_2"


    public static class spec_sized_cna_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_cna"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1179:1: spec_sized_cna[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_cna_return spec_sized_cna(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_cna_return retval = new HPRIMSParser.spec_sized_cna_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1181:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1182:3: st_non_sized_optionnal[$nameElement + \".1\"] ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna6944);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1183:4: ( DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==DELIMITER2) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1183:5: DELIMITER2 spec_sized_mult_lvl2_st_optionnal_6[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna6951); 

                    pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna6953);
                    spec_sized_mult_lvl2_st_optionnal_6(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1184:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt266=2;
                    int LA266_0 = input.LA(1);

                    if ( (LA266_0==DELIMITER2) ) {
                        alt266=1;
                    }
                    switch (alt266) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1184:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_cna6961); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_cna6963);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_cna"


    public static class spec_sized_8_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_8_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1192:1: spec_sized_8_3[String nameElement, int maxSize] : ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_8_3_return spec_sized_8_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_8_3_return retval = new HPRIMSParser.spec_sized_8_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1194:22: ( ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1195:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1195:3: ( st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( ((LA269_0 >= CHARA && LA269_0 <= CHIFFRE9)||(LA269_0 >= LETTRE && LA269_0 <= POINT)) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1195:4: st_sized_mandatory[$nameElement + \".1\", 16] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    pushFollow(FOLLOW_st_sized_mandatory_in_spec_sized_8_36995);
                    st_sized_mandatory(nameElement + ".1", 16);

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1196:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==DELIMITER2) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1196:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_37002); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_37004);
                            st_non_sized_optionnal(nameElement + ".2");

                            state._fsp--;


                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_8_37012); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_8_37014);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_8_3"


    public static class spec_sized_9_3_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_3"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1208:1: spec_sized_9_3[String nameElement, int maxSize] : st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? ;
    public final HPRIMSParser.spec_sized_9_3_return spec_sized_9_3(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_3_return retval = new HPRIMSParser.spec_sized_9_3_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1210:22: ( st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1212:3: st_sized_optionnal[$nameElement + \".1\", 12] ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            {
            pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_37054);
            st_sized_optionnal(nameElement + ".1", 12);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1213:3: ( DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10] )?
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==DELIMITER2) ) {
                alt270=1;
            }
            switch (alt270) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1213:4: DELIMITER2 st_sized_optionnal[$nameElement + \".2\", 10]
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_37060); 

                    pushFollow(FOLLOW_st_sized_optionnal_in_spec_sized_9_37062);
                    st_sized_optionnal(nameElement + ".2", 10);

                    state._fsp--;


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_3"



    // $ANTLR start "spec_non_sized_9_8"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1216:1: spec_non_sized_9_8[String nameElement] : ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? ;
    public final void spec_non_sized_9_8(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1218:22: ( ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1219:3: ts_sized_optionnal[$nameElement + \".1\", 26] ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            {
            pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_87087);
            ts_sized_optionnal(nameElement + ".1", 26);

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1220:4: ( REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26] )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==REPETITEUR) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1220:5: REPETITEUR ts_sized_optionnal[$nameElement + \".2\", 26]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_non_sized_9_87094); 

                    pushFollow(FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_87096);
                    ts_sized_optionnal(nameElement + ".2", 26);

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_non_sized_9_8"


    public static class spec_sized_9_16_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_9_16"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1222:1: spec_sized_9_16[String nameElement, int maxSize] : spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? ;
    public final HPRIMSParser.spec_sized_9_16_return spec_sized_9_16(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_9_16_return retval = new HPRIMSParser.spec_sized_9_16_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1224:22: ( spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1225:3: spec_sized_mult_lvl2_st_optionnal_3[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            {
            pushFollow(FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_167117);
            spec_sized_mult_lvl2_st_optionnal_3(nameElement + ".2");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1226:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )? )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==DELIMITER2) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1226:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_167123); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_167125);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1227:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] )?
                    int alt272=2;
                    int LA272_0 = input.LA(1);

                    if ( (LA272_0==DELIMITER2) ) {
                        alt272=1;
                    }
                    switch (alt272) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1227:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"]
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_9_167132); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_9_167134);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_9_16"


    public static class spec_sized_10_4_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_10_4"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1230:1: spec_sized_10_4[String nameElement, int maxsize] : st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? ;
    public final HPRIMSParser.spec_sized_10_4_return spec_sized_10_4(String nameElement, int maxsize) throws RecognitionException {
        HPRIMSParser.spec_sized_10_4_return retval = new HPRIMSParser.spec_sized_10_4_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1232:22: ( st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1233:3: st_nonsized_mandatory[$nameElement + \".1\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            {
            pushFollow(FOLLOW_st_nonsized_mandatory_in_spec_sized_10_47161);
            st_nonsized_mandatory(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1234:3: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )? )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==DELIMITER2) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1234:4: DELIMITER2 st_non_sized_optionnal[$nameElement + \".2\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_47167); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47169);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1235:4: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )? )?
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==DELIMITER2) ) {
                        alt277=1;
                    }
                    switch (alt277) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1235:5: DELIMITER2 st_non_sized_optionnal[$nameElement + \".3\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            {
                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_47176); 

                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47178);
                            st_non_sized_optionnal(nameElement + ".3");

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1236:5: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )? )?
                            int alt276=2;
                            int LA276_0 = input.LA(1);

                            if ( (LA276_0==DELIMITER2) ) {
                                alt276=1;
                            }
                            switch (alt276) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1236:6: DELIMITER2 st_non_sized_optionnal[$nameElement + \".4\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    {
                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_47186); 

                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47188);
                                    st_non_sized_optionnal(nameElement + ".4");

                                    state._fsp--;


                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1237:6: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )? )?
                                    int alt275=2;
                                    int LA275_0 = input.LA(1);

                                    if ( (LA275_0==DELIMITER2) ) {
                                        alt275=1;
                                    }
                                    switch (alt275) {
                                        case 1 :
                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1237:7: DELIMITER2 st_non_sized_optionnal[$nameElement + \".5\"] ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            {
                                            match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_47197); 

                                            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47199);
                                            st_non_sized_optionnal(nameElement + ".5");

                                            state._fsp--;


                                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1238:7: ( DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"] )?
                                            int alt274=2;
                                            int LA274_0 = input.LA(1);

                                            if ( (LA274_0==DELIMITER2) ) {
                                                alt274=1;
                                            }
                                            switch (alt274) {
                                                case 1 :
                                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1238:8: DELIMITER2 st_non_sized_optionnal[$nameElement + \".6\"]
                                                    {
                                                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_spec_sized_10_47209); 

                                                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47211);
                                                    st_non_sized_optionnal(nameElement + ".6");

                                                    state._fsp--;


                                                    }
                                                    break;

                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxsize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_10_4"



    // $ANTLR start "spec_sized_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1241:1: spec_sized_10_6_tx[String nameElement, int maxSize] : (g= final_spec_10_6_tx )? ;
    public final void spec_sized_10_6_tx(String nameElement, int maxSize) throws RecognitionException {
        String g =null;



          ParserRuleReturnScope retval = new ParserRuleReturnScope();
          retval.start = input.LT(1);
          startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1246:22: ( (g= final_spec_10_6_tx )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1247:3: (g= final_spec_10_6_tx )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1247:4: (g= final_spec_10_6_tx )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( ((LA279_0 >= CHARA && LA279_0 <= CHIFFRE9)||LA279_0==DELIMITER2||(LA279_0 >= LETTRE && LA279_0 <= POINT)) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1247:4: g= final_spec_10_6_tx
                    {
                    pushFollow(FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx7246);
                    g=final_spec_10_6_tx();

                    state._fsp--;


                    }
                    break;

            }


            if (g != null)
                matchRegex(g, "^.{0," + maxSize + "}$", retval.start);

            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_sized_10_6_tx"


    public static class spec_sized_tn_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "spec_sized_tn"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1251:1: spec_sized_tn[String nameElement, int maxSize] : st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? ;
    public final HPRIMSParser.spec_sized_tn_return spec_sized_tn(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.spec_sized_tn_return retval = new HPRIMSParser.spec_sized_tn_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1253:22: ( st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1254:2: st_non_sized_optionnal[$nameElement + \".1\"] ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            {
            pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn7268);
            st_non_sized_optionnal(nameElement + ".1");

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1255:3: ( REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"] )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==REPETITEUR) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1255:4: REPETITEUR st_non_sized_optionnal[$nameElement + \".2\"]
                    {
                    match(input,REPETITEUR,FOLLOW_REPETITEUR_in_spec_sized_tn7274); 

                    pushFollow(FOLLOW_st_non_sized_optionnal_in_spec_sized_tn7276);
                    st_non_sized_optionnal(nameElement + ".2");

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "spec_sized_tn"


    public static class st_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1261:1: st_sized_optionnal[String nameElement, int maxSize] : ( final_st )? ;
    public final HPRIMSParser.st_sized_optionnal_return st_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_optionnal_return retval = new HPRIMSParser.st_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1263:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1264:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1264:3: ( final_st )?
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( ((LA281_0 >= CHARA && LA281_0 <= CHIFFRE9)||(LA281_0 >= LETTRE && LA281_0 <= POINT)) ) {
                alt281=1;
            }
            switch (alt281) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1264:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_sized_optionnal7304);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_optionnal"


    public static class st_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "st_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1268:1: st_sized_mandatory[String nameElement, int maxSize] : final_st ;
    public final HPRIMSParser.st_sized_mandatory_return st_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.st_sized_mandatory_return retval = new HPRIMSParser.st_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1270:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1271:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_sized_mandatory7327);
            final_st();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "st_sized_mandatory"



    // $ANTLR start "st_non_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1274:1: st_non_sized_optionnal[String nameElement] : ( final_st )? ;
    public final void st_non_sized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1276:22: ( ( final_st )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: ( final_st )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: ( final_st )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( ((LA282_0 >= CHARA && LA282_0 <= CHIFFRE9)||(LA282_0 >= LETTRE && LA282_0 <= POINT)) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1277:3: final_st
                    {
                    pushFollow(FOLLOW_final_st_in_st_non_sized_optionnal7349);
                    final_st();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_non_sized_optionnal"



    // $ANTLR start "st_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1279:1: st_nonsized_mandatory[String nameElement] : final_st ;
    public final void st_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1281:22: ( final_st )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1282:3: final_st
            {
            pushFollow(FOLLOW_final_st_in_st_nonsized_mandatory7368);
            final_st();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "st_nonsized_mandatory"


    public static class nm_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1284:1: nm_sized_optionnal[String nameElement, int maxSize] : ( final_nm )? ;
    public final HPRIMSParser.nm_sized_optionnal_return nm_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_optionnal_return retval = new HPRIMSParser.nm_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1286:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: ( final_nm )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( ((LA283_0 >= CHIFFRE0 && LA283_0 <= CHIFFRE9)||(LA283_0 >= MOINS && LA283_0 <= POINT)) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1287:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_sized_optionnal7386);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_optionnal"


    public static class nm_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1291:1: nm_sized_mandatory[String nameElement, int maxSize] : final_nm ;
    public final HPRIMSParser.nm_sized_mandatory_return nm_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_sized_mandatory_return retval = new HPRIMSParser.nm_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1293:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1294:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_sized_mandatory7409);
            final_nm();

            state._fsp--;


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_sized_mandatory"


    public static class nm_integer_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1298:1: nm_integer_sized_optionnal[String nameElement, int maxSize] : ( final_nm_integer )? ;
    public final HPRIMSParser.nm_integer_sized_optionnal_return nm_integer_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_optionnal_return retval = new HPRIMSParser.nm_integer_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1300:22: ( ( final_nm_integer )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1301:3: ( final_nm_integer )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1301:3: ( final_nm_integer )?
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( ((LA284_0 >= CHIFFRE0 && LA284_0 <= CHIFFRE9)) ) {
                alt284=1;
            }
            switch (alt284) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1301:3: final_nm_integer
                    {
                    pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal7431);
                    final_nm_integer();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                 matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_optionnal"


    public static class nm_integer_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "nm_integer_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1305:1: nm_integer_sized_mandatory[String nameElement, int maxSize] : final_nm_integer ;
    public final HPRIMSParser.nm_integer_sized_mandatory_return nm_integer_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.nm_integer_sized_mandatory_return retval = new HPRIMSParser.nm_integer_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1307:22: ( final_nm_integer )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1308:3: final_nm_integer
            {
            pushFollow(FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory7459);
            final_nm_integer();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "nm_integer_sized_mandatory"


    public static class ts_sized_optionnal_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1312:1: ts_sized_optionnal[String nameElement, int maxSize] : ( final_ts )? ;
    public final HPRIMSParser.ts_sized_optionnal_return ts_sized_optionnal(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_optionnal_return retval = new HPRIMSParser.ts_sized_optionnal_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1314:22: ( ( final_ts )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1315:3: ( final_ts )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1315:3: ( final_ts )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( ((LA285_0 >= CHIFFRE0 && LA285_0 <= CHIFFRE9)) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1315:3: final_ts
                    {
                    pushFollow(FOLLOW_final_ts_in_ts_sized_optionnal7482);
                    final_ts();

                    state._fsp--;


                    }
                    break;

            }


            if (input.toString(retval.start,input.LT(-1)) != null)
                matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_optionnal"


    public static class ts_sized_mandatory_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "ts_sized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1319:1: ts_sized_mandatory[String nameElement, int maxSize] : final_ts ;
    public final HPRIMSParser.ts_sized_mandatory_return ts_sized_mandatory(String nameElement, int maxSize) throws RecognitionException {
        HPRIMSParser.ts_sized_mandatory_return retval = new HPRIMSParser.ts_sized_mandatory_return();
        retval.start = input.LT(1);


        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1321:22: ( final_ts )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1322:3: final_ts
            {
            pushFollow(FOLLOW_final_ts_in_ts_sized_mandatory7505);
            final_ts();

            state._fsp--;


            matchRegex(input.toString(retval.start,input.LT(-1)), "^.{0," + maxSize + "}$", retval.start);

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "ts_sized_mandatory"



    // $ANTLR start "nm_nonsized_mandatory"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1325:1: nm_nonsized_mandatory[String nameElement] : final_nm ;
    public final void nm_nonsized_mandatory(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1327:22: ( final_nm )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1328:3: final_nm
            {
            pushFollow(FOLLOW_final_nm_in_nm_nonsized_mandatory7527);
            final_nm();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_mandatory"



    // $ANTLR start "nm_nonsized_optionnal"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1330:1: nm_nonsized_optionnal[String nameElement] : ( final_nm )? ;
    public final void nm_nonsized_optionnal(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1332:22: ( ( final_nm )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1333:3: ( final_nm )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1333:3: ( final_nm )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( ((LA286_0 >= CHIFFRE0 && LA286_0 <= CHIFFRE9)||(LA286_0 >= MOINS && LA286_0 <= POINT)) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1333:3: final_nm
                    {
                    pushFollow(FOLLOW_final_nm_in_nm_nonsized_optionnal7545);
                    final_nm();

                    state._fsp--;


                    }
                    break;

            }


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nm_nonsized_optionnal"



    // $ANTLR start "spec_const_7_13_1_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1335:1: spec_const_7_13_1_version_2_0[String nameElement] : final_version_2_0 ;
    public final void spec_const_7_13_1_version_2_0(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1337:22: ( final_version_2_0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1338:3: final_version_2_0
            {
            pushFollow(FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_07564);
            final_version_2_0();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_0"



    // $ANTLR start "spec_const_7_13_1_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1340:1: spec_const_7_13_1_version_2_1[String nameElement] : final_version_2_1 ;
    public final void spec_const_7_13_1_version_2_1(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1342:22: ( final_version_2_1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1343:3: final_version_2_1
            {
            pushFollow(FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_17582);
            final_version_2_1();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_1"



    // $ANTLR start "spec_const_7_13_1_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1345:1: spec_const_7_13_1_version_2_2[String nameElement] : final_version_2_2 ;
    public final void spec_const_7_13_1_version_2_2(String nameElement) throws RecognitionException {
        startElement(nameElement);
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1347:22: ( final_version_2_2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1348:3: final_version_2_2
            {
            pushFollow(FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_27602);
            final_version_2_2();

            state._fsp--;


            }

            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "spec_const_7_13_1_version_2_2"



    // $ANTLR start "final_spec_10_6_tx"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1352:1: final_spec_10_6_tx returns [String consoText] : g= content_spec_10_6 ;
    public final String final_spec_10_6_tx() throws RecognitionException {
        String consoText = null;


        String g =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1352:46: (g= content_spec_10_6 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1353:3: g= content_spec_10_6
            {
            pushFollow(FOLLOW_content_spec_10_6_in_final_spec_10_6_tx7619);
            g=content_spec_10_6();

            state._fsp--;


            content(g);
               consoText = g;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "final_spec_10_6_tx"



    // $ANTLR start "content_spec_10_6"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1357:1: content_spec_10_6 returns [String consoText] : (r= character | DELIMITER2 ) (p= content_spec_10_6 )? ;
    public final String content_spec_10_6() throws RecognitionException {
        String consoText = null;


        HPRIMSParser.character_return r =null;

        String p =null;


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1357:45: ( (r= character | DELIMITER2 ) (p= content_spec_10_6 )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1358:3: (r= character | DELIMITER2 ) (p= content_spec_10_6 )?
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1358:3: (r= character | DELIMITER2 )
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( ((LA287_0 >= CHARA && LA287_0 <= CHIFFRE9)||(LA287_0 >= LETTRE && LA287_0 <= POINT)) ) {
                alt287=1;
            }
            else if ( (LA287_0==DELIMITER2) ) {
                alt287=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 287, 0, input);

                throw nvae;

            }
            switch (alt287) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1358:4: r= character
                    {
                    pushFollow(FOLLOW_character_in_content_spec_10_67641);
                    r=character();

                    state._fsp--;


                    consoText = (r!=null?input.toString(r.start,r.stop):null);

                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1358:42: DELIMITER2
                    {
                    match(input,DELIMITER2,FOLLOW_DELIMITER2_in_content_spec_10_67647); 

                    consoText = "\n";

                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1359:6: (p= content_spec_10_6 )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( ((LA288_0 >= CHARA && LA288_0 <= CHIFFRE9)||LA288_0==DELIMITER2||(LA288_0 >= LETTRE && LA288_0 <= POINT)) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1359:6: p= content_spec_10_6
                    {
                    pushFollow(FOLLOW_content_spec_10_6_in_content_spec_10_67658);
                    p=content_spec_10_6();

                    state._fsp--;


                    }
                    break;

            }


            if (p != null) { consoText += p; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return consoText;
    }
    // $ANTLR end "content_spec_10_6"


    public static class final_ts_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ts"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1361:1: final_ts : chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? ;
    public final HPRIMSParser.final_ts_return final_ts() throws RecognitionException {
        HPRIMSParser.final_ts_return retval = new HPRIMSParser.final_ts_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1361:9: ( chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )? )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1362:3: chiffre chiffre chiffre chiffre chiffre chiffre ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            {
            pushFollow(FOLLOW_chiffre_in_final_ts7670);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts7672);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts7676);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts7678);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts7680);
            chiffre();

            state._fsp--;


            pushFollow(FOLLOW_chiffre_in_final_ts7684);
            chiffre();

            state._fsp--;


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1364:11: ( chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )? )?
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( ((LA291_0 >= CHIFFRE0 && LA291_0 <= CHIFFRE9)) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1364:12: chiffre chiffre ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    {
                    pushFollow(FOLLOW_chiffre_in_final_ts7687);
                    chiffre();

                    state._fsp--;


                    pushFollow(FOLLOW_chiffre_in_final_ts7689);
                    chiffre();

                    state._fsp--;


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1365:3: ( chiffre chiffre chiffre chiffre ( chiffre chiffre )? )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( ((LA290_0 >= CHIFFRE0 && LA290_0 <= CHIFFRE9)) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1365:4: chiffre chiffre chiffre chiffre ( chiffre chiffre )?
                            {
                            pushFollow(FOLLOW_chiffre_in_final_ts7694);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts7696);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts7698);
                            chiffre();

                            state._fsp--;


                            pushFollow(FOLLOW_chiffre_in_final_ts7702);
                            chiffre();

                            state._fsp--;


                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1366:11: ( chiffre chiffre )?
                            int alt289=2;
                            int LA289_0 = input.LA(1);

                            if ( ((LA289_0 >= CHIFFRE0 && LA289_0 <= CHIFFRE9)) ) {
                                alt289=1;
                            }
                            switch (alt289) {
                                case 1 :
                                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1366:12: chiffre chiffre
                                    {
                                    pushFollow(FOLLOW_chiffre_in_final_ts7705);
                                    chiffre();

                                    state._fsp--;


                                    pushFollow(FOLLOW_chiffre_in_final_ts7707);
                                    chiffre();

                                    state._fsp--;


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ts"


    public static class final_st_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_st"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1369:1: final_st : ( character )+ ;
    public final HPRIMSParser.final_st_return final_st() throws RecognitionException {
        HPRIMSParser.final_st_return retval = new HPRIMSParser.final_st_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1369:9: ( ( character )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1370:3: ( character )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1370:3: ( character )+
            int cnt292=0;
            loop292:
            do {
                int alt292=2;
                int LA292_0 = input.LA(1);

                if ( ((LA292_0 >= CHARA && LA292_0 <= CHIFFRE9)||(LA292_0 >= LETTRE && LA292_0 <= POINT)) ) {
                    alt292=1;
                }


                switch (alt292) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1370:3: character
            	    {
            	    pushFollow(FOLLOW_character_in_final_st7726);
            	    character();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt292 >= 1 ) break loop292;
                        EarlyExitException eee =
                            new EarlyExitException(292, input);
                        throw eee;
                }
                cnt292++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_st"


    public static class final_nm_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1373:1: final_nm : ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) ;
    public final HPRIMSParser.final_nm_return final_nm() throws RecognitionException {
        HPRIMSParser.final_nm_return retval = new HPRIMSParser.final_nm_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1373:9: ( ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1374:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1374:3: ( ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1374:4: ( PLUS | MOINS )? ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1374:4: ( PLUS | MOINS )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( ((LA293_0 >= MOINS && LA293_0 <= PLUS)) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:
                    {
                    if ( (input.LA(1) >= MOINS && input.LA(1) <= PLUS) ) {
                        input.consume();
                        state.errorRecovery=false;
                    }
                    else {
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }


            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:3: ( ( ( chiffre )+ ( POINT ( chiffre )* )? ) | ( POINT ( chiffre )+ ) )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( ((LA298_0 >= CHIFFRE0 && LA298_0 <= CHIFFRE9)) ) {
                alt298=1;
            }
            else if ( (LA298_0==POINT) ) {
                alt298=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;

            }
            switch (alt298) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:4: ( ( chiffre )+ ( POINT ( chiffre )* )? )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:5: ( chiffre )+ ( POINT ( chiffre )* )?
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:5: ( chiffre )+
                    int cnt294=0;
                    loop294:
                    do {
                        int alt294=2;
                        int LA294_0 = input.LA(1);

                        if ( ((LA294_0 >= CHIFFRE0 && LA294_0 <= CHIFFRE9)) ) {
                            alt294=1;
                        }


                        switch (alt294) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:5: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm7755);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt294 >= 1 ) break loop294;
                                EarlyExitException eee =
                                    new EarlyExitException(294, input);
                                throw eee;
                        }
                        cnt294++;
                    } while (true);


                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:14: ( POINT ( chiffre )* )?
                    int alt296=2;
                    int LA296_0 = input.LA(1);

                    if ( (LA296_0==POINT) ) {
                        alt296=1;
                    }
                    switch (alt296) {
                        case 1 :
                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:15: POINT ( chiffre )*
                            {
                            match(input,POINT,FOLLOW_POINT_in_final_nm7759); 

                            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:21: ( chiffre )*
                            loop295:
                            do {
                                int alt295=2;
                                int LA295_0 = input.LA(1);

                                if ( ((LA295_0 >= CHIFFRE0 && LA295_0 <= CHIFFRE9)) ) {
                                    alt295=1;
                                }


                                switch (alt295) {
                            	case 1 :
                            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1375:21: chiffre
                            	    {
                            	    pushFollow(FOLLOW_chiffre_in_final_nm7761);
                            	    chiffre();

                            	    state._fsp--;


                            	    }
                            	    break;

                            	default :
                            	    break loop295;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1376:4: ( POINT ( chiffre )+ )
                    {
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1376:4: ( POINT ( chiffre )+ )
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1376:5: POINT ( chiffre )+
                    {
                    match(input,POINT,FOLLOW_POINT_in_final_nm7771); 

                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1376:11: ( chiffre )+
                    int cnt297=0;
                    loop297:
                    do {
                        int alt297=2;
                        int LA297_0 = input.LA(1);

                        if ( ((LA297_0 >= CHIFFRE0 && LA297_0 <= CHIFFRE9)) ) {
                            alt297=1;
                        }


                        switch (alt297) {
                    	case 1 :
                    	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1376:11: chiffre
                    	    {
                    	    pushFollow(FOLLOW_chiffre_in_final_nm7773);
                    	    chiffre();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt297 >= 1 ) break loop297;
                                EarlyExitException eee =
                                    new EarlyExitException(297, input);
                                throw eee;
                        }
                        cnt297++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm"


    public static class final_nm_integer_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_nm_integer"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1379:1: final_nm_integer : ( chiffre )+ ;
    public final HPRIMSParser.final_nm_integer_return final_nm_integer() throws RecognitionException {
        HPRIMSParser.final_nm_integer_return retval = new HPRIMSParser.final_nm_integer_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1379:17: ( ( chiffre )+ )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1380:3: ( chiffre )+
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1380:3: ( chiffre )+
            int cnt299=0;
            loop299:
            do {
                int alt299=2;
                int LA299_0 = input.LA(1);

                if ( ((LA299_0 >= CHIFFRE0 && LA299_0 <= CHIFFRE9)) ) {
                    alt299=1;
                }


                switch (alt299) {
            	case 1 :
            	    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1380:3: chiffre
            	    {
            	    pushFollow(FOLLOW_chiffre_in_final_nm_integer7790);
            	    chiffre();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    if ( cnt299 >= 1 ) break loop299;
                        EarlyExitException eee =
                            new EarlyExitException(299, input);
                        throw eee;
                }
                cnt299++;
            } while (true);


            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_nm_integer"


    public static class final_ADM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ADM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1383:1: final_ADM : CHARA CHARD CHARM ;
    public final HPRIMSParser.final_ADM_return final_ADM() throws RecognitionException {
        HPRIMSParser.final_ADM_return retval = new HPRIMSParser.final_ADM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1383:10: ( CHARA CHARD CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1383:12: CHARA CHARD CHARM
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_ADM7802); 

            match(input,CHARD,FOLLOW_CHARD_in_final_ADM7804); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ADM7806); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ADM"


    public static class final_ORA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1384:1: final_ORA : CHARO CHARR CHARA ;
    public final HPRIMSParser.final_ORA_return final_ORA() throws RecognitionException {
        HPRIMSParser.final_ORA_return retval = new HPRIMSParser.final_ORA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1384:10: ( CHARO CHARR CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1384:12: CHARO CHARR CHARA
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORA7814); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORA7816); 

            match(input,CHARA,FOLLOW_CHARA_in_final_ORA7818); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORA"


    public static class final_ORU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1385:1: final_ORU : CHARO CHARR CHARU ;
    public final HPRIMSParser.final_ORU_return final_ORU() throws RecognitionException {
        HPRIMSParser.final_ORU_return retval = new HPRIMSParser.final_ORU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1385:10: ( CHARO CHARR CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1385:12: CHARO CHARR CHARU
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORU7826); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORU7828); 

            match(input,CHARU,FOLLOW_CHARU_in_final_ORU7830); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORU"


    public static class final_ORM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ORM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1386:1: final_ORM : CHARO CHARR CHARM ;
    public final HPRIMSParser.final_ORM_return final_ORM() throws RecognitionException {
        HPRIMSParser.final_ORM_return retval = new HPRIMSParser.final_ORM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1386:10: ( CHARO CHARR CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1386:12: CHARO CHARR CHARM
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_ORM7838); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ORM7840); 

            match(input,CHARM,FOLLOW_CHARM_in_final_ORM7842); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ORM"


    public static class final_FAC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FAC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1387:1: final_FAC : CHARF CHARA CHARC ;
    public final HPRIMSParser.final_FAC_return final_FAC() throws RecognitionException {
        HPRIMSParser.final_FAC_return retval = new HPRIMSParser.final_FAC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1387:10: ( CHARF CHARA CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1387:12: CHARF CHARA CHARC
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FAC7850); 

            match(input,CHARA,FOLLOW_CHARA_in_final_FAC7852); 

            match(input,CHARC,FOLLOW_CHARC_in_final_FAC7854); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FAC"


    public static class final_CART_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_CART"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1389:1: final_CART : CHARC CHARA CHARR CHART ;
    public final HPRIMSParser.final_CART_return final_CART() throws RecognitionException {
        HPRIMSParser.final_CART_return retval = new HPRIMSParser.final_CART_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1389:11: ( CHARC CHARA CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1389:13: CHARC CHARA CHARR CHART
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_CART7863); 

            match(input,CHARA,FOLLOW_CHARA_in_final_CART7865); 

            match(input,CHARR,FOLLOW_CHARR_in_final_CART7867); 

            match(input,CHART,FOLLOW_CHART_in_final_CART7869); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_CART"


    public static class final_PORT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PORT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1390:1: final_PORT : CHARP CHARO CHARR CHART ;
    public final HPRIMSParser.final_PORT_return final_PORT() throws RecognitionException {
        HPRIMSParser.final_PORT_return retval = new HPRIMSParser.final_PORT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1390:11: ( CHARP CHARO CHARR CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1390:13: CHARP CHARO CHARR CHART
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PORT7877); 

            match(input,CHARO,FOLLOW_CHARO_in_final_PORT7879); 

            match(input,CHARR,FOLLOW_CHARR_in_final_PORT7881); 

            match(input,CHART,FOLLOW_CHART_in_final_PORT7883); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PORT"


    public static class final_WHLC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WHLC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1391:1: final_WHLC : CHARW CHARH CHARL CHARC ;
    public final HPRIMSParser.final_WHLC_return final_WHLC() throws RecognitionException {
        HPRIMSParser.final_WHLC_return retval = new HPRIMSParser.final_WHLC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1391:11: ( CHARW CHARH CHARL CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1391:13: CHARW CHARH CHARL CHARC
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WHLC7891); 

            match(input,CHARH,FOLLOW_CHARH_in_final_WHLC7893); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WHLC7895); 

            match(input,CHARC,FOLLOW_CHARC_in_final_WHLC7897); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WHLC"


    public static class final_WALK_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_WALK"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1392:1: final_WALK : CHARW CHARA CHARL CHARK ;
    public final HPRIMSParser.final_WALK_return final_WALK() throws RecognitionException {
        HPRIMSParser.final_WALK_return retval = new HPRIMSParser.final_WALK_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1392:11: ( CHARW CHARA CHARL CHARK )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1392:13: CHARW CHARA CHARL CHARK
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_WALK7905); 

            match(input,CHARA,FOLLOW_CHARA_in_final_WALK7907); 

            match(input,CHARL,FOLLOW_CHARL_in_final_WALK7909); 

            match(input,CHARK,FOLLOW_CHARK_in_final_WALK7911); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_WALK"


    public static class final_LL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_LL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1394:1: final_LL : CHARL CHARL ;
    public final HPRIMSParser.final_LL_return final_LL() throws RecognitionException {
        HPRIMSParser.final_LL_return retval = new HPRIMSParser.final_LL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1394:9: ( CHARL CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1394:11: CHARL CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_LL7920); 

            match(input,CHARL,FOLLOW_CHARL_in_final_LL7922); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_LL"


    public static class final_AA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_AA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1395:1: final_AA : CHARA CHARA ;
    public final HPRIMSParser.final_AA_return final_AA() throws RecognitionException {
        HPRIMSParser.final_AA_return retval = new HPRIMSParser.final_AA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1395:9: ( CHARA CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1395:11: CHARA CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_AA7930); 

            match(input,CHARA,FOLLOW_CHARA_in_final_AA7932); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_AA"


    public static class final_HH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1396:1: final_HH : CHARH CHARH ;
    public final HPRIMSParser.final_HH_return final_HH() throws RecognitionException {
        HPRIMSParser.final_HH_return retval = new HPRIMSParser.final_HH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1396:9: ( CHARH CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1396:11: CHARH CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HH7940); 

            match(input,CHARH,FOLLOW_CHARH_in_final_HH7942); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HH"


    public static class final_MS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1397:1: final_MS : CHARM CHARS ;
    public final HPRIMSParser.final_MS_return final_MS() throws RecognitionException {
        HPRIMSParser.final_MS_return retval = new HPRIMSParser.final_MS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1397:9: ( CHARM CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1397:11: CHARM CHARS
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MS7950); 

            match(input,CHARS,FOLLOW_CHARS_in_final_MS7952); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MS"


    public static class final_VS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_VS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1398:1: final_VS : CHARV CHARS ;
    public final HPRIMSParser.final_VS_return final_VS() throws RecognitionException {
        HPRIMSParser.final_VS_return retval = new HPRIMSParser.final_VS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1398:9: ( CHARV CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1398:11: CHARV CHARS
            {
            match(input,CHARV,FOLLOW_CHARV_in_final_VS7960); 

            match(input,CHARS,FOLLOW_CHARS_in_final_VS7962); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_VS"


    public static class final_Null_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_Null"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1399:1: final_Null : CHARN CHARu CHARl CHARl ;
    public final HPRIMSParser.final_Null_return final_Null() throws RecognitionException {
        HPRIMSParser.final_Null_return retval = new HPRIMSParser.final_Null_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1399:11: ( CHARN CHARu CHARl CHARl )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1399:13: CHARN CHARu CHARl CHARl
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_Null7970); 

            match(input,CHARu,FOLLOW_CHARu_in_final_Null7972); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null7974); 

            match(input,CHARl,FOLLOW_CHARl_in_final_Null7976); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_Null"


    public static class final_symbol_inf_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_inf"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1400:1: final_symbol_inf : CHAR_SYMBOL_INF ;
    public final HPRIMSParser.final_symbol_inf_return final_symbol_inf() throws RecognitionException {
        HPRIMSParser.final_symbol_inf_return retval = new HPRIMSParser.final_symbol_inf_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1400:17: ( CHAR_SYMBOL_INF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1400:19: CHAR_SYMBOL_INF
            {
            match(input,CHAR_SYMBOL_INF,FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf7984); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_inf"


    public static class final_symbol_sup_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_sup"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1401:1: final_symbol_sup : CHAR_SYMBOL_SUP ;
    public final HPRIMSParser.final_symbol_sup_return final_symbol_sup() throws RecognitionException {
        HPRIMSParser.final_symbol_sup_return retval = new HPRIMSParser.final_symbol_sup_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1401:17: ( CHAR_SYMBOL_SUP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1401:19: CHAR_SYMBOL_SUP
            {
            match(input,CHAR_SYMBOL_SUP,FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup7992); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_sup"


    public static class final_symbol_plus_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_plus"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1402:1: final_symbol_plus : PLUS ;
    public final HPRIMSParser.final_symbol_plus_return final_symbol_plus() throws RecognitionException {
        HPRIMSParser.final_symbol_plus_return retval = new HPRIMSParser.final_symbol_plus_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1402:18: ( PLUS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1402:20: PLUS
            {
            match(input,PLUS,FOLLOW_PLUS_in_final_symbol_plus8000); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_plus"


    public static class final_symbol_moins_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_symbol_moins"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1403:1: final_symbol_moins : MOINS ;
    public final HPRIMSParser.final_symbol_moins_return final_symbol_moins() throws RecognitionException {
        HPRIMSParser.final_symbol_moins_return retval = new HPRIMSParser.final_symbol_moins_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1403:19: ( MOINS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1403:21: MOINS
            {
            match(input,MOINS,FOLLOW_MOINS_in_final_symbol_moins8008); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_symbol_moins"


    public static class final_version_2_0_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_0"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1405:1: final_version_2_0 : CHARH CHIFFRE2 POINT CHIFFRE0 ;
    public final HPRIMSParser.final_version_2_0_return final_version_2_0() throws RecognitionException {
        HPRIMSParser.final_version_2_0_return retval = new HPRIMSParser.final_version_2_0_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1405:18: ( CHARH CHIFFRE2 POINT CHIFFRE0 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1405:20: CHARH CHIFFRE2 POINT CHIFFRE0
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_08017); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_08019); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_08021); 

            match(input,CHIFFRE0,FOLLOW_CHIFFRE0_in_final_version_2_08023); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_0"


    public static class final_version_2_1_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_1"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1406:1: final_version_2_1 : CHARH CHIFFRE2 POINT CHIFFRE1 ;
    public final HPRIMSParser.final_version_2_1_return final_version_2_1() throws RecognitionException {
        HPRIMSParser.final_version_2_1_return retval = new HPRIMSParser.final_version_2_1_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1406:18: ( CHARH CHIFFRE2 POINT CHIFFRE1 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1406:20: CHARH CHIFFRE2 POINT CHIFFRE1
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_18031); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_18033); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_18035); 

            match(input,CHIFFRE1,FOLLOW_CHIFFRE1_in_final_version_2_18037); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_1"


    public static class final_version_2_2_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_version_2_2"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1407:1: final_version_2_2 : CHARH CHIFFRE2 POINT CHIFFRE2 ;
    public final HPRIMSParser.final_version_2_2_return final_version_2_2() throws RecognitionException {
        HPRIMSParser.final_version_2_2_return retval = new HPRIMSParser.final_version_2_2_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1407:18: ( CHARH CHIFFRE2 POINT CHIFFRE2 )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1407:20: CHARH CHIFFRE2 POINT CHIFFRE2
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_version_2_28045); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_28047); 

            match(input,POINT,FOLLOW_POINT_in_final_version_2_28049); 

            match(input,CHIFFRE2,FOLLOW_CHIFFRE2_in_final_version_2_28051); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_version_2_2"


    public static class final_OP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_OP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1409:1: final_OP : CHARO CHARP ;
    public final HPRIMSParser.final_OP_return final_OP() throws RecognitionException {
        HPRIMSParser.final_OP_return retval = new HPRIMSParser.final_OP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1409:9: ( CHARO CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1409:11: CHARO CHARP
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_OP8060); 

            match(input,CHARP,FOLLOW_CHARP_in_final_OP8062); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_OP"


    public static class final_IP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_IP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1410:1: final_IP : CHARI CHARP ;
    public final HPRIMSParser.final_IP_return final_IP() throws RecognitionException {
        HPRIMSParser.final_IP_return retval = new HPRIMSParser.final_IP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1410:9: ( CHARI CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1410:11: CHARI CHARP
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_IP8070); 

            match(input,CHARP,FOLLOW_CHARP_in_final_IP8072); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_IP"


    public static class final_ER_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_ER"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1411:1: final_ER : CHARE CHARR ;
    public final HPRIMSParser.final_ER_return final_ER() throws RecognitionException {
        HPRIMSParser.final_ER_return retval = new HPRIMSParser.final_ER_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1411:9: ( CHARE CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1411:11: CHARE CHARR
            {
            match(input,CHARE,FOLLOW_CHARE_in_final_ER8080); 

            match(input,CHARR,FOLLOW_CHARR_in_final_ER8082); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_ER"


    public static class final_PA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1412:1: final_PA : CHARP CHARA ;
    public final HPRIMSParser.final_PA_return final_PA() throws RecognitionException {
        HPRIMSParser.final_PA_return retval = new HPRIMSParser.final_PA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1412:9: ( CHARP CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1412:11: CHARP CHARA
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PA8090); 

            match(input,CHARA,FOLLOW_CHARA_in_final_PA8092); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PA"


    public static class final_MP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_MP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1413:1: final_MP : CHARM CHARP ;
    public final HPRIMSParser.final_MP_return final_MP() throws RecognitionException {
        HPRIMSParser.final_MP_return retval = new HPRIMSParser.final_MP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1413:9: ( CHARM CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1413:11: CHARM CHARP
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_MP8100); 

            match(input,CHARP,FOLLOW_CHARP_in_final_MP8102); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_MP"


    public static class final_TM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1414:1: final_TM : CHART CHARM ;
    public final HPRIMSParser.final_TM_return final_TM() throws RecognitionException {
        HPRIMSParser.final_TM_return retval = new HPRIMSParser.final_TM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1414:9: ( CHART CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1414:11: CHART CHARM
            {
            match(input,CHART,FOLLOW_CHART_in_final_TM8110); 

            match(input,CHARM,FOLLOW_CHARM_in_final_TM8112); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TM"


    public static class final_TR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_TR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1415:1: final_TR : CHART CHARR ;
    public final HPRIMSParser.final_TR_return final_TR() throws RecognitionException {
        HPRIMSParser.final_TR_return retval = new HPRIMSParser.final_TR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1415:9: ( CHART CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1415:11: CHART CHARR
            {
            match(input,CHART,FOLLOW_CHART_in_final_TR8120); 

            match(input,CHARR,FOLLOW_CHARR_in_final_TR8122); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_TR"


    public static class final_FR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_FR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1416:1: final_FR : CHARF CHARR ;
    public final HPRIMSParser.final_FR_return final_FR() throws RecognitionException {
        HPRIMSParser.final_FR_return retval = new HPRIMSParser.final_FR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1416:9: ( CHARF CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1416:11: CHARF CHARR
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_FR8130); 

            match(input,CHARR,FOLLOW_CHARR_in_final_FR8132); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_FR"


    public static class final_PF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_PF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1417:1: final_PF : CHARP CHARF ;
    public final HPRIMSParser.final_PF_return final_PF() throws RecognitionException {
        HPRIMSParser.final_PF_return retval = new HPRIMSParser.final_PF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1417:9: ( CHARP CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1417:11: CHARP CHARF
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_PF8140); 

            match(input,CHARF,FOLLOW_CHARF_in_final_PF8142); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_PF"


    public static class final_SS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_SS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1418:1: final_SS : CHARS CHARS ;
    public final HPRIMSParser.final_SS_return final_SS() throws RecognitionException {
        HPRIMSParser.final_SS_return retval = new HPRIMSParser.final_SS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1418:9: ( CHARS CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1418:11: CHARS CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_SS8150); 

            match(input,CHARS,FOLLOW_CHARS_in_final_SS8152); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_SS"


    public static class final_RX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_RX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1419:1: final_RX : CHARR CHARX ;
    public final HPRIMSParser.final_RX_return final_RX() throws RecognitionException {
        HPRIMSParser.final_RX_return retval = new HPRIMSParser.final_RX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1419:9: ( CHARR CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1419:11: CHARR CHARX
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_RX8160); 

            match(input,CHARX,FOLLOW_CHARX_in_final_RX8162); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_RX"


    public static class final_HR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_HR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1420:1: final_HR : CHARH CHARR ;
    public final HPRIMSParser.final_HR_return final_HR() throws RecognitionException {
        HPRIMSParser.final_HR_return retval = new HPRIMSParser.final_HR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1420:9: ( CHARH CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1420:11: CHARH CHARR
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_HR8170); 

            match(input,CHARR,FOLLOW_CHARR_in_final_HR8172); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_HR"


    public static class final_charA_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charA"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1422:1: final_charA : CHARA ;
    public final HPRIMSParser.final_charA_return final_charA() throws RecognitionException {
        HPRIMSParser.final_charA_return retval = new HPRIMSParser.final_charA_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1422:12: ( CHARA )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1422:14: CHARA
            {
            match(input,CHARA,FOLLOW_CHARA_in_final_charA8181); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charA"


    public static class final_charB_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charB"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1423:1: final_charB : CHARB ;
    public final HPRIMSParser.final_charB_return final_charB() throws RecognitionException {
        HPRIMSParser.final_charB_return retval = new HPRIMSParser.final_charB_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1423:12: ( CHARB )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1423:14: CHARB
            {
            match(input,CHARB,FOLLOW_CHARB_in_final_charB8189); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charB"


    public static class final_charC_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charC"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1424:1: final_charC : CHARC ;
    public final HPRIMSParser.final_charC_return final_charC() throws RecognitionException {
        HPRIMSParser.final_charC_return retval = new HPRIMSParser.final_charC_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1424:12: ( CHARC )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1424:14: CHARC
            {
            match(input,CHARC,FOLLOW_CHARC_in_final_charC8197); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charC"


    public static class final_charD_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charD"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1425:1: final_charD : CHARD ;
    public final HPRIMSParser.final_charD_return final_charD() throws RecognitionException {
        HPRIMSParser.final_charD_return retval = new HPRIMSParser.final_charD_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1425:12: ( CHARD )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1425:14: CHARD
            {
            match(input,CHARD,FOLLOW_CHARD_in_final_charD8205); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charD"


    public static class final_charF_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charF"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1426:1: final_charF : CHARF ;
    public final HPRIMSParser.final_charF_return final_charF() throws RecognitionException {
        HPRIMSParser.final_charF_return retval = new HPRIMSParser.final_charF_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1426:12: ( CHARF )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1426:14: CHARF
            {
            match(input,CHARF,FOLLOW_CHARF_in_final_charF8213); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charF"


    public static class final_charH_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charH"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1427:1: final_charH : CHARH ;
    public final HPRIMSParser.final_charH_return final_charH() throws RecognitionException {
        HPRIMSParser.final_charH_return retval = new HPRIMSParser.final_charH_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1427:12: ( CHARH )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1427:14: CHARH
            {
            match(input,CHARH,FOLLOW_CHARH_in_final_charH8221); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charH"


    public static class final_charI_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charI"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1428:1: final_charI : CHARI ;
    public final HPRIMSParser.final_charI_return final_charI() throws RecognitionException {
        HPRIMSParser.final_charI_return retval = new HPRIMSParser.final_charI_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1428:12: ( CHARI )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1428:14: CHARI
            {
            match(input,CHARI,FOLLOW_CHARI_in_final_charI8229); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charI"


    public static class final_charL_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charL"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1429:1: final_charL : CHARL ;
    public final HPRIMSParser.final_charL_return final_charL() throws RecognitionException {
        HPRIMSParser.final_charL_return retval = new HPRIMSParser.final_charL_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1429:12: ( CHARL )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1429:14: CHARL
            {
            match(input,CHARL,FOLLOW_CHARL_in_final_charL8237); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charL"


    public static class final_charM_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charM"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1430:1: final_charM : CHARM ;
    public final HPRIMSParser.final_charM_return final_charM() throws RecognitionException {
        HPRIMSParser.final_charM_return retval = new HPRIMSParser.final_charM_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1430:12: ( CHARM )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1430:14: CHARM
            {
            match(input,CHARM,FOLLOW_CHARM_in_final_charM8245); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charM"


    public static class final_charN_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charN"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1431:1: final_charN : CHARN ;
    public final HPRIMSParser.final_charN_return final_charN() throws RecognitionException {
        HPRIMSParser.final_charN_return retval = new HPRIMSParser.final_charN_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1431:12: ( CHARN )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1431:14: CHARN
            {
            match(input,CHARN,FOLLOW_CHARN_in_final_charN8253); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charN"


    public static class final_charO_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charO"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1432:1: final_charO : CHARO ;
    public final HPRIMSParser.final_charO_return final_charO() throws RecognitionException {
        HPRIMSParser.final_charO_return retval = new HPRIMSParser.final_charO_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1432:12: ( CHARO )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1432:14: CHARO
            {
            match(input,CHARO,FOLLOW_CHARO_in_final_charO8261); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charO"


    public static class final_charP_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charP"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1433:1: final_charP : CHARP ;
    public final HPRIMSParser.final_charP_return final_charP() throws RecognitionException {
        HPRIMSParser.final_charP_return retval = new HPRIMSParser.final_charP_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1433:12: ( CHARP )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1433:14: CHARP
            {
            match(input,CHARP,FOLLOW_CHARP_in_final_charP8269); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charP"


    public static class final_charR_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charR"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1434:1: final_charR : CHARR ;
    public final HPRIMSParser.final_charR_return final_charR() throws RecognitionException {
        HPRIMSParser.final_charR_return retval = new HPRIMSParser.final_charR_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1434:12: ( CHARR )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1434:14: CHARR
            {
            match(input,CHARR,FOLLOW_CHARR_in_final_charR8277); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charR"


    public static class final_charS_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charS"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1435:1: final_charS : CHARS ;
    public final HPRIMSParser.final_charS_return final_charS() throws RecognitionException {
        HPRIMSParser.final_charS_return retval = new HPRIMSParser.final_charS_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1435:12: ( CHARS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1435:14: CHARS
            {
            match(input,CHARS,FOLLOW_CHARS_in_final_charS8285); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charS"


    public static class final_charT_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charT"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1436:1: final_charT : CHART ;
    public final HPRIMSParser.final_charT_return final_charT() throws RecognitionException {
        HPRIMSParser.final_charT_return retval = new HPRIMSParser.final_charT_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1436:12: ( CHART )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1436:14: CHART
            {
            match(input,CHART,FOLLOW_CHART_in_final_charT8293); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charT"


    public static class final_charU_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charU"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1437:1: final_charU : CHARU ;
    public final HPRIMSParser.final_charU_return final_charU() throws RecognitionException {
        HPRIMSParser.final_charU_return retval = new HPRIMSParser.final_charU_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1437:12: ( CHARU )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1437:14: CHARU
            {
            match(input,CHARU,FOLLOW_CHARU_in_final_charU8301); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charU"


    public static class final_charW_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charW"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1438:1: final_charW : CHARW ;
    public final HPRIMSParser.final_charW_return final_charW() throws RecognitionException {
        HPRIMSParser.final_charW_return retval = new HPRIMSParser.final_charW_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1438:12: ( CHARW )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1438:14: CHARW
            {
            match(input,CHARW,FOLLOW_CHARW_in_final_charW8309); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charW"


    public static class final_charX_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "final_charX"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1439:1: final_charX : CHARX ;
    public final HPRIMSParser.final_charX_return final_charX() throws RecognitionException {
        HPRIMSParser.final_charX_return retval = new HPRIMSParser.final_charX_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1439:12: ( CHARX )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1439:14: CHARX
            {
            match(input,CHARX,FOLLOW_CHARX_in_final_charX8317); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "final_charX"


    public static class delimiters_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "delimiters"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1442:1: delimiters : DELIMITERS ;
    public final HPRIMSParser.delimiters_return delimiters() throws RecognitionException {
        HPRIMSParser.delimiters_return retval = new HPRIMSParser.delimiters_return();
        retval.start = input.LT(1);


        startElement("H.2");
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1444:22: ( DELIMITERS )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1445:3: DELIMITERS
            {
            match(input,DELIMITERS,FOLLOW_DELIMITERS_in_delimiters8338); 

            content(input.toString(retval.start,input.LT(-1)));

            }

            retval.stop = input.LT(-1);


            endElement();
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "delimiters"


    public static class character_return extends ParserRuleReturnScope {
    };


    // $ANTLR start "character"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1450:1: character : ( lettre | chiffre ) ;
    public final HPRIMSParser.character_return character() throws RecognitionException {
        HPRIMSParser.character_return retval = new HPRIMSParser.character_return();
        retval.start = input.LT(1);


        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1450:10: ( ( lettre | chiffre ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1451:3: ( lettre | chiffre )
            {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1451:3: ( lettre | chiffre )
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( ((LA300_0 >= CHARA && LA300_0 <= CHARu)||(LA300_0 >= LETTRE && LA300_0 <= POINT)) ) {
                alt300=1;
            }
            else if ( ((LA300_0 >= CHIFFRE0 && LA300_0 <= CHIFFRE9)) ) {
                alt300=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;

            }
            switch (alt300) {
                case 1 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1451:4: lettre
                    {
                    pushFollow(FOLLOW_lettre_in_character8354);
                    lettre();

                    state._fsp--;


                    }
                    break;
                case 2 :
                    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1451:13: chiffre
                    {
                    pushFollow(FOLLOW_chiffre_in_character8358);
                    chiffre();

                    state._fsp--;


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "character"



    // $ANTLR start "chiffre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1453:1: chiffre : ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) ;
    public final void chiffre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1453:8: ( ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHIFFRE0 && input.LA(1) <= CHIFFRE9) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "chiffre"



    // $ANTLR start "lettre"
    // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1457:1: lettre : ~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) ;
    public final void lettre() throws RecognitionException {
        try {
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:1457:7: (~ ( CHIFFRE0 | CHIFFRE1 | CHIFFRE2 | CHIFFRE3 | CHIFFRE4 | CHIFFRE5 | CHIFFRE6 | CHIFFRE7 | CHIFFRE8 | CHIFFRE9 | CR | TOKENMISMATCH | DELIMITER1 | DELIMITER2 | DELIMITER3 | DELIMITERS | REPETITEUR ) )
            // C:\\Users\\delabre\\git\\libHprim\\target\\classes\\aider\\org\\hprim\\parser\\antlr\\HPRIMS.g:
            {
            if ( (input.LA(1) >= CHARA && input.LA(1) <= CHARu)||(input.LA(1) >= LETTRE && input.LA(1) <= POINT) ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "lettre"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    static final String DFA1_eotS =
        "\u009d\uffff";
    static final String DFA1_eofS =
        "\u009d\uffff";
    static final String DFA1_minS =
        "\1\54\1\51\24\4\1\23\1\7\4\4\1\17\3\4\4\51\107\4\1\7\2\4\1\7\2\4"+
        "\1\7\2\4\1\7\14\51\4\13\4\40\4\60\4\36\14\uffff";
    static final String DFA1_maxS =
        "\1\54\1\51\20\60\1\21\3\60\1\23\1\7\3\60\1\26\1\17\3\60\4\51\3\60"+
        "\4\61\2\60\2\61\2\60\2\61\2\60\2\61\2\60\2\61\60\60\1\25\2\60\1"+
        "\25\2\60\1\25\2\60\1\25\14\51\4\13\4\40\4\60\4\40\14\uffff";
    static final String DFA1_acceptS =
        "\u0091\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14";
    static final String DFA1_specialS =
        "\u009d\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\1",
            "\1\2",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\3\12\4\1\uffff\1\5\3\uffff\4\3",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\6\12\7\1\uffff\1\10\3\uffff\4\6",
            "\32\11\12\12\5\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\11\12\12\2\uffff\1\13\2\uffff\4\11",
            "\32\14\12\15\5\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\14\12\15\1\uffff\1\16\3\uffff\4\14",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\17\12\20\1\uffff\1\22\1\21\2\uffff\4\17",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\1\27\14\uffff\1\26",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\23\12\24\1\uffff\1\22\1\25\2\uffff\4\23",
            "\32\30\12\31\1\uffff\1\22\1\32\2\uffff\4\30",
            "\1\33",
            "\1\34",
            "\32\30\12\31\1\uffff\1\22\1\32\2\uffff\4\30",
            "\32\30\12\31\1\uffff\1\22\1\32\2\uffff\4\30",
            "\32\35\12\36\1\uffff\1\22\1\37\2\uffff\4\35",
            "\1\42\12\uffff\1\41\6\uffff\1\40",
            "\1\43",
            "\32\35\12\36\1\uffff\1\22\1\37\2\uffff\4\35",
            "\32\35\12\36\1\uffff\1\22\1\37\2\uffff\4\35",
            "\32\44\12\45\1\uffff\1\22\1\46\2\uffff\4\44",
            "\1\47",
            "\1\50",
            "\1\51",
            "\1\52",
            "\32\44\12\45\1\uffff\1\22\1\46\2\uffff\4\44",
            "\32\44\12\45\1\uffff\1\22\1\46\2\uffff\4\44",
            "\32\53\12\54\1\uffff\1\22\3\uffff\4\53",
            "\32\55\12\56\1\uffff\1\60\3\uffff\4\55\1\57",
            "\32\61\12\62\1\uffff\1\64\3\uffff\4\61\1\63",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\53\12\54\1\uffff\1\22\3\uffff\4\53",
            "\32\53\12\54\1\uffff\1\22\3\uffff\4\53",
            "\32\55\12\56\1\uffff\1\60\3\uffff\4\55\1\57",
            "\32\55\12\56\1\uffff\1\60\3\uffff\4\55\1\57",
            "\32\75\12\76\1\uffff\1\60\3\uffff\4\75",
            "\32\77\12\100\1\uffff\1\101\3\uffff\4\77",
            "\32\61\12\62\1\uffff\1\64\3\uffff\4\61\1\63",
            "\32\61\12\62\1\uffff\1\64\3\uffff\4\61\1\63",
            "\32\102\12\103\1\uffff\1\64\3\uffff\4\102",
            "\32\104\12\105\1\uffff\1\106\3\uffff\4\104",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\65\12\66\1\uffff\1\70\3\uffff\4\65\1\67",
            "\32\107\12\110\1\uffff\1\70\3\uffff\4\107",
            "\32\111\12\112\1\uffff\1\113\3\uffff\4\111",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\71\12\72\1\uffff\1\74\3\uffff\4\71\1\73",
            "\32\114\12\115\1\uffff\1\74\3\uffff\4\114",
            "\32\116\12\117\1\uffff\1\120\3\uffff\4\116",
            "\32\75\12\76\1\uffff\1\60\3\uffff\4\75",
            "\32\75\12\76\1\uffff\1\60\3\uffff\4\75",
            "\32\77\12\100\1\uffff\1\101\3\uffff\4\77",
            "\32\77\12\100\1\uffff\1\101\3\uffff\4\77",
            "\32\121\12\122\5\uffff\4\121",
            "\32\102\12\103\1\uffff\1\64\3\uffff\4\102",
            "\32\102\12\103\1\uffff\1\64\3\uffff\4\102",
            "\32\104\12\105\1\uffff\1\106\3\uffff\4\104",
            "\32\104\12\105\1\uffff\1\106\3\uffff\4\104",
            "\32\123\12\124\5\uffff\4\123",
            "\32\107\12\110\1\uffff\1\70\3\uffff\4\107",
            "\32\107\12\110\1\uffff\1\70\3\uffff\4\107",
            "\32\111\12\112\1\uffff\1\113\3\uffff\4\111",
            "\32\111\12\112\1\uffff\1\113\3\uffff\4\111",
            "\32\125\12\126\5\uffff\4\125",
            "\32\114\12\115\1\uffff\1\74\3\uffff\4\114",
            "\32\114\12\115\1\uffff\1\74\3\uffff\4\114",
            "\32\116\12\117\1\uffff\1\120\3\uffff\4\116",
            "\32\116\12\117\1\uffff\1\120\3\uffff\4\116",
            "\32\127\12\130\5\uffff\4\127",
            "\32\121\12\122\2\uffff\1\131\2\uffff\4\121",
            "\32\121\12\122\2\uffff\1\131\2\uffff\4\121",
            "\32\123\12\124\2\uffff\1\132\2\uffff\4\123",
            "\32\123\12\124\2\uffff\1\132\2\uffff\4\123",
            "\32\125\12\126\2\uffff\1\133\2\uffff\4\125",
            "\32\125\12\126\2\uffff\1\133\2\uffff\4\125",
            "\32\127\12\130\2\uffff\1\134\2\uffff\4\127",
            "\32\127\12\130\2\uffff\1\134\2\uffff\4\127",
            "\32\135\12\136\5\uffff\4\135",
            "\32\137\12\140\5\uffff\4\137",
            "\32\141\12\142\5\uffff\4\141",
            "\32\143\12\144\5\uffff\4\143",
            "\32\135\12\136\1\uffff\1\145\3\uffff\4\135",
            "\32\135\12\136\1\uffff\1\145\3\uffff\4\135",
            "\32\137\12\140\1\uffff\1\146\3\uffff\4\137",
            "\32\137\12\140\1\uffff\1\146\3\uffff\4\137",
            "\32\141\12\142\1\uffff\1\147\3\uffff\4\141",
            "\32\141\12\142\1\uffff\1\147\3\uffff\4\141",
            "\32\143\12\144\1\uffff\1\150\3\uffff\4\143",
            "\32\143\12\144\1\uffff\1\150\3\uffff\4\143",
            "\32\151\12\152\1\uffff\1\153\3\uffff\4\151",
            "\32\154\12\155\1\uffff\1\156\3\uffff\4\154",
            "\32\157\12\160\1\uffff\1\161\3\uffff\4\157",
            "\32\162\12\163\1\uffff\1\164\3\uffff\4\162",
            "\32\151\12\152\1\uffff\1\153\3\uffff\4\151",
            "\32\151\12\152\1\uffff\1\153\3\uffff\4\151",
            "\1\166\12\uffff\1\165\2\uffff\1\167",
            "\32\154\12\155\1\uffff\1\156\3\uffff\4\154",
            "\32\154\12\155\1\uffff\1\156\3\uffff\4\154",
            "\1\171\12\uffff\1\170\2\uffff\1\172",
            "\32\157\12\160\1\uffff\1\161\3\uffff\4\157",
            "\32\157\12\160\1\uffff\1\161\3\uffff\4\157",
            "\1\174\12\uffff\1\173\2\uffff\1\175",
            "\32\162\12\163\1\uffff\1\164\3\uffff\4\162",
            "\32\162\12\163\1\uffff\1\164\3\uffff\4\162",
            "\1\177\12\uffff\1\176\2\uffff\1\u0080",
            "\1\u0081",
            "\1\u0081",
            "\1\u0081",
            "\1\u0082",
            "\1\u0082",
            "\1\u0082",
            "\1\u0083",
            "\1\u0083",
            "\1\u0083",
            "\1\u0084",
            "\1\u0084",
            "\1\u0084",
            "\1\u0085",
            "\1\u0086",
            "\1\u0087",
            "\1\u0088",
            "\1\u0089",
            "\1\u008a",
            "\1\u008b",
            "\1\u008c",
            "\1\u008d",
            "\1\u008e",
            "\1\u008f",
            "\1\u0090",
            "\1\u0093\1\u0092\1\u0091",
            "\1\u0096\1\u0095\1\u0094",
            "\1\u0099\1\u0098\1\u0097",
            "\1\u009c\1\u009b\1\u009a",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "205:1: hprim : ( hprim_oru_2_2 | hprim_oru_2_1 | hprim_oru_2_0 | hprim_orm_2_2 | hprim_orm_2_1 | hprim_orm_2_0 | hprim_ora_2_2 | hprim_ora_2_1 | hprim_ora_2_0 | hprim_adm_2_2 | hprim_adm_2_1 | hprim_adm_2_0 );";
        }
    }
 

    public static final BitSet FOLLOW_hprim_oru_2_2_in_hprim68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_1_in_hprim72 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_oru_2_0_in_hprim76 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_2_in_hprim82 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_1_in_hprim86 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_orm_2_0_in_hprim90 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_2_in_hprim96 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_1_in_hprim100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_ora_2_0_in_hprim104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_2_in_hprim110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_1_in_hprim114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_hprim_adm_2_0_in_hprim118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_oru_in_hprim_oru_2_2136 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_2140 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_2145 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_2149 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_2154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_oru_in_hprim_oru_2_1171 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_1175 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_1180 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_1184 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_1189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_oru_in_hprim_oru_2_0206 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_oru_in_hprim_oru_2_0210 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_oru_2_0215 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_oru_2_0219 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_oru_2_0224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_ora_in_hprim_ora_2_2242 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_2246 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_2251 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_2255 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_2260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_ora_in_hprim_ora_2_1277 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_1281 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_1286 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_1290 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_1295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_ora_in_hprim_ora_2_0312 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_ora_in_hprim_ora_2_0316 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_ora_2_0321 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_ora_2_0325 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_ora_2_0330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_orm_in_hprim_orm_2_2348 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_2352 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_2357 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_2361 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_2366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_orm_in_hprim_orm_2_1383 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_1387 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_1392 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_1396 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_1401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_orm_in_hprim_orm_2_0418 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_orm_in_hprim_orm_2_0422 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_orm_2_0427 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_orm_2_0431 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_orm_2_0436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_adm_in_hprim_adm_2_2454 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_2458 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_2463 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_2467 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_2472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_adm_in_hprim_adm_2_1489 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_1493 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_1498 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_1502 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_1507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_adm_in_hprim_adm_2_0524 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_adm_in_hprim_adm_2_0528 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_adm_2_0533 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_adm_2_0537 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_adm_2_0542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_2_fac_in_hprim_fac_2_2560 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_2564 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_2569 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_2573 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_2578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_1_fac_in_hprim_fac_2_1595 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_1599 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_1604 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_1608 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_1613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_h2_0_fac_in_hprim_fac_2_0630 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_p_fac_in_hprim_fac_2_0634 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_l_in_hprim_fac_2_0639 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_CR_in_hprim_fac_2_0643 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_hprim_fac_2_0648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_orm667 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_orm670 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_obr_orm_in_body_p_orm676 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obr_in_body_obr_orm696 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_obr_orm699 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_obx_orm_in_body_obr_orm706 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_obx_orm726 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_obx_orm729 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_ora753 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_ora756 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_ap_ora_in_body_p_ora762 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_ap_ora781 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_ap_ora784 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_ac_ora_in_body_ap_ora790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_body_ac_ora_second_level_in_body_ac_ora808 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_obr_ora_in_body_ac_ora813 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_ac_ora_second_level832 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_ac_ora_second_level835 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obr_in_body_obr_ora856 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_obr_ora859 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_obx_ora_in_body_obr_ora866 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_obx_ora886 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_obx_ora889 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_oru913 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_p_oru916 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_obr_oru_in_body_p_oru922 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obr_in_body_obr_oru942 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_obr_oru945 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_obx_oru_in_body_obr_oru952 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_obx_in_body_obx_oru972 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_obx_oru975 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_adm996 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_adm999 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_ap_adm_in_body_p_adm1005 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_ap_adm1024 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_ap_adm1027 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_ac_adm_in_body_ap_adm1033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_ac_adm1051 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_ac_adm1054 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_p_in_body_p_fac1075 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_p_fac1078 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_ap_fac_in_body_p_fac1084 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ap_in_body_ap_fac1103 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_ap_fac1106 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_ac_fac_in_body_ap_fac1112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_body_ac_fac_second_level_in_body_ac_fac1130 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_fac_fac_in_body_ac_fac1135 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_ac_in_body_ac_fac_second_level1154 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_ac_fac_second_level1157 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_fac_in_body_fac_fac1178 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_line_c_in_body_fac_fac1181 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_body_reg_fac_in_body_fac_fac1188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_line_reg_in_body_reg_fac1207 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_reg_fac1210 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_body_act_fac_in_body_reg_fac1217 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_act_in_body_act_fac1237 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_line_c_in_body_act_fac1240 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_delimiters_in_start_line_h1262 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1266 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1268 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1273 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_start_line_h1275 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1280 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_start_line_h1282 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_start_line_h1287 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_start_line_h1289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1301 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_midd_line_h1303 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1308 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1310 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1315 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_2_in_midd_line_h1317 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1322 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_midd_line_h1324 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_midd_line_h1329 = new BitSet(new long[]{0x0000000000240080L});
    public static final BitSet FOLLOW_spec_const_7_12_in_midd_line_h1331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_oru1344 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1348 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_2_oru1350 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_oru1355 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1359 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_oru1361 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1366 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_oru1368 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_oru1373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_oru1386 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1390 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_1_oru1392 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_oru1397 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1401 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_oru1403 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1408 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_oru1410 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_oru1415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_oru1427 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1431 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORU_in_line_h2_0_oru1433 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_oru1438 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1442 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_oru1444 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1449 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_oru1451 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_oru1456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_orm1468 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1472 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_2_orm1474 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_orm1479 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1483 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_orm1485 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1490 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_orm1492 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_orm1497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_orm1508 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1512 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_1_orm1514 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_orm1519 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1523 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_orm1525 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1530 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_orm1532 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_orm1537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_orm1548 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1552 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORM_in_line_h2_0_orm1554 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_orm1559 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1563 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_orm1565 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1570 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_orm1572 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_orm1577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_ora1589 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1593 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_2_ora1595 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_ora1600 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1604 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_ora1606 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1611 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_ora1613 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_ora1618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_ora1629 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1633 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_1_ora1635 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_ora1640 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1644 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_ora1646 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1651 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_ora1653 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_ora1658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_ora1669 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1673 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ORA_in_line_h2_0_ora1675 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_ora1680 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1684 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_ora1686 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1691 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_ora1693 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_ora1698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_adm1710 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1714 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_2_adm1716 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_adm1721 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1725 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_adm1727 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1732 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_adm1734 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_adm1739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_adm1750 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm1754 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_1_adm1756 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_adm1761 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm1765 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_adm1767 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm1772 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_adm1774 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_adm1779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_adm1790 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm1794 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_ADM_in_line_h2_0_adm1796 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_adm1801 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm1805 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_adm1807 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm1812 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_adm1814 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_adm1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_2_fac1831 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac1835 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_2_fac1837 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_2_fac1842 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac1846 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_2_in_line_h2_2_fac1848 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac1853 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_2_fac1855 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_2_fac1860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_1_fac1871 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac1875 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_1_fac1877 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_1_fac1882 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac1886 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_1_in_line_h2_1_fac1888 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac1893 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_1_fac1895 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_1_fac1900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_start_line_h_in_line_h2_0_fac1911 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac1915 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_spec_const_7_7_contexte_FAC_in_line_h2_0_fac1917 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_midd_line_h_in_line_h2_0_fac1922 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac1926 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_spec_const_7_13_version_2_0_in_line_h2_0_fac1928 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac1933 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_h2_0_fac1935 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_h2_0_fac1940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ap1953 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ap1955 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_ap1957 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1964 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap1966 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1971 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap1973 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1978 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap1980 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1985 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap1987 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1992 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ap1994 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap1999 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2001 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2006 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2008 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2013 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2015 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2020 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2022 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2027 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2029 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2034 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2036 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2041 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2043 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2048 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ap2050 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2055 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_mandatory_6_in_line_ap2057 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2062 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2064 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2069 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_ap2071 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2077 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_ap2079 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2086 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_ap2088 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2096 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2098 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2107 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2109 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2119 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ap2121 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2132 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ap2134 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2146 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ap2148 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ap2160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_ac2187 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_ac2189 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_ac2191 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2198 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_ac2200 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2205 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac2207 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2212 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_ac2214 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2219 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_ac2221 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2226 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_ac2228 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2233 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac2235 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2240 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_ac_8_in_line_ac2242 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2248 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_ac2250 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2257 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_ac2259 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_ac2266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_act2283 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_act2285 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_act2287 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_line_act2289 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2296 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_act2298 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2303 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_act2305 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2310 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act2312 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2317 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act2319 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2324 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_mandatory_in_line_act2326 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2331 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act2333 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2338 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_act2340 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2345 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_act2347 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2352 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_act_10_in_line_act2354 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2359 = new BitSet(new long[]{0x0000000000080800L});
    public static final BitSet FOLLOW_spec_act_11_in_line_act2361 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_act2366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_fac2379 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_line_fac2381 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_line_fac2383 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_fac2385 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2392 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_fac2394 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2399 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac2401 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2406 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_fac2408 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2413 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_fac2415 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2421 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac2423 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2430 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_fac_6_in_line_fac2432 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2440 = new BitSet(new long[]{0x0000020000030000L});
    public static final BitSet FOLLOW_spec_on_optionnal_in_line_fac2442 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_fac2450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_p2471 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_line_p2473 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2480 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_p2482 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2487 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_8_3_in_line_p2489 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2494 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2496 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2502 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2504 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2511 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2513 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2521 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2523 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2532 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p2534 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2544 = new BitSet(new long[]{0x0000020000408200L});
    public static final BitSet FOLLOW_spec_const_sexe_in_line_p2546 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2557 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p2559 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2571 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2573 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2586 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2588 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2602 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_p2604 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2643 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p2645 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p2649 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_p2651 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2669 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2671 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2688 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2690 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2723 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p2725 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2760 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_p2762 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2782 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2784 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p2788 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_p2790 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2813 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2815 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p2819 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2821 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2845 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2847 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2870 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2872 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2896 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p2898 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2923 = new BitSet(new long[]{0x000202FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p2925 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_p2929 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p2931 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2959 = new BitSet(new long[]{0x0000020000069100L});
    public static final BitSet FOLLOW_spec_const_8_25_in_line_p2961 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p2988 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_8_in_line_p2990 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3043 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p3045 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3074 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_p3076 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3133 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p3135 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3194 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p3196 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3228 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p3230 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3293 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_p3295 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3329 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p3331 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3366 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_p3368 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_p3403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_reg3476 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_reg3478 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_line_reg3480 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_CHARG_in_line_reg3482 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3489 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_reg3491 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3496 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_line_reg3498 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3503 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_spec_reg_4_in_line_reg3505 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3510 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_spec_p_or_m_in_line_reg3512 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3517 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_mandatory_in_line_reg3519 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3528 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg3530 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3537 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_reg3539 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_reg3546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obr3562 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obr3564 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obr3566 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_line_obr3568 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3575 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obr3577 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3582 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_3_in_line_obr3584 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3589 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3591 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3596 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3598 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr3602 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3604 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3614 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3616 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr3620 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3622 = new BitSet(new long[]{0x0002020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3629 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr3631 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3636 = new BitSet(new long[]{0x000200FFC0000000L});
    public static final BitSet FOLLOW_spec_non_sized_9_8_in_line_obr3638 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3643 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr3645 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3653 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3655 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3660 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr3662 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3670 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3672 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3681 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3683 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3690 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3692 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3700 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr3702 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3711 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_9_16_in_line_obr3713 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3723 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obr3725 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3736 = new BitSet(new long[]{0x0003E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_tn_in_line_obr3738 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3750 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3752 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3765 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3767 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3781 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3783 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3798 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr3800 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3816 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr3818 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3835 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr3837 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3855 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_2_in_line_obr3857 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3876 = new BitSet(new long[]{0x00000200020E92C0L});
    public static final BitSet FOLLOW_spec_const_9_26_in_line_obr3878 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3898 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr3900 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3921 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_obr3923 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3945 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr3947 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr3951 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr3953 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr3978 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_4_in_line_obr3980 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4004 = new BitSet(new long[]{0x0000020001040040L});
    public static final BitSet FOLLOW_spec_const_9_31_in_line_obr4006 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4053 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr4055 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obr4059 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obr4061 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4089 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr4091 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4118 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr4120 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4148 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr4150 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4179 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_cna_in_line_obr4181 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4211 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obr4213 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obr4244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_obx4306 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_line_obx4308 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_line_obx4310 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_line_obx4312 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4319 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_obx4321 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4326 = new BitSet(new long[]{0x00000000003506D0L});
    public static final BitSet FOLLOW_spec_const_10_3_nm_in_line_obx4334 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4343 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4345 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4355 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4357 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4368 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx4370 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4374 = new BitSet(new long[]{0x0003C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx4376 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_ce_in_line_obx4406 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4415 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4417 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4427 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4429 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4440 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx4442 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4446 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx4448 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_fic_in_line_obx4478 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4487 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4489 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4499 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4501 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4512 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx4514 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4518 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_in_line_obx4520 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_st_in_line_obx4550 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4559 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4561 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4571 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4573 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4584 = new BitSet(new long[]{0x0003E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx4586 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4590 = new BitSet(new long[]{0x0003E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx4592 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_gc_in_line_obx4622 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4631 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4633 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4643 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4645 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4656 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx4658 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4662 = new BitSet(new long[]{0x0001C4FFC0000000L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_nm_optionnal_2_in_line_obx4664 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_tx_in_line_obx4694 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4703 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4705 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4715 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4717 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4728 = new BitSet(new long[]{0x0003E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx4730 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4734 = new BitSet(new long[]{0x0003E6FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_6_tx_in_line_obx4736 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_10_3_std_in_line_obx4766 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4775 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_10_4_in_line_obx4777 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4787 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4789 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx4800 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4802 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx4806 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx4808 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_line_obx2_1_post10_6_in_line_obx4821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64842 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64844 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64853 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64855 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_64859 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64861 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64873 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_64875 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_64879 = new BitSet(new long[]{0x000202000DD9D8B0L});
    public static final BitSet FOLLOW_spec_const_10_9_in_line_obx2_1_post10_64881 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64894 = new BitSet(new long[]{0x0001C2FFC0000000L});
    public static final BitSet FOLLOW_nm_sized_optionnal_in_line_obx2_1_post10_64896 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64908 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_64910 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_obx2_1_post10_64914 = new BitSet(new long[]{0x0002020000190010L});
    public static final BitSet FOLLOW_spec_const_10_11_in_line_obx2_1_post10_64916 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64931 = new BitSet(new long[]{0x00000200024C12C0L});
    public static final BitSet FOLLOW_spec_const_10_12_in_line_obx2_1_post10_64933 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64948 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_64950 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64966 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_64968 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_64984 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_line_obx2_1_post10_64986 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_65003 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl1_st_optionnal_6_in_line_obx2_1_post10_65005 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_65023 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_obx2_1_post10_65025 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_obx2_1_post10_65028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_c5067 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_line_c5069 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c5073 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_mandatory_in_line_c5075 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c5080 = new BitSet(new long[]{0x0000020000044000L});
    public static final BitSet FOLLOW_spec_const_12_3_in_line_c5082 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c5087 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c5089 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_line_c5093 = new BitSet(new long[]{0x0003E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_c5095 = new BitSet(new long[]{0x0002020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_c5104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CR_in_line_l5122 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_line_l5124 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5129 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l5131 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5138 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_spec_const_race_in_line_l5140 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5148 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l5150 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5159 = new BitSet(new long[]{0x000002FFC0000000L});
    public static final BitSet FOLLOW_nm_integer_sized_optionnal_in_line_l5161 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5171 = new BitSet(new long[]{0x0001E2FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_line_l5173 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_DELIMITER1_in_line_l5176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HR_in_spec_act_115212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_RX_in_spec_act_115216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_act_115220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_plus_in_spec_p_or_m5238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_moins_in_spec_p_or_m5242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_85262 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_85267 = new BitSet(new long[]{0x0000000000200200L});
    public static final BitSet FOLLOW_spec_ac_8_2_in_spec_ac_85269 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_ac_85274 = new BitSet(new long[]{0x0000000000340000L});
    public static final BitSet FOLLOW_spec_ac_8_3_in_spec_ac_85276 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_ac_85281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TM_in_spec_ac_8_25304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_25308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FR_in_spec_ac_8_25312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PF_in_spec_ac_8_35332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_SS_in_spec_ac_8_35336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_TR_in_spec_ac_8_35340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_on_optionnal5359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_on_optionnal5363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_sexe5384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_sexe5388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_sexe5392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_0_in_spec_const_7_13_version_2_05429 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_05432 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_05434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_1_in_spec_const_7_13_version_2_15455 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_15458 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_15460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_const_7_13_1_version_2_2_in_spec_const_7_13_version_2_25479 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_const_7_13_version_2_25482 = new BitSet(new long[]{0x0000000000084040L});
    public static final BitSet FOLLOW_spec_const_7_13_2_in_spec_const_7_13_version_2_25484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_7_13_25503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_7_13_25507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_7_13_25511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORU_in_spec_const_7_7_contexte_ORU5529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORM_in_spec_const_7_7_contexte_ORM5547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ORA_in_spec_const_7_7_contexte_ORA5565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ADM_in_spec_const_7_7_contexte_ADM5583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_FAC_in_spec_const_7_7_contexte_FAC5603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_7_125622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_7_125626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charT_in_spec_const_7_125630 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PORT_in_spec_const_9_315650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_CART_in_spec_const_9_315654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WHLC_in_spec_const_9_315658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_WALK_in_spec_const_9_315662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_OP_in_spec_const_8_255683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_IP_in_spec_const_8_255687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ER_in_spec_const_8_255691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_PA_in_spec_const_8_255695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MP_in_spec_const_8_255699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_9_265720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_9_265724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charM_in_spec_const_9_265728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_9_265732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_9_265736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_9_265740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charO_in_spec_const_9_265744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_9_265750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_9_265754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_nm5775 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_spec_const_10_3_nm5777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_ce5798 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_CHARE_in_spec_const_10_3_ce5800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_spec_const_10_3_st5821 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_st5823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_gc5844 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_gc5846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_tx5868 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_spec_const_10_3_tx5870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_spec_const_10_3_fic5891 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_CHARI_in_spec_const_10_3_fic5893 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_fic5895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std5917 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std5919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std5925 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_spec_const_10_3_std5927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_spec_const_10_3_std5933 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std5935 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_spec_const_10_3_std5937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_spec_const_10_3_std5943 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std5945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_spec_const_10_3_std5953 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std5955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_spec_const_10_3_std5961 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std5963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std5971 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CHARB_in_spec_const_10_3_std5973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARG_in_spec_const_10_3_std5979 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_CHARN_in_spec_const_10_3_std5981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_106003 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_act_106007 = new BitSet(new long[]{0x0003E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_106009 = new BitSet(new long[]{0x0002040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_act_106016 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_act_106018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_66042 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_66048 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_66050 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_fac_66057 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_fac_66059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_reg_46086 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_reg_46091 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_reg_46093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_66117 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_66123 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_66125 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_66132 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_10_66134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_10_96162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charH_in_spec_const_10_96166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_LL_in_spec_const_10_96170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_HH_in_spec_const_10_96174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_inf_in_spec_const_10_96178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_symbol_sup_in_spec_const_10_96182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_96188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_96192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_AA_in_spec_const_10_96196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_Null_in_spec_const_10_96200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_96204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_96208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charB_in_spec_const_10_96212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charW_in_spec_const_10_96218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_96222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_96226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_96230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_MS_in_spec_const_10_96234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_VS_in_spec_const_10_96238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charA_in_spec_const_10_116259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charS_in_spec_const_10_116263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_116267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charN_in_spec_const_10_116271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charR_in_spec_const_10_126292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_10_126296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charF_in_spec_const_10_126300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charC_in_spec_const_10_126304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charI_in_spec_const_10_126308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charD_in_spec_const_10_126312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charX_in_spec_const_10_126319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charU_in_spec_const_10_126323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charP_in_spec_const_12_36344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_charL_in_spec_const_12_36348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_26368 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_26374 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_26376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_26399 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_26405 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_26407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46432 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46438 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46440 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46447 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46449 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_46457 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_46459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66488 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66494 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66496 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66503 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66505 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66513 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66515 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66524 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66526 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_mandatory_66536 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_mult_lvl1_st_mandatory_66538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66561 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66568 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66570 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66578 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66580 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66589 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66591 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66601 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66603 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_66614 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_66616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86649 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86655 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86657 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86664 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86666 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86674 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86676 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86685 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86687 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86697 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86699 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86710 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86712 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_st_optionnal_86724 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl1_st_optionnal_86726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36763 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_36769 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36771 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_36778 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_36780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66803 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66809 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66811 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66818 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66820 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66828 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66830 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66839 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66841 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_DELIMITER3_in_spec_sized_mult_lvl2_st_optionnal_66851 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_mult_lvl2_st_optionnal_66853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_26882 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_optionnal_26887 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_optionnal_in_spec_sized_mult_lvl1_nm_optionnal_26889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_26914 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_mult_lvl1_nm_mandatory_26919 = new BitSet(new long[]{0x0001C0FFC0000000L});
    public static final BitSet FOLLOW_nm_nonsized_mandatory_in_spec_sized_mult_lvl1_nm_mandatory_26921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna6944 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna6951 = new BitSet(new long[]{0x0001E8FFFFFFFFF0L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_6_in_spec_sized_cna6953 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_cna6961 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_cna6963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_mandatory_in_spec_sized_8_36995 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_37002 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_37004 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_8_37012 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_8_37014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_37054 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_37060 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_sized_optionnal_in_spec_sized_9_37062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_87087 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_non_sized_9_87094 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_ts_sized_optionnal_in_spec_non_sized_9_87096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_spec_sized_mult_lvl2_st_optionnal_3_in_spec_sized_9_167117 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_167123 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_167125 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_9_167132 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_9_167134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_nonsized_mandatory_in_spec_sized_10_47161 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_47167 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47169 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_47176 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47178 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_47186 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47188 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_47197 = new BitSet(new long[]{0x0001E4FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47199 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_DELIMITER2_in_spec_sized_10_47209 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_10_47211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_spec_10_6_tx_in_spec_sized_10_6_tx7246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn7268 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_REPETITEUR_in_spec_sized_tn7274 = new BitSet(new long[]{0x0001E0FFFFFFFFF0L});
    public static final BitSet FOLLOW_st_non_sized_optionnal_in_spec_sized_tn7276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_optionnal7304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_sized_mandatory7327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_non_sized_optionnal7349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_st_in_st_nonsized_mandatory7368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_optionnal7386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_sized_mandatory7409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_optionnal7431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_integer_in_nm_integer_sized_mandatory7459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_optionnal7482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_ts_in_ts_sized_mandatory7505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_mandatory7527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_nm_in_nm_nonsized_optionnal7545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_0_in_spec_const_7_13_1_version_2_07564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_1_in_spec_const_7_13_1_version_2_17582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_final_version_2_2_in_spec_const_7_13_1_version_2_27602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_content_spec_10_6_in_final_spec_10_6_tx7619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_content_spec_10_67641 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_DELIMITER2_in_content_spec_10_67647 = new BitSet(new long[]{0x0001E4FFFFFFFFF2L});
    public static final BitSet FOLLOW_content_spec_10_6_in_content_spec_10_67658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7670 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7672 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7676 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7678 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7680 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7684 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7687 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7689 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7694 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7696 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7698 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7702 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7705 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_ts7707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_character_in_final_st7726 = new BitSet(new long[]{0x0001E0FFFFFFFFF2L});
    public static final BitSet FOLLOW_chiffre_in_final_nm7755 = new BitSet(new long[]{0x000100FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm7759 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm7761 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_POINT_in_final_nm7771 = new BitSet(new long[]{0x000000FFC0000000L});
    public static final BitSet FOLLOW_chiffre_in_final_nm7773 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_chiffre_in_final_nm_integer7790 = new BitSet(new long[]{0x000000FFC0000002L});
    public static final BitSet FOLLOW_CHARA_in_final_ADM7802 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_CHARD_in_final_ADM7804 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ADM7806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORA7814 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORA7816 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_ORA7818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORU7826 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORU7828 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_CHARU_in_final_ORU7830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_ORM7838 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ORM7840 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_ORM7842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FAC7850 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_FAC7852 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_FAC7854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_CART7863 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_CART7865 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_CART7867 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_CART7869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PORT7877 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_CHARO_in_final_PORT7879 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_PORT7881 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_CHART_in_final_PORT7883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WHLC7891 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_WHLC7893 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WHLC7895 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_CHARC_in_final_WHLC7897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_WALK7905 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_WALK7907 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_WALK7909 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_CHARK_in_final_WALK7911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_LL7920 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_CHARL_in_final_LL7922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_AA7930 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_AA7932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HH7940 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_CHARH_in_final_HH7942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MS7950 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_MS7952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARV_in_final_VS7960 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_VS7962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_Null7970 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_CHARu_in_final_Null7972 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null7974 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_CHARl_in_final_Null7976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_INF_in_final_symbol_inf7984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_SYMBOL_SUP_in_final_symbol_sup7992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_final_symbol_plus8000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MOINS_in_final_symbol_moins8008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_08017 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_08019 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_08021 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_CHIFFRE0_in_final_version_2_08023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_18031 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_18033 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_18035 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_CHIFFRE1_in_final_version_2_18037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_version_2_28045 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_28047 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_POINT_in_final_version_2_28049 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_CHIFFRE2_in_final_version_2_28051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_OP8060 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_OP8062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_IP8070 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_IP8072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARE_in_final_ER8080 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_ER8082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PA8090 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_CHARA_in_final_PA8092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_MP8100 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_CHARP_in_final_MP8102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TM8110 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CHARM_in_final_TM8112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_TR8120 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_TR8122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_FR8130 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_FR8132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_PF8140 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_CHARF_in_final_PF8142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_SS8150 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_CHARS_in_final_SS8152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_RX8160 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_CHARX_in_final_RX8162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_HR8170 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_CHARR_in_final_HR8172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARA_in_final_charA8181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARB_in_final_charB8189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARC_in_final_charC8197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARD_in_final_charD8205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARF_in_final_charF8213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARH_in_final_charH8221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARI_in_final_charI8229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARL_in_final_charL8237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARM_in_final_charM8245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARN_in_final_charN8253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARO_in_final_charO8261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARP_in_final_charP8269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARR_in_final_charR8277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARS_in_final_charS8285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHART_in_final_charT8293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARU_in_final_charU8301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARW_in_final_charW8309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARX_in_final_charX8317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELIMITERS_in_delimiters8338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lettre_in_character8354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_chiffre_in_character8358 = new BitSet(new long[]{0x0000000000000002L});

}